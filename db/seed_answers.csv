Id,PostTypeId,AcceptedAnswerId,ParentId,CreationDate,DeletionDate,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditorDisplayName,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,ClosedDate,CommunityOwnedDate
"16162511","2","","572549","2013-04-23 06:32:26","","151","","<p>With <a href=""https://github.com/git/git/blob/f99a38c0121456822f8a9dfb7928eefceaa98201/Documentation/RelNotes/2.0.0.txt#L32-L36"" rel=""noreferrer""><strong>Git 2.0, <code>git add -A</code> is default: <code>git add .</code> equals <code>git add -A .</code></strong></a>.  </p>

<blockquote>
  <p><code>git add &lt;path&gt;</code> is the same as ""<code>git add -A &lt;path&gt;</code>"" now, so that
  ""<code>git add dir/</code>"" will notice paths you removed from the directory and
  record the removal.<br>
  In older versions of Git, ""<code>git add &lt;path&gt;</code>"" used to ignore removals.  </p>
  
  <p>You can say ""<code>git add --ignore-removal &lt;path&gt;</code>"" to
  add only added or modified paths in <code>&lt;path&gt;</code>, if you really want to.</p>
</blockquote>

<p><code>git add</code> is like <code>git add :/</code> (<a href=""https://stackoverflow.com/a/31951899/6309"">add everything from top git repo folder</a>).<br>
Note that git 2.7 (Nov. 2015) will allow you to add a folder named ""<code>:</code>""!<br>
See <a href=""https://github.com/git/git/commit/29abb33978f713cd0a5cc3687bf61077b0928840"" rel=""noreferrer"">commit 29abb33</a> (25 Oct 2015) by <a href=""https://github.com/gitster"" rel=""noreferrer"">Junio C Hamano (<code>gitster</code>)</a>.  </p>

<hr>

<p>Note that <a href=""https://github.com/git/git/blob/master/Documentation/RelNotes/1.8.3.txt#L19-L30"" rel=""noreferrer"">starting git 2.0 (Q1 or Q2 2014)</a>, when talking about <strong><code>git add .</code></strong> (current path within the working tree), you must use '<code>.</code>' in the other <code>git add</code> commands as well.</p>

<p>That means:</p>

<blockquote>
  <p>""<code>git add -A .</code>"" is equivalent to ""<code>git add .; git add -u .</code>""</p>
</blockquote>

<p>(Note the extra '<code>.</code>' for <code>git add -A</code> and <code>git add -u</code>)</p>

<p>Because <code>git add -A</code> or <code>git add -u</code> would operate (starting git 2.0 only) on the <strong>entire working tree</strong>, and not just on the current path.</p>

<blockquote>
  <p>Those commands will <strong>operate on the entire tree in Git 2.0 for consistency with ""<code>git commit -a</code>"" and other commands</strong>.
  Because there will be no mechanism to make ""<code>git add -u</code>"" behave as if ""<code>git add -u .</code>"", it is important for those who are used to ""<code>git add -u</code>"" (without pathspec) updating the index only for paths in the current subdirectory to start training their fingers to explicitly say ""<code>git add -u .</code>"" when they mean it before Git 2.0 comes.</p>
  
  <p><strong>A warning is issued when these commands are run without a pathspec and when you have local changes outside the current directory</strong>, because the behaviour in Git 2.0 will be different
  from today's version in such a situation.</p>
</blockquote>
","6309","","-1","","2017-05-23 12:10:45","2015-10-31 07:11:54","","","","3","","",""
"22894343","2","","572549","2014-04-06 12:56:26","","32","","<p>Late to the party but this question also deserves a more distilled quick answer. </p>

<pre><code>git add -A 
</code></pre>

<p>Does both below (same as <em>git add --all</em>)</p>

<pre><code>git add . 
</code></pre>

<p>Stages new + modified files</p>

<pre><code>git add -u 
</code></pre>

<p>Stages modified + deleted files</p>
","1781318","","1781318","","2014-04-23 11:48:01","2014-04-23 11:48:01","","","","3","","",""
"26343584","2","","572549","2014-10-13 15:29:52","","24","","<p><a href=""https://git.kernel.org/cgit/git/git.git/tree/Documentation/RelNotes/2.0.0.txt"">Things changed</a> with Git 2.0:</p>

<ul>
<li><code>-A</code> is now the default</li>
<li>the old behavior is now available with <code>--ignore-removal</code></li>
<li><code>git add -u</code> and <code>git add -A</code> in a subdirectory without paths on the command line operate on the entire tree</li>
</ul>

<p>So for git 2 the answer is:</p>

<ul>
<li><code>git add .</code> and <code>git add -A .</code> add new/modified/deleted files in the current directory</li>
<li><code>git add --ignore-removal .</code> adds new/modified files in the current directory</li>
<li><code>git add -u .</code> adds modified/deleted files in the current directory</li>
<li>without the dot, add all files in the project regardless of the current directory</li>
</ul>
","2032514","","","","","2014-10-13 15:29:52","","","","1","","",""
"29464414","2","","572549","2015-04-06 02:03:33","","11","","<p>Finally I think I get this, many thanks to you all. I hope this may add some more clarity.</p>

<pre><code>!The syntax is
git add &lt;limiters&gt; &lt;pathspec&gt;
! Aka
git add (nil/-u/-A) (nil/./pathspec)
</code></pre>

<p>Limiters may be -u or -A or nil. </p>

<p>Pathspec may be a filepath or dot, '.' to indicate the current directory. </p>

<p>Important background knowledge about how git 'adds'.</p>

<ul>
<li>Invisible files, those prefixed with a dot, (dotfiles) are never automatically recognized by Git. They are never even listed as 'untracked'.</li>
<li>Empty folders are never added by git. They are never even listed as 'untracked'. (A workaround is to add a blank file, possibly invisible, to the tracked files.)</li>
<li>Git status will not display subfolder information, ie untracked files, unless at least one file in that subfolder is tracked. Before such time, git considers the entire folder out of scope, a la 'empty'. It is empty of tracked items.</li>
<li>Specifying a filespec = '.' (dot), or the current directory, is not recursive unless -A is also specified. Dot refers strictly to the current directory - it omits paths found above and below.</li>
</ul>

<p>Now, given that knowledge, we can apply the answers above.</p>

<p>The limiters are as follows.</p>

<ul>
<li>-u = --update = subset to tracked files => Add = No; Change = Yes; Delete= Yes. => iff the item is tracked.</li>
<li>-A = --all (no such -a, which gives syntax error) = superset of all untracked/tracked files , unless in Git &lt; 2.0, wherein if the dot filespec is given, then only that particular folder is considered. => iff the item is recognized, git add -A will find it and add it.</li>
</ul>

<p>The pathspec is as follows.</p>

<ul>
<li>In Git &lt;2.0, for the two limiters (update and all), the new default is to operate on the entire working tree, instead of the current path (git &lt;= 1.9), </li>
<li>However, in v2.0, the operation can be limited to the current path: just add the explicit dot suffix (which is also valid in Git &lt;=1.9);</li>
</ul>

<p><code>git add -A .</code></p>

<p><code>git add -u .</code></p>

<p>In conclusion, my policy is ; </p>

<ul>
<li>1.Ensure any hunks/files to be added are accounted for in git status. </li>
<li>1A.If any items are missing, due to invisible files/folders, add them separately.</li>
<li>2.Have a good gitignore so that normally only files of interest are untracked and/or unrecognized.</li>
<li>3.From the top level of the repo, ""git add -A""  to add all items. This works in all versions of git.</li>
<li>4.Remove any desired items from the index if desired.</li>
<li>6.If there is a big bug, do 'git reset' to clear the index entirely.</li>
</ul>
","242110","","884521","","2016-11-21 14:45:57","2016-11-21 14:45:57","","","","0","","",""
"37621823","2","","572549","2016-06-03 19:12:18","","8","","<p><code>git add .</code> equals <code>git add -A .</code> adds files to index only from current and children folders.</p>

<p><code>git add -A</code> adds files to index from all folders in working tree.</p>

<p>P.S.: information relates to Git 2.0.</p>
","4854931","","","","","2016-06-03 19:12:18","","","","0","","",""
"49330365","2","","572549","2018-03-16 22:32:31","","21","","<p>In <strong>Git 2.x</strong>:</p>

<ul>
<li><p>If you are located directly at the <em>working directory</em>, then <code>git add -A</code> and <code>git add .</code> work without the difference.</p></li>
<li><p>If you are in any subdirectory of the <em>working directory</em>, <code>git add -A</code> will add all files from the entire <em>working directory</em>, and <code>git add .</code> will add files from your <em>current directory</em>.</p></li>
</ul>

<p>And that's all.</p>
","4217744","","4217744","","2019-01-10 10:42:23","2019-01-10 10:42:23","","","","0","","",""
"53197803","2","","572549","2018-11-07 21:05:44","","1","","<p>The -A option adds, modifies, and removes index entries to match the working tree.</p>

<p>In GIT 2 the <code>-A</code> option is now default. </p>

<p>When a <code>.</code> is added that limits the scope of the update to the directory you are currently in, as per the <a href=""https://git-scm.com/docs/git-add#git-add--A"" rel=""nofollow noreferrer"">Git documentation</a> </p>

<blockquote>
  <p>If no <code>&lt;pathspec&gt;</code> is given when -A option is used, all files in the entire working tree are updated (old versions of Git used to limit the update to the current directory and its subdirectories).</p>
</blockquote>

<p>One thing that I would add is that if the <code>--interactive</code> or <code>-p</code> mode is used then git add will behave as if the update (<code>-u</code>) flag was used and not add new files</p>
","5476516","","5476516","","2018-11-07 21:13:27","2018-11-07 21:13:27","","","","0","","",""
"54914915","2","","572549","2019-02-27 21:40:06","","0","","<p>Both <code>git add .</code> and <code>git add -A</code> will stage all new, modified and deleted files in the newer versions of <code>git</code>.</p>

<p>The difference is that <code>git add -A</code> stages files in ""higher, current and subdirectories"" that belong to your working git repository. But doing a <code>git add .</code> only stages files in current directory and subdirectories following it (NOT the files lying outside i.e. higher directories).</p>

<p>Here's an example:</p>

<pre><code>/my-repo
  .git/
  subfolder/
    nested-file.txt
  rootfile.txt
</code></pre>

<p>If your current working directory is <code>/my-repo</code>, and you do <code>rm rootfile.txt</code>, then <code>cd subfolder</code>, followed by <code>git add .</code>, then it will NOT stage the deleted file. But doing <code>git add -A</code> will certainly stage this change no matter where you perform the command from.</p>

<p>Hope this clears out the difference.</p>
","8350980","","","","","2019-02-27 21:40:06","","","","0","","",""
"948142","2","","948135","2009-06-04 01:20:35","","196","","<p>It is done by <a href=""http://www.techotopia.com/index.php/The_Ruby_case_Statement"" rel=""noreferrer"">case</a> in Ruby. Also see <a href=""http://en.wikipedia.org/wiki/Switch_statement#Ruby"" rel=""noreferrer"">this article on Wikipedia</a>.</p>

<p>Quoted:</p>

<pre><code>case n
when 0
  puts 'You typed zero'
when 1, 9
  puts 'n is a perfect square'
when 2
  puts 'n is a prime number'
  puts 'n is an even number'
when 3, 5, 7
  puts 'n is a prime number'
when 4, 6, 8
  puts 'n is an even number'
else
  puts 'Only single-digit numbers are allowed'
end
</code></pre>

<p>Another example:</p>

<pre><code>score = 70

result = case score
   when 0..40 then ""Fail""
   when 41..60 then ""Pass""
   when 61..70 then ""Pass with Merit""
   when 71..100 then ""Pass with Distinction""
   else ""Invalid Score""
end

puts result
</code></pre>

<p>On around page 123 (I am using Kindle) of <em>The Ruby Programming Lanugage</em> (1st Edition, O'Reilly), it says the <code>then</code> keyword following the <code>when</code> clauses can be replaced with a newline or semicolon (just like in the <code>if then else</code> syntax). (Ruby 1.8 also allows a colon in place of <code>then</code>... But this syntax is no longer allowed in Ruby 1.9.)</p>
","325418","","63550","","2015-08-08 02:40:33","2015-08-08 02:40:33","","","","2","","",""
"948157","2","","948135","2009-06-04 01:22:57","","2438","","<p>Ruby uses the <a href=""http://ruby-doc.com/docs/ProgrammingRuby/html/tut_expressions.html#S5"" rel=""noreferrer""><code>case</code> expression</a> instead.</p>

<pre><code>case x
when 1..5
  ""It's between 1 and 5""
when 6
  ""It's 6""
when ""foo"", ""bar""
  ""It's either foo or bar""
when String
  ""You passed a string""
else
  ""You gave me #{x} -- I have no idea what to do with that.""
end
</code></pre>

<p>Ruby compares the object in the <code>when</code> clause with the object in the <code>case</code> clause using the <code>===</code> operator. For example, <code>1..5 === x</code>, and not <code>x === 1..5</code>. </p>

<p>This allows for sophisticated <code>when</code> clauses as seen above. Ranges, classes and all sorts of things can be tested for rather than just equality.</p>

<p>Unlike <code>switch</code> statements in many other languages, Ruby’s <code>case</code> does not have <a href=""https://en.wikipedia.org/wiki/Switch_statement#Fallthrough"" rel=""noreferrer"">fall-through</a>, so there is no need to end each <code>when</code> with a <code>break</code>. You can also specify multiple matches in a single <code>when</code> clause like <code>when ""foo"", ""bar""</code>.</p>
","50742","","2797137","","2018-04-04 09:03:49","2018-04-04 09:03:49","","","","3","","",""
"5694333","2","","948135","2011-04-17 15:20:14","","409","","<p><code>case...when</code> behaves a bit unexpectedly when handling classes. This is due to the fact that it uses the <code>===</code> operator.</p>

<p>That operator works as expected with literals, but not with classes:</p>

<pre><code>1 === 1           # =&gt; true
Fixnum === Fixnum # =&gt; false
</code></pre>

<p>This means that if you want to do a <code>case ... when</code> over an object's class, this will not work:</p>

<pre><code>obj = 'hello'
case obj.class
when String
  print('It is a string')
when Fixnum
  print('It is a number')
else
  print('It is not a string')
end
</code></pre>

<p>Will print ""It is not a string"".</p>

<p>Fortunately, this is easily solved. The <code>===</code> operator has been defined so that it returns <code>true</code> if you use it with a class and supply an instance of that class as the second operand:</p>

<pre><code>Fixnum === 1 # =&gt; true
</code></pre>

<p>In short, the code above can be fixed by removing the <code>.class</code>:</p>

<pre><code>obj = 'hello'
case obj  # was case obj.class
when String
  print('It is a string')
when Fixnum
  print('It is a number')
else
  print('It is not a string')
end
</code></pre>

<p>I hit this problem today while looking for an answer, and this was the first appearing page, so I figured it would be useful to others in my same situation.</p>
","312586","","513951","","2016-04-11 19:04:00","2016-04-11 19:04:00","","","","1","","",""
"12914530","2","","948135","2012-10-16 12:17:41","","49","","<p>You can use regular expressions, such as finding a type of string:</p>

<pre><code>case foo
when /^(true|false)$/
   puts ""Given string is boolean""
when /^[0-9]+$/ 
   puts ""Given string is integer""
when /^[0-9\.]+$/
   puts ""Given string is float""
else
   puts ""Given string is probably string""
end
</code></pre>

<p>Ruby's <code>case</code> will use the equality operand <code>===</code> for this (thanks @JimDeville). Additional information is available at ""<a href=""http://www.tutorialspoint.com/ruby/ruby_operators.htm"">Ruby Operators</a>"". This also can be done using @mmdemirbas example (without parameter), only this approach is cleaner for these types of cases.</p>
","776301","","128421","","2013-05-17 03:47:49","2013-05-17 03:47:49","","","","0","","",""
"17983076","2","","948135","2013-08-01 00:04:53","","65","","<p>In Ruby 2.0, you can also use lambdas in <code>case</code> statements, as follows:</p>

<pre><code>is_even = -&gt;(x) { x % 2 == 0 }

case number
when 0 then puts 'zero'
when is_even then puts 'even'
else puts 'odd'
end
</code></pre>

<p>You can also create your own comparators easily using a Struct with a custom <code>===</code></p>

<pre><code>Moddable = Struct.new(:n) do
  def ===(numeric)
    numeric % n == 0
  end
end

mod4 = Moddable.new(4)
mod3 = Moddable.new(3)

case number
when mod4 then puts 'multiple of 4'
when mod3 then puts 'multiple of 3'
end
</code></pre>

<p>(Example taken from ""<a href=""https://stackoverflow.com/questions/16662295/can-procs-be-used-with-case-statements-in-ruby-2-0"">Can procs be used with case statements in Ruby 2.0?</a>"".)</p>

<p>Or, with a complete class:</p>

<pre><code>class Vehicle
  def ===(another_vehicle)
    self.number_of_wheels == another_vehicle.number_of_wheels
  end
end

four_wheeler = Vehicle.new 4
two_wheeler = Vehicle.new 2

case vehicle
when two_wheeler
  puts 'two wheeler'
when four_wheeler
  puts 'four wheeler'
end
</code></pre>

<p>(Example taken from ""<a href=""http://www.skorks.com/2009/08/how-a-ruby-case-statement-works-and-what-you-can-do-with-it/"" rel=""noreferrer"">How A Ruby Case Statement Works And What You Can Do With It</a>"".)</p>
","473709","","-1","","2017-05-23 11:55:11","2013-09-11 15:21:22","","","","0","","",""
"18089662","2","","948135","2013-08-06 20:18:37","","8","","<p>Lots of great answers but I thought I would add one factoid.. If you are attempting to compare objects (Classes) make sure you have a space ship method (not a joke) or understand how they are being compared</p>

<p>Here is a good discussion on the topic
<a href=""http://www.skorks.com/2009/09/ruby-equality-and-object-comparison/"" rel=""noreferrer"">http://www.skorks.com/2009/09/ruby-equality-and-object-comparison/</a></p>
","1228358","","","","","2013-08-06 20:18:37","","","","1","","",""
"21233188","2","","948135","2014-01-20 11:45:28","","19","","<p>Multi-value when and no-value case:</p>

<pre><code>print ""Enter your grade: ""
grade = gets.chomp
case grade
when ""A"", ""B""
  puts 'You pretty smart!'
when ""C"", ""D""
  puts 'You pretty dumb!!'
else
  puts ""You can't even use a computer!""
end
</code></pre>

<p>And a <a href=""http://en.wikipedia.org/wiki/Regular_expression"">regular expression</a> solution here:</p>

<pre><code>print ""Enter a string: ""
some_string = gets.chomp
case
when some_string.match(/\d/)
  puts 'String has numbers'
when some_string.match(/[a-zA-Z]/)
  puts 'String has letters'
else
  puts 'String has no numbers or letters'
end
</code></pre>
","934243","","63550","","2015-08-08 02:45:03","2015-08-08 02:45:03","","","","6","","",""
"24546727","2","","948135","2014-07-03 06:46:12","","30","","<p>If you are eager to know how to use an OR condition in a Ruby switch case:</p>

<p>So, in a <code>case</code> statement, a <code>,</code> is the equivalent of <code>||</code> in an <code>if</code> statement.</p>

<pre><code>case car
   when 'Maruti', 'Hyundai'
      # Code here
end
</code></pre>

<p><a href=""http://www.skorks.com/2009/08/how-a-ruby-case-statement-works-and-what-you-can-do-with-it/"">Many other things you can do with a Ruby case statement</a></p>
","1133932","","63550","","2015-08-08 02:46:05","2015-08-08 02:46:05","","","","1","","",""
"24620053","2","","948135","2014-07-07 21:18:24","","1","","<p>I've started to use:</p>

<pre><code>a = ""secondcase""

var_name = case a
  when ""firstcase"" then ""foo""
  when ""secondcase"" then ""bar""
end

puts var_name
&gt;&gt; ""bar""
</code></pre>

<p>It helps compact code in some cases.</p>
","821304","","63550","","2015-08-08 02:46:39","2015-08-08 02:46:39","","","","1","","",""
"25915911","2","","948135","2014-09-18 14:48:15","","20","","<p>Depending on your case, you could prefer to use a hash of methods.</p>

<p>If there is a long list of when's and each of them has a concrete value to compare with (not an interval), it will be more effective to declare a hash of methods and then to call the relevant method from the hash like that.</p>

<pre><code># Define the hash
menu = {a: :menu1, b: :menu2, c: :menu2, d: :menu3}

# Define the methods
def menu1
  puts 'menu 1'
end

def menu2
  puts 'menu 2'
end

def menu3
  puts 'menu3'
end

# Let's say we case by selected_menu = :a
selected_menu = :a

# Then just call the relevant method from the hash
send(menu[selected_menu])
</code></pre>
","1832566","","63550","","2015-08-08 02:47:41","2015-08-08 02:47:41","","","","0","","",""
"35233112","2","","948135","2016-02-05 20:40:16","","27","","<p>It's called <code>case</code> and it works like you would expect, plus lots more fun stuff courtesy of <code>===</code> which implements the tests.</p>

<pre><code>case 5
  when 5
    puts 'yes'
  else
    puts 'else'
end
</code></pre>

<p>Now for some fun:</p>

<pre><code>case 5 # every selector below would fire (if first)
  when 3..7    # OK, this is nice
  when 3,4,5,6 # also nice
  when Fixnum  # or
  when Integer # or
  when Numeric # or
  when Comparable # (?!) or
  when Object  # (duhh) or
  when Kernel  # (?!) or
  when BasicObject # (enough already)
    ...
end
</code></pre>

<p>And it turns out you can also replace an arbitrary if/else chain (that is, even if the tests don't involve a common variable) with <code>case</code> by leaving out the initial <code>case</code> parameter and just writing expressions where the first match is what you want.</p>

<pre><code>case
  when x.nil?
    ...
  when (x.match /'^fn'/)
    ...
  when (x.include? 'substring')
    ...
  when x.gsub('o', 'z') == 'fnzrq'
    ...
  when Time.now.tuesday?
    ...
end
</code></pre>
","140740","","140740","","2017-01-30 22:48:00","2017-01-30 22:48:00","","","","0","","",""
"38445037","2","","948135","2016-07-18 19:59:10","","17","","<p>Ruby uses the <code>case</code> for writing switch statements.</p>

<p>As per the <a href=""http://ruby-doc.org/docs/keywords/1.9/Object.html#method-i-case"" rel=""noreferrer"">Ruby Docs</a>:</p>

<blockquote>
  <p>Case statements consist of an optional condition, which is in the
  position of an argument to <code>case</code>, and zero or more <code>when</code> clauses.
  The first <code>when</code> clause to match the condition (or to evaluate to
  Boolean truth, if the condition is null) “wins”, and its code stanza
  is executed. The value of the case statement is the value of the
  successful <code>when</code> clause, or <code>nil</code> if there is no such clause.</p>
  
  <p>A case statement can end with an <code>else</code> clause. Each <code>when</code> a
  statement can have multiple candidate values, separated by commas.</p>
</blockquote>

<p>Example:</p>

<pre><code>case x
when 1,2,3
  puts ""1, 2, or 3""
when 10
  puts ""10""
else
  puts ""Some other number""
end
</code></pre>

<p>Shorter version:</p>

<pre><code>case x
when 1,2,3 then puts ""1, 2, or 3""
when 10 then puts ""10""
else puts ""Some other number""
end
</code></pre>

<hr>

<p>And as this blog by <a href=""http://blog.honeybadger.io/rubys-case-statement-advanced-techniques/"" rel=""noreferrer"">Honeybadger</a> describes Ruby Case;</p>

<p>Can be used with <a href=""http://ruby-doc.org/core-2.2.0/Range.html"" rel=""noreferrer"">Ranges</a>:</p>

<pre><code>case 5
when (1..10)
  puts ""case statements match inclusion in a range""
end

## =&gt; ""case statements match inclusion in a range""
</code></pre>

<p>Can be used with <a href=""https://en.wikipedia.org/wiki/Regular_expression"" rel=""noreferrer"">Regex</a>:</p>

<pre><code>case ""FOOBAR""
when /BAR$/
  puts ""they can match regular expressions!""
end

## =&gt; ""they can match regular expressions!""
</code></pre>

<p>Can be used with <a href=""https://rubymonk.com/learning/books/4-ruby-primer-ascent/chapters/18-blocks/lessons/64-blocks-procs-lambdas"" rel=""noreferrer"">Procs and Lambdas</a>:</p>

<pre><code>case 40
when -&gt; (n) { n.to_s == ""40"" }
  puts ""lambdas!""
end

## =&gt; ""lambdas""
</code></pre>

<p>Also, can be used with your own match classes:</p>

<pre><code>class Success
  def self.===(item)
    item.status &gt;= 200 &amp;&amp; item.status &lt; 300
  end
end

class Empty
  def self.===(item)
    item.response_size == 0
  end
end

case http_response
when Empty
  puts ""response was empty""
when Success
  puts ""response was a success""
end
</code></pre>
","1616697","","1616697","","2016-07-22 09:27:32","2016-07-22 09:27:32","","","","0","","",""
"42269911","2","","948135","2017-02-16 09:32:15","","11","","<p>You can write case expressions in two different ways in ruby.</p>

<ol>
<li>Similar to a series of ""if"" statements</li>
<li>Specify a target next to the case and each ""when"" clause is compared to the target.</li>
</ol>

<h3>1st way</h3>

<pre><code>age = 20
case 
when age &gt;= 21
puts ""display something""
when 1 == 0
puts ""omg""
else
puts ""default condition""
end
</code></pre>

<h3>2nd way</h3>

<pre><code> case params[:unknown]
 when /Something/ then 'Nothing'
 when /Something else/ then 'I dont know'
 end
</code></pre>
","1905008","","1905008","","2017-02-16 17:45:44","2017-02-16 17:45:44","","","","2","","",""
"47259477","2","","948135","2017-11-13 07:58:42","","3","","<pre><code>$age =  5
case $age
when 0 .. 2
   puts ""baby""
when 3 .. 6
   puts ""little child""
when 7 .. 12
   puts ""child""
when 13 .. 18
   puts ""youth""
else
   puts ""adult""
end
</code></pre>

<p>reference => <a href=""https://www.tutorialspoint.com/ruby/ruby_if_else.htm"" rel=""nofollow noreferrer"">https://www.tutorialspoint.com/ruby/ruby_if_else.htm</a></p>
","8871804","","8871804","","2017-11-13 09:28:06","2017-11-13 09:28:06","","","","0","","",""
"49898610","2","","948135","2018-04-18 11:29:29","","1","","<p>No support for regular expressions in your environment? E.g. <a href=""https://help.shopify.com/manual/apps/apps-by-shopify/script-editor/limitations#regular-expressions"" rel=""nofollow noreferrer""><strong>Shopify</strong> Script Editor</a> (April, 2018):</p>

<blockquote>
  <p>[Error]: uninitialized constant <strong>RegExp</strong></p>
</blockquote>

<p>A workaround following a combination of methods already previously covered in <a href=""https://stackoverflow.com/a/38445037/6225838"">here</a> and <a href=""https://stackoverflow.com/a/20441220/6225838"">here</a>:</p>

<pre><code>code = '!ADD-SUPER-BONUS!'

class StrContains
  def self.===(item)
    item.include? 'SUPER' or item.include? 'MEGA' or\
    item.include? 'MINI' or item.include? 'UBER'
  end
end

case code.upcase
when '12345PROMO', 'CODE-007', StrContains
  puts ""Code #{code} is a discount code!""
when '!ADD-BONUS!'
  puts 'This is a bonus code!'
else
  puts 'Sorry, we can\'t do anything with the code you added...'
end
</code></pre>

<p>I used <code>or</code>s in the class method statement since <code>||</code> has higher precedence than 
<code>.include?</code>. If you are a <a href=""https://stackoverflow.com/a/49814089/6225838""><em>ruby-nazi</em></a>, please imagine I used this <code>(item.include? 'A') || ...</code> instead. <a href=""https://repl.it/repls/LightyellowCloseAddition"" rel=""nofollow noreferrer"">repl.it</a> test.</p>
","6225838","","","","","2018-04-18 11:29:29","","","","0","","",""
"54360808","2","","948135","2019-01-25 07:32:41","","1","","<p>We can write switch statement for multiple conditions. </p>

<p>For Example,</p>

<pre><code>x = 22

CASE x
  WHEN 0..14 THEN puts ""#{x} is less than 15""    
  WHEN 15 THEN puts ""#{x} equals 15"" 
  WHEN 15 THEN puts ""#{x} equals 15"" 
  WHEN 15..20 THEN puts ""#{x} is greater than 15"" 
  ELSE puts ""Not in the range, value #{x} "" 
END
</code></pre>
","10814922","","3682162","","2019-01-28 06:02:46","2019-01-28 06:02:46","","","","0","","",""
"1020570","2","","1020568","2009-06-20 00:16:52","","16","","<p>The ruby <code>downcase</code> method returns a string with its uppercase letters replaced by lowercase letters.</p>

<pre><code>""string"".downcase
</code></pre>

<p><a href=""https://ruby-doc.org/core-2.1.0/String.html#method-i-downcase"" rel=""nofollow noreferrer"">https://ruby-doc.org/core-2.1.0/String.html#method-i-downcase</a></p>
","3484","","7184365","","2018-04-28 05:40:59","2018-04-28 05:40:59","","","","3","","",""
"1020571","2","","1020568","2009-06-20 00:16:55","","1488","","<p>Ruby has a few methods for changing the case of strings. To convert to lowercase, use <code>downcase</code>:</p>

<pre><code>""hello James!"".downcase    #=&gt; ""hello james!""
</code></pre>

<p>Similarly, <code>upcase</code> capitalizes every letter and <code>capitalize</code> capitalizes the first letter of the string but lowercases the rest:</p>

<pre><code>""hello James!"".upcase      #=&gt; ""HELLO JAMES!""
""hello James!"".capitalize  #=&gt; ""Hello james!""
""hello James!"".titleize    #=&gt; ""Hello James!""
</code></pre>

<p>If you want to modify a string in place, you can add an exclamation point to any of those methods:</p>

<pre><code>string = ""hello James!""
string.downcase!
string   #=&gt; ""hello james!""
</code></pre>

<p>Refer to the <a href=""http://www.ruby-doc.org/core/String.html"" rel=""noreferrer"">documentation for String</a> for more information.</p>
","49485","","4725295","","2017-01-01 12:56:24","2017-01-01 12:56:24","","","","11","","",""
"1021280","2","","1020568","2009-06-20 09:10:17","","12","","<p>... and the uppercase is:</p>

<pre><code>""Awesome String"".upcase
=&gt; ""AWESOME STRING""
</code></pre>
","17453","","","","","2009-06-20 09:10:17","","","","0","","",""
"1021299","2","","1020568","2009-06-20 09:27:57","","116","","<p>You can find out all the methods available on a String by opening irb and running:</p>

<pre><code>""MyString"".methods.sort
</code></pre>

<p>And for a list of the methods available for strings in particular:</p>

<pre><code>""MyString"".own_methods.sort
</code></pre>

<p>I use this to find out new and interesting things about objects which I might not otherwise have known existed.</p>
","17453","","","","","2009-06-20 09:27:57","","","","9","","",""
"16098006","2","","1020568","2013-04-19 05:46:31","","38","","<p>Like @endeR mentioned, if internationalization is a concern, the unicode_utils gem is more than adequate.</p>

<pre><code>$ gem install unicode_utils
$ irb
&gt; require 'unicode_utils'
=&gt; true
&gt; UnicodeUtils.downcase(""FEN BİLİMLERİ"", :tr)
=&gt; ""fen bilimleri""
</code></pre>

<hr>

<p>String manipulations  in Ruby 2.4 are now unicode-sensitive.</p>
","227755","","128421","","2016-08-22 17:50:32","2016-08-22 17:50:32","","","","0","","",""
"25090224","2","","1020568","2014-08-01 23:44:24","","11","","<p>The  Rails Active Support gem provides <code>upcase</code>, <code>downcase</code>, <code>swapcase</code>,<code>capitalize</code>, etc. methods with internationalization support:</p>

<pre><code>gem install activesupport
irb -ractive_support/core_ext/string
""STRING  ÁÂÃÀÇÉÊÍÓÔÕÚ"".mb_chars.downcase.to_s
 =&gt; ""string  áâãàçéêíóôõú""
""string  áâãàçéêíóôõú"".mb_chars.upcase.to_s
=&gt; ""STRING  ÁÂÃÀÇÉÊÍÓÔÕÚ""
</code></pre>
","844427","","128421","","2016-03-09 23:48:25","2016-03-09 23:48:25","","","","0","","",""
"54420908","2","","1020568","2019-01-29 12:18:06","","0","","<p>You can find strings method like <code>""strings"".methods</code>
You can define string as <code>upcase</code>, <code>downcase</code>, <code>titleize</code>.
For Example,</p>

<pre><code>""hii"".downcase
""hii"".titleize
""hii"".upcase
</code></pre>
","10814922","","","","","2019-01-29 12:18:06","","","","0","","",""
"8783995","2","","1186400","2012-01-09 04:38:02","","0","","<p>i answered a similar question <a href=""https://stackoverflow.com/a/8775320/536984"">here</a>.. a clean way to do this is using Rails <a href=""http://apidock.com/rails/Module/attr_accessor_with_default"" rel=""nofollow noreferrer"">attr_accessor_with_default</a></p>

<pre><code>class SOF
  attr_accessor_with_default :is_awesome,true
end

sof = SOF.new
sof.is_awesome

=&gt; true
</code></pre>

<p><strong>UPDATE</strong></p>

<p><a href=""http://apidock.com/rails/Module/attr_accessor_with_default"" rel=""nofollow noreferrer"">attr_accessor_with_default</a> has been deprecated in Rails 3.2.. you could do this instead with pure Ruby</p>

<pre><code>class SOF
  attr_writer :is_awesome

  def is_awesome
    @is_awesome ||= true
  end
end

sof = SOF.new
sof.is_awesome

#=&gt; true
</code></pre>
","536984","","-1","","2017-05-23 12:26:20","2012-06-05 13:44:40","","","","4","","",""
"10193221","2","","1186400","2012-04-17 14:30:02","","54","","<p>Based on SFEley's answer, here is an updated/fixed one for newer Rails versions:</p>

<pre><code>class SetDefault &lt; ActiveRecord::Migration
  def change
    change_column :table_name, :column_name, :type, default: ""Your value""
  end
end
</code></pre>
","169793","","682349","","2013-01-06 18:10:45","2013-01-06 18:10:45","","","","2","","",""
"11366178","2","","1186400","2012-07-06 16:29:59","","5","","<p>For boolean fields in Rails 3.2.6 at least, this will work in your migration.</p>

<pre><code>def change
  add_column :users, :eula_accepted, :boolean, default: false
end
</code></pre>

<p>Putting a <code>1</code> or <code>0</code> for a default will not work here, since it is a boolean field. It must be a <code>true</code> or <code>false</code> value.</p>
","1507328","","","","","2012-07-06 16:29:59","","","","0","","",""
"12696358","2","","1186400","2012-10-02 18:48:05","","7","","<p>In Ruby on Rails v3.2.8, using the <code>after_initialize</code> ActiveRecord callback, you can call a method in your model that will assign the default values for a new object.</p>

<blockquote>
  <p>after_initialize callback is triggered for each object that is found and instantiated by a finder, with after_initialize being triggered after new objects are instantiated as well
  (<a href=""http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html"" rel=""nofollow"">see ActiveRecord Callbacks</a>).</p>
</blockquote>

<p>So, IMO it should look something like:</p>

<pre><code>class Foo &lt; ActiveRecord::Base
  after_initialize :assign_defaults_on_new_Foo
  ...
  attr_accessible :bar
  ...
  private
  def assign_defaults_on_new_Foo
    # required to check an attribute for existence to weed out existing records
    self.bar = default_value unless self.attribute_whose_presence_has_been_validated
  end
end
</code></pre>

<p><code>Foo.bar = default_value</code> for this instance unless the instance contains an <code>attribute_whose_presence_has_been_validated</code> previously on save/update. The <code>default_value</code> will then be used in conjunction with your view to render the form using the <code>default_value</code> for the <code>bar</code> attribute.</p>

<p>At best this is hacky...</p>

<h2>EDIT - use 'new_record?' to check if instantiating from a new call</h2>

<p>Instead of checking an attribute value, use the <code>new_record?</code> built-in method with rails. So, the above example should look like:</p>

<pre><code>class Foo &lt; ActiveRecord::Base
  after_initialize :assign_defaults_on_new_Foo, if: 'new_record?'
  ...
  attr_accessible :bar
  ...
  private
  def assign_defaults_on_new_Foo
    self.bar = default_value
  end
end
</code></pre>

<p>This is much cleaner. Ah, the magic of Rails - it's smarter than me.</p>
","1571834","","1571834","","2013-01-22 16:05:10","2013-01-22 16:05:10","","","","6","","",""
"13335015","2","","1186400","2012-11-11 20:16:13","","13","","<p>You can also try <code>change_column_default</code> in your migrations (tested in Rails 3.2.8):</p>

<pre><code>class SetDefault &lt; ActiveRecord::Migration
  def up
    # Set default value
    change_column_default :people, :last_name, ""Smith""
  end

  def down
    # Remove default
    change_column_default :people, :last_name, nil
  end
end
</code></pre>

<p><a href=""http://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_default"" rel=""noreferrer"">change_column_default Rails API docs</a></p>
","545017","","","","","2012-11-11 20:16:13","","","","1","","",""
"17212375","2","","1186400","2013-06-20 11:25:34","","1","","<p>I needed to set a default just as if it was specified as default column value in DB. So it behaves like this</p>

<pre><code>a = Item.new
a.published_at # =&gt; my default value

a = Item.new(:published_at =&gt; nil)
a.published_at # =&gt; nil
</code></pre>

<p>Because after_initialize callback is called after setting attributes from arguments, there was no way to know if the attribute is nil because it was never set or because it was intentionally set as nil. So I had to poke inside a bit and came with this simple solution.</p>

<pre><code>class Item &lt; ActiveRecord::Base
  def self.column_defaults
    super.merge('published_at' =&gt; Time.now)
  end
end
</code></pre>

<p>Works great for me. (Rails 3.2.x)</p>
","899406","","","","","2013-06-20 11:25:34","","","","0","","",""
"25250685","2","","1186400","2014-08-11 19:13:45","","1","","<p>A potentially even better/cleaner potential way than the answers proposed is to overwrite the accessor, like this:</p>

<pre><code>def status
  self['name_of_var'] || 'desired_default_value'
end
</code></pre>

<p>See ""Overwriting default accessors"" in <a href=""http://api.rubyonrails.org/classes/ActiveRecord/Base.html"" rel=""nofollow noreferrer"">the ActiveRecord::Base documentation</a> and <a href=""https://stackoverflow.com/questions/10127393/why-use-self-to-access-activerecord-rails-model-properties"">more from StackOverflow on using self</a>.</p>
","3317833","","-1","","2017-05-23 12:26:20","2014-08-11 19:13:45","","","","0","","",""
"36200340","2","","1186400","2016-03-24 12:34:09","","0","","<p>You could use the rails_default_value gem. eg:</p>

<pre><code>class Foo &lt; ActiveRecord::Base
  # ...
  default :bar =&gt; 'some default value'
  # ...
end
</code></pre>

<p><a href=""https://github.com/keithrowell/rails_default_value"" rel=""nofollow"">https://github.com/keithrowell/rails_default_value</a></p>
","6109417","","","","","2016-03-24 12:34:09","","","","0","","",""
"51243957","2","","1186400","2018-07-09 10:58:08","","2","","<p>In case you're dealing with a Model, you can use the Attriutes API in Rails 5+
<a href=""http://api.rubyonrails.org/classes/ActiveRecord/Attributes/ClassMethods.html#method-i-attribute"" rel=""nofollow noreferrer"">http://api.rubyonrails.org/classes/ActiveRecord/Attributes/ClassMethods.html#method-i-attribute</a></p>

<p>just add a migration with a proper column name and then in the model set it with:</p>

<pre><code>class StoreListing &lt; ActiveRecord::Base
  attribute :country, :string, default: 'PT'
end
</code></pre>
","1006863","","","","","2018-07-09 10:58:08","","","","0","","",""
"1335875","2","","1335851","2009-08-26 16:14:23","","1157","","<p>It's a new feature of ECMAScript 5. John Resig wrote up <a href=""http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/"" rel=""noreferrer"">a nice summary</a> of it.</p>

<p>It's just a string you put in your JavaScript files (either at the top of your file or inside of a function) that looks like this:</p>

<pre><code>""use strict"";
</code></pre>

<p>Putting it in your code now shouldn't cause any problems with current browsers as it's just a string. It may cause problems with your code in the future if your code violates the pragma.  For instance, if you currently have <code>foo = ""bar""</code> without defining <code>foo</code> first, your code will start failing...which is a good thing in my opinion.</p>
","8590","","63550","","2014-10-26 10:31:59","2014-10-26 10:31:59","","","","6","","",""
"1335881","2","","1335851","2009-08-26 16:15:39","","4618","","<p>This article about Javascript Strict Mode might interest you: <a href=""http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/"" rel=""noreferrer"">John Resig - ECMAScript 5 Strict Mode, JSON, and More</a></p>

<p>To quote some interesting parts:</p>

<blockquote>
  <p>Strict Mode is a new feature in ECMAScript 5 that allows you to place a program, or a function, in a ""strict"" operating context. This strict context prevents certain actions from being taken and throws more exceptions.</p>
</blockquote>

<p>And:</p>

<blockquote>
  <p>Strict mode helps out in a couple ways:</p>
  
  <ul>
  <li>It catches some common coding bloopers, throwing exceptions.</li>
  <li>It prevents, or throws errors, when relatively ""unsafe"" actions are taken (such as gaining access to the global object).</li>
  <li>It disables features that are confusing or poorly thought out.</li>
  </ul>
</blockquote>

<p>Also note you can apply ""strict mode"" to the whole file... Or you can use it only for a specific function <em>(still quoting from John Resig's article)</em>:</p>

<blockquote>
<pre><code>// Non-strict code...

(function(){
  ""use strict"";

  // Define your library strictly...
})();

// Non-strict code... 
</code></pre>
</blockquote>

<p>Which might be helpful if you have to mix old and new code ;-)</p>

<p>So, I suppose it's a bit like the <code>""use strict""</code> you can use in Perl <em>(hence the name?)</em>: it helps you make fewer errors, by detecting more things that could lead to breakages.</p>

<p>Currently, it's <a href=""http://caniuse.com/#use-strict"" rel=""noreferrer""><strong>supported by all major browsers</strong></a> <em>(bar IE 9 and below)</em>.</p>
","138475","","1402846","","2018-10-02 00:38:38","2018-10-02 00:38:38","","","","29","","",""
"11496488","2","","1335851","2012-07-15 23:25:53","","387","","<p>If people are worried about using <code>use strict</code> it might be worth checking out this article: </p>

<p><a href=""http://novogeek-archive.azurewebsites.net/post/ECMAScript-5-Strict-mode-support-in-browsers-What-does-this-mean"" rel=""noreferrer"">ECMAScript 5 'Strict mode' support in browsers. What does this mean?</a><br>
  <em>NovoGeek.com - Krishna's weblog</em></p>

<p>It talks about browser support, but more importantly how to deal with it safely:</p>

<pre><code>function isStrictMode(){
    return !this;
} 
/*
   returns false, since 'this' refers to global object and 
   '!this' becomes false
*/

function isStrictMode(){   
    ""use strict"";
    return !this;
} 
/* 
   returns true, since in strict mode the keyword 'this'
   does not refer to global object, unlike traditional JS. 
   So here, 'this' is 'undefined' and '!this' becomes true.
*/
</code></pre>
","240363","","-1","","2018-01-22 11:13:12","2018-01-22 11:13:12","","","","14","","",""
"16863603","2","","1335851","2013-05-31 18:29:33","","49","","<p>""Use Strict""; is an insurance that programmer will not use the loose or the bad properties of JavaScript. It is a guide, just like a ruler will help you make straight lines. ""Use Strict"" will help you do ""Straight coding"".</p>

<p>Those that prefer not to use rulers to do their lines straight usually end up in those pages asking for others to debug their code.</p>

<p>Believe me. The overhead is negligible compared to poorly designed code. <a href=""http://www.yuiblog.com/blog/2010/12/14/strict-mode-is-coming-to-town/"" rel=""noreferrer"">Doug Crockford, who has been a senior JavaScript developer for several years, has a very interesting post here</a>. Personally, I like to return to his site all the time to make sure I don't forget my good practice.</p>

<p><strong>Modern JavaScript practice should always evoke the ""Use Strict""; pragma.</strong> The only reason that the ECMA Group has made the ""Strict"" mode optional <em>is to permit less experienced coders access to JavaScript and give then time to adapt to the new and safer coding practices.</em></p>
","2436758","","63550","","2014-10-26 10:34:02","2014-10-26 10:34:02","","","","2","","",""
"17495829","2","","1335851","2013-07-05 19:38:24","","129","","<p>I strongly recommend every developer to start using strict mode now. There are enough browsers supporting it that strict mode will legitimately help save us from errors we didn’t even know were in your code.</p>

<p>Apparently, at the initial stage there will be errors we have never encountered before. To get the full benefit, we need to do proper testing after switching to strict mode to make sure we have caught everything. Definitely we don’t just throw <code>use strict</code> in our code and assume there are no errors. So the churn is that it’s time to start using this incredibly useful language feature to write better code.</p>

<p>For example,</p>

<pre><code>var person = {
    name : 'xyz',
    position : 'abc',
    fullname : function () {  ""use strict""; return this.name; }
};
</code></pre>

<p><a href=""http://www.jslint.com/"" rel=""noreferrer"">JSLint</a> is a debugger written by Douglas Crockford. Simply paste in your script, and it’ll quickly scan for any noticeable issues and errors in your code.</p>
","983624","","1788806","","2016-02-25 15:54:56","2016-02-25 15:54:56","","","","1","","",""
"22141126","2","","1335851","2014-03-03 07:37:19","","195","","<p>A word of caution, all you hard-charging programmers:  applying <code>""use strict""</code> to existing code can be hazardous!  This thing is not some feel-good, happy-face sticker that you can slap on the code to make it 'better'.  With the <code>""use strict""</code> pragma, the browser will suddenly THROW exceptions in random places that it never threw before just because at that spot you are doing something that default/loose JavaScript happily allows but strict JavaScript abhors!  You may have strictness violations hiding in seldom used calls in your code that will only throw an exception when they do eventually get run - say, in the production environment that your paying customers use!</p>

<p>If you are going to take the plunge, it is a good idea to apply <code>""use strict""</code> alongside comprehensive unit tests and a strictly configured JSHint build task that will give you some confidence that there is no dark corner of your module that will blow up horribly just because you've turned on Strict Mode.  Or, hey, here's another option:  just don't add <code>""use strict""</code> to any of your legacy code, it's probably safer that way, honestly.  <strong>DEFINITELY DO NOT</strong> add <code>""use strict""</code> to any modules you do not own or maintain, like third party modules.</p>

<p>I think even though it is a deadly caged animal, <code>""use strict""</code> can be good stuff, but you have to do it right.  The best time to go strict is when your project is greenfield and you are starting from scratch. Configure <code>JSHint/JSLint</code> with all the warnings and options cranked up as tight as your team can stomach, get a good build/test/assert system du jour rigged like <code>Grunt+Karma+Chai</code>, and only THEN start marking all your new modules as <code>""use strict""</code>.  Be prepared to cure lots of niggly errors and warnings.  Make sure everyone understands the gravity by configuring the build to FAIL if <code>JSHint/JSLint</code> produces any violations.</p>

<p>My project was not a greenfield project when I adopted <code>""use strict""</code>.  As a result, my IDE is full of red marks because I don't have <code>""use strict""</code> on half my modules, and JSHint complains about that.  It's a reminder to me about what refactoring I should do in the future.  My goal is to be red mark free due to all of my missing <code>""use strict""</code> statements, but that is years away now.</p>
","360064","","4423636","","2016-10-16 09:10:15","2016-10-16 09:10:15","","","","5","","",""
"22687419","2","","1335851","2014-03-27 12:18:30","","51","","<p>Strict mode makes several changes to normal JavaScript semantics:</p>

<ul>
<li><p>eliminates some JavaScript silent errors by changing them
to throw errors.</p></li>
<li><p>fixes mistakes that make it difficult for JavaScript
engines to perform optimizations.</p></li>
<li><p>prohibits some syntax likely to be defined in future
versions of ECMAScript.</p></li>
</ul>

<p>for more information vistit <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode"">Strict Mode- Javascript</a></p>
","972950","","220935","","2014-10-29 17:34:22","2014-10-29 17:34:22","","","","0","","",""
"22725570","2","","1335851","2014-03-29 00:47:24","","29","","<p>There's a good talk by some people who were on the ECMAScript committee: <a href=""http://www.youtube.com/watch?v=Kq4FpMe6cRs"" rel=""noreferrer"">Changes to JavaScript, Part 1: ECMAScript 5""</a> about how incremental use of the <code>""use strict""</code> switch allows JavaScript implementers to clean up a lot of the dangerous features of JavaScript without suddenly breaking every website in the world.</p>

<p>Of course it also talks about just what a lot of those misfeatures are (were) and how ECMAScript 5 fixes them.</p>
","310710","","310710","","2014-03-29 19:39:26","2014-03-29 19:39:26","","","","0","","",""
"25686413","2","","1335851","2014-09-05 12:53:26","","44","","<p>Including <code>use strict</code> in the beginning of your all sensitive JavaScript files from this point is a small way to be a better JavaScript programmer and avoid random variables becoming global and things change silently.</p>
","904554","","1788806","","2016-02-25 15:55:42","2016-02-25 15:55:42","","","","0","","",""
"26487977","2","","1335851","2014-10-21 13:31:24","","78","","<p><em>My two cents:</em></p>

<p>One of the goals of strict mode is to allow for faster debugging of issues. It helps the developers by throwing exception when certain wrong things occur that can cause silent &amp; strange behaviour of your webpage. The moment we use <code>use strict</code>, the code will throw out errors which helps developer to fix it in advance.</p>

<p>Few important things which I have learned after using <code>use strict</code> :</p>

<p><strong><em>Prevents Global Variable Declaration:</em></strong></p>

<pre><code>var tree1Data = { name: 'Banana Tree',age: 100,leafCount: 100000};

function Tree(typeOfTree) {
    var age;
    var leafCount;

    age = typeOfTree.age;
    leafCount = typeOfTree.leafCount;
    nameoftree = typeOfTree.name;
};

var tree1 = new Tree(tree1Data);
console.log(window);
</code></pre>

<p>Now,this code creates <code>nameoftree</code> in global scope which could be accessed using <code>window.nameoftree</code>. When we implement <code>use strict</code> the code would throw error.</p>

<blockquote>
  <p>Uncaught ReferenceError: nameoftree is not defined</p>
</blockquote>

<p><a href=""http://jsfiddle.net/shubh0602/08p556u5/"" rel=""noreferrer""><kbd>Sample</kbd></a></p>

<p><strong><em>Eliminates <code>with</code> statement :</em></strong></p>

<p><code>with</code> statements can't be minified using tools like <a href=""http://marijnhaverbeke.nl/uglifyjs"" rel=""noreferrer"">uglify-js</a>. They're also <a href=""http://www.2ality.com/2011/06/with-statement.html"" rel=""noreferrer"">deprecated</a> and removed from future JavaScript versions.</p>

<p><a href=""http://jsfiddle.net/shubh0602/vjgznz79/"" rel=""noreferrer""><kbd>Sample</kbd></a></p>

<p><strong><em>Prevents Duplicates :</em></strong></p>

<p>When we have duplicate property, it throws an exception </p>

<blockquote>
  <p>Uncaught SyntaxError: Duplicate data property in object literal not
  allowed in strict mode</p>
</blockquote>

<pre><code>""use strict"";
var tree1Data = {
    name: 'Banana Tree',
    age: 100,
    leafCount: 100000,
    name:'Banana Tree'
};
</code></pre>

<p>There are few more but I need to gain more knowledge on that.</p>
","769678","","","","","2014-10-21 13:31:24","","","","0","","","2014-10-21 13:31:24"
"29940614","2","","1335851","2015-04-29 10:10:19","","37","","<p><a href=""http://www.w3schools.com/js/js_strict.asp"" rel=""noreferrer"">Quoting from w3schools</a>:</p>

<blockquote>
  <h2><strong>The ""use strict"" Directive</strong></h2>
  
  <p>The ""use strict"" directive is new in JavaScript 1.8.5 (ECMAScript
  version 5).</p>
  
  <p>It is not a statement, but a literal expression, ignored by earlier
  versions of JavaScript.</p>
  
  <p>The purpose of ""use strict"" is to indicate that the code should be
  executed in ""strict mode"".</p>
  
  <p>With strict mode, you can not, for example, use undeclared variables.</p>
  
  <h2>Why Strict Mode?</h2>
  
  <p>Strict mode makes it easier to write ""secure"" JavaScript.</p>
  
  <p>Strict mode changes previously accepted ""bad syntax"" into real errors.</p>
  
  <p>As an example, in normal JavaScript, mistyping a variable name creates
  a new global variable. In strict mode, this will throw an error,
  making it impossible to accidentally create a global variable.</p>
  
  <p>In normal JavaScript, a developer will not receive any error feedback
  assigning values to non-writable properties.</p>
  
  <p>In strict mode, any assignment to a non-writable property, a
  getter-only property, a non-existing property, a non-existing
  variable, or a non-existing object, will throw an error.</p>
</blockquote>

<p>Please refer to <a href=""http://www.w3schools.com/js/js_strict.asp"" rel=""noreferrer"">http://www.w3schools.com/js/js_strict.asp</a> to know more</p>
","4693906","","811","","2018-08-13 03:15:37","2018-08-13 03:15:37","","","","0","","",""
"30253376","2","","1335851","2015-05-15 06:58:03","","90","","<p>I would like to offer a somewhat more founded answer complementing the other answers. I was hoping to edit the most popular answer, but failed. I tried to make it as comprehensive and complete as I could.</p>

<p>You can refer to the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"">MDN documentation</a> for more information.</p>

<p><code>""use strict""</code> a directive introduced in ECMAScript 5.</p>

<p>Directives are similar to statements, yet different.</p>

<ul>
<li><code>use strict</code> does not contain key words: The directive is a simple expression statement, which consists of a special string literal (in single or double quotes). JavaScript engines, that do not implement ECMAScript 5, merely see an expression statement without side effects. It is expected that future versions of ECMAScript standards introduce <code>use</code> as a real key word; the quotes would thereby become obsolete.</li>
<li><code>use strict</code> can be used only at the beginning of a script or of a function, i.e. it must precede every other (real) statement. It does not have to be the first instruction in a script of function: it can be preceded by other statement expressions that consist of string literals ( and JavaScript implementations can treat them as implementation specific directives). String literals statements, which follow a first real statement (in a script or function) are simple expression statements. Interpreters must not interpret them as directives and they have no effect.</li>
</ul>

<p>The <code>use strict</code> directive indicates that the following code (in a script or a function) is strict code.
The code in the highest level of a script (code that is not in a function) is considered strict code when the script contains a <code>use strict</code> directive.
The content of a function is considered strict code when the function itself is defined in a strict code or when the function contains a <code>use strict</code> directive.
Code that is passed to an <code>eval()</code> method is considered strict code when <code>eval()</code> was called from a strict code or contains the <code>use strict</code> directive itself.</p>

<p>The strict mode of ECMAScript 5 is a restricted subset of the JavaScript language, which eliminates relevant deficits of the language and features more stringent error checking and higher security. The following lists the differences between strict mode and normal mode (of which the first three are particularly important):</p>

<ul>
<li>You cannot use the <code>with</code>-statement in strict mode.</li>
<li>In strict mode all variables have to be declared: if you assign a value to an identifier that has not been declared as variable, function, function parameter, catch-clause parameter or property of the global <code>Object</code>, then you will get a <code>ReferenceError</code>. In normal mode the identifier is implicitly declared as a global variable (as a property of the global <code>Object</code>)</li>
<li>In strict mode the keyword <code>this</code> has the value <code>undefined</code> in functions that were invoked as functions (not as methods). (In normal mode <code>this</code> always points to the global <code>Object</code>). This difference can be used to test if an implementation supports the strict mode:</li>
</ul>

<blockquote>
<pre><code>var hasStrictMode = (function() { ""use strict""; return this===undefined }());
</code></pre>
</blockquote>

<ul>
<li><p>Also when a function is invoked with <code>call()</code> or <code>apply</code> in strict mode, then <code>this</code> is exactly the value of the first argument of the <code>call()</code>or <code>apply()</code> invocation. (In normal mode <code>null</code> and <code>undefined</code> are replaced by the global <code>Object</code> and values, which are not objects, are cast into objects.)</p></li>
<li><p>In strict mode you will get a <code>TypeError</code>, when you try to assign to readonly properties or to define new properties for a non extensible object. (In normal mode both simply fail without error message.)</p></li>
<li>In strict mode, when passing code to <code>eval()</code>, you cannot declare or define variables or functions in the scope of the caller (as you can do it in normal mode). Instead, a new scope is created for <code>eval()</code> and the variables and functions are within that scope. That scope is destroyed after <code>eval()</code> finishes execution.</li>
<li>In strict mode the arguments-object of a function contains a static copy of the values, which are passed to that function. In normal mode the arguments-object has a somewhat ""magical"" behaviour: The elements of the array and the named function parameters reference both the same value.</li>
<li>In strict mode you will get a <code>SyntaxError</code> when the <code>delete</code> operator is followed by a non qualified identifier (a variable, function or function parameter). In normal mode the <code>delete</code> expression would do nothing and is evaluated to <code>false</code>.</li>
<li>In strict mode you will get a <code>TypeError</code> when you try to delete a non configurable property. (In normal mode the attempt simply fails and the <code>delete</code> expression is evaluated to <code>false</code>).</li>
<li>In strict mode it is considered a syntactical error when you try to define several properties with the same name for an object literal. (In normal mode there is no error.)</li>
<li>In strict mode it is considered a syntactical error when a function declaration has multiple parameters with the same name. (In normal mode there is no error.)</li>
<li>In strict mode octal literals are not allowed (these are literals that start with <code>0x</code>. (In normal mode some implementations do allow octal literals.)</li>
<li>In strict mode the identifiers <code>eval</code> and <code>arguments</code> are treated like keywords. You cannot change their value, cannot assign a value to them, and you cannot use them as names for variables, functions, function parameters or identifiers of a catch block.</li>
<li>In strict mode are more restrictions on the possibilities to examine the call stack. <code>arguments.caller</code> and <code>arguments.callee</code> cause a <code>TypeError</code> in a function in strict mode. Furthermore, some caller- and arguments properties of functions in strict mode cause a <code>TypeError</code> when you try to read them.</li>
</ul>
","1566187","","1566187","","2015-07-12 20:31:23","2015-07-12 20:31:23","","","","1","","",""
"35083544","2","","1335851","2016-01-29 11:35:48","","146","","<h1>Using <code>'use strict';</code> does not suddenly make your code better.</h1>

<p>The <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"" rel=""noreferrer"">JavaScript strict mode</a> is a feature in <a href=""http://www.ecma-international.org/publications/standards/Ecma-262.htm"" rel=""noreferrer"">ECMAScript 5</a>. You can enable the strict mode by declaring this in the top of your script/function.</p>

<pre><code>'use strict';
</code></pre>

<p>When a JavaScript engine sees this <em>directive</em>, it will start to interpret the code in a special mode. In this mode, errors are thrown up when certain coding practices that could end up being potential bugs are detected (which is the reasoning behind the strict mode).</p>

<p>Consider this example:</p>

<pre><code>var a = 365;
var b = 030;
</code></pre>

<p>In their obsession to line up the numeric literals, the developer has inadvertently initialized variable <code>b</code> with an octal literal. Non-strict mode will interpret this as a numeric literal with value <code>24</code> (in base 10). However, strict mode will throw an error.</p>

<p>For a non-exhaustive list of specialties in strict mode, see <a href=""https://stackoverflow.com/a/27114400/1461424"">this answer</a>.</p>

<hr>

<h2>Where should I use <code>'use strict';</code>?</h2>

<ul>
<li><p>In my <em>new</em> JavaScript application: <strong>Absolutely!</strong> Strict mode can be used as a whistleblower when you are doing something stupid with your code.</p></li>
<li><p>In my <em>existing</em> JavaScript code: <strong>Probably not!</strong> If your existing JavaScript code has statements that are prohibited in strict-mode, the application will simply break. If you want strict mode, you should be prepared to debug and correct your existing code. This is why <em>using <code>'use strict';</code> does not suddenly make your code better</em>.</p></li>
</ul>

<hr>

<h2>How do I use strict mode?</h2>

<ol>
<li><p>Insert a <code>'use strict';</code> statement on top of your script:</p>

<pre><code>// File: myscript.js

'use strict';
var a = 2;
....
</code></pre>

<p>Note that everything in the file <code>myscript.js</code> will be interpreted in strict mode.</p></li>
<li><p>Or, insert a <code>'use strict';</code> statement on top of your function body:</p>

<pre><code>function doSomething() {
    'use strict';
    ...
}
</code></pre>

<p>Everything in the <em>lexical scope</em> of function <code>doSomething</code> will be interpreted in strict mode. The word <em>lexical scope</em> is important here. See <a href=""https://stackoverflow.com/a/6039163/1461424"">this answer</a> for a better explanation.</p></li>
</ol>

<hr>

<h2>What things are prohibited in strict mode?</h2>

<p>I found a <a href=""http://yuiblog.com/blog/2010/12/14/strict-mode-is-coming-to-town/"" rel=""noreferrer"">nice article</a> describing several things that are prohibited in strict mode (note that this is not an exclusive list):</p>

<blockquote>
  <h2>Scope</h2>
  
  <p>Historically, JavaScript has been confused about how functions
  are scoped. Sometimes they seem to be statically scoped, but some
  features make them behave like they are dynamically scoped. This is
  confusing, making programs difficult to read and understand.
  Misunderstanding causes bugs. It also is a problem for performance.
  Static scoping would permit variable binding to happen at compile
  time, but the requirement for dynamic scope means the binding must be
  deferred to runtime, which comes with a significant performance
  penalty.</p>
  
  <p>Strict mode requires that all variable binding be done statically.
  That means that the features that previously required dynamic binding
  must be eliminated or modified. Specifically, the with statement is
  eliminated, and the eval function’s ability to tamper with the
  environment of its caller is severely restricted.</p>
  
  <p>One of the benefits of strict code is that tools like <a href=""http://developer.yahoo.com/yui/compressor/"" rel=""noreferrer"">YUI Compressor</a>
  can do a better job when processing it.</p>
  
  <h2>Implied Global Variables</h2>
  
  <p>JavaScript has implied global variables. If
  you do not explicitly declare a variable, a global variable is
  implicitly declared for you. This makes programming easier for
  beginners because they can neglect some of their basic housekeeping
  chores. But it makes the management of larger programs much more
  difficult and it significantly degrades reliability. So in strict
  mode, implied global variables are no longer created. You should
  explicitly declare all of your variables.</p>
  
  <h2>Global Leakage</h2>
  
  <p>There are a number of situations that could cause <code>this</code>
  to be bound to the global object. For example, if you forget to
  provide the <code>new</code> prefix when calling a constructor function, the
  constructor's <code>this</code> will be bound unexpectedly to the global object, so
  instead of initializing a new object, it will instead be silently
  tampering with global variables. In these situations, strict mode will
  instead bind <code>this</code> to <code>undefined</code>, which will cause the constructor to
  throw an exception instead, allowing the error to be detected much
  sooner.</p>
  
  <h2>Noisy Failure</h2>
  
  <p>JavaScript has always had read-only properties, but you
  could not create them yourself until ES5’s <code>Object.createProperty</code>
  function exposed that capability. If you attempted to assign a value
  to a read-only property, it would fail silently. The assignment would
  not change the property’s value, but your program would proceed as
  though it had. This is an integrity hazard that can cause programs to
  go into an inconsistent state. In strict mode, attempting to change a
  read-only property will throw an exception.</p>
  
  <h2>Octal</h2>
  
  <p>The octal (or base 8) representation of numbers was extremely
  useful when doing machine-level programming on machines whose word
  sizes were a multiple of 3. You needed octal when working with the CDC
  6600 mainframe, which had a word size of 60 bits. If you could read
  octal, you could look at a word as 20 digits. Two digits represented
  the op code, and one digit identified one of 8 registers. During the
  slow transition from machine codes to high level languages, it was
  thought to be useful to provide octal forms in programming languages.</p>
  
  <p>In C, an extremely unfortunate representation of octalness was
  selected: Leading zero. So in C, <code>0100</code> means 64, not 100, and <code>08</code> is an
  error, not 8. Even more unfortunately, this anachronism has been
  copied into nearly all modern languages, including JavaScript, where
  it is only used to create errors. It has no other purpose. So in
  strict mode, octal forms are no longer allowed.</p>
  
  <h2>Et cetera</h2>
  
  <p>The arguments pseudo array becomes a little bit more
  array-like in ES5. In strict mode, it loses its <code>callee</code> and <code>caller</code>
  properties. This makes it possible to pass your <code>arguments</code> to untrusted
  code without giving up a lot of confidential context. Also, the
  <code>arguments</code> property of functions is eliminated.</p>
  
  <p>In strict mode, duplicate keys in a function literal will produce a
  syntax error. A function can’t have two parameters with the same name.
  A function can’t have a variable with the same name as one of its
  parameters. A function can’t <code>delete</code> its own variables. An attempt to
  <code>delete</code> a non-configurable property now throws an exception. Primitive
  values are not implicitly wrapped.</p>
</blockquote>

<hr>

<h2>Reserved words for future JavaScript versions</h2>

<p>ECMAScript 5 adds a list of reserved words. If you use them as variables or arguments, strict mode will throw an error. The reserved words are:</p>

<blockquote>
  <p><code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>, and <code>yield</code></p>
</blockquote>

<hr>

<h2>Further Reading</h2>

<ul>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"" rel=""noreferrer"">Strict Mode - JavaScript | MDN</a></li>
<li><a href=""http://caniuse.com/#feat=use-strict"" rel=""noreferrer"">Browser support for strict mode</a></li>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode"" rel=""noreferrer"">Transitioning to strict mode</a></li>
</ul>
","1461424","","-1","","2017-05-23 12:02:50","2017-01-31 04:15:38","","","","6","","",""
"37004869","2","","1335851","2016-05-03 12:59:03","","10","","<p>""use strict""; is the ECMA effort to make JavaScript a little bit more robust. It brings in JS an attempt to make it at least a little ""strict"" (other languages implement strict rules since the 90s). It actually ""forces"" JavaScript developers to follow some sort of coding best practices.
Still, JavaScript is very fragile. There is no such thing as typed variables, typed methods, etc.
I strongly recommend JavaScript developers to learn a more robust language such as Java or ActionScript3, and implement the same best practices in your JavaScript code, it will work better and be easier to debug.</p>
","120837","","1659362","","2016-06-14 23:18:44","2016-06-14 23:18:44","","","","0","","",""
"37287251","2","","1335851","2016-05-17 22:31:29","","10","","<p><code>use strict</code> is a way to make your code safer, cause you can't use dangerous features which can work not as you expect.And as was writed before it makes code more strict.</p>
","2883725","","","","","2016-05-17 22:31:29","","","","0","","",""
"40088411","2","","1335851","2016-10-17 13:59:15","","10","","<p>Use Strict is used to show common and repeated errors so that it is handled differently , and changes the way java script runs , such changes are :</p>

<ul>
<li><p>Prevents accidental globals</p></li>
<li><p>No duplicates</p></li>
<li><p>Eliminates with</p></li>
<li><p>Eliminates this coercion</p></li>
<li><p>Safer eval()</p></li>
<li><p>Errors for immutables</p></li>
</ul>

<p>you can also read this <a href=""https://www.nczonline.net/blog/2012/03/13/its-time-to-start-using-javascript-strict-mode/"" rel=""noreferrer"">article</a> for the details </p>
","5723127","","5723127","","2016-10-17 14:09:17","2016-10-17 14:09:17","","","","0","","",""
"40541796","2","","1335851","2016-11-11 05:40:45","","8","","<p>JavaScript “strict” mode was introduced in ECMAScript 5.</p>

<pre><code>(function() {
  ""use strict"";
  your code...
})();
</code></pre>

<p>Writing <code>""use strict"";</code> at the very top of your JS file turns on strict
syntax checking. It does the following tasks for us:</p>

<ol>
<li><p>shows an error if you try to assign to an undeclared variable</p></li>
<li><p>stops you from overwriting key JS system libraries</p></li>
<li><p>forbids some unsafe or error-prone language features</p></li>
</ol>

<p><code>use strict</code> also works inside of individual functions. It is always a better practice to include <code>use strict</code> in your code.</p>

<p>Browser compatibility issue: 
The ""use"" directives are meant to be backwards-compatible. Browsers that do not support them will just see a string literal that isn't referenced further. So, they will pass over it and move on.</p>
","4490149","","3345375","","2019-02-06 09:40:32","2019-02-06 09:40:32","","","","0","","",""
"40673991","2","","1335851","2016-11-18 09:53:55","","11","","<p>The main reasons why developers should use <code>""use strict""</code> are:</p>

<ol>
<li><p>Prevents accidental declaration of global variables.Using <code>""use strict()""</code> will make sure that variables are declared with <code>var</code> before use. 
Eg:</p>

<pre><code>function useStrictDemo(){
 'use strict';
 //works fine
 var a = 'No Problem';

 //does not work fine and throws error
 k = ""problem""

 //even this will throw error
 someObject = {'problem': 'lot of problem'};
}
</code></pre></li>
<li>N.B: The <code>""use strict""</code> directive is only recognized at the beginning of a script or a function.</li>
<li><p>The string <code>""arguments""</code> cannot be used as a variable:</p>

<pre><code>""use strict"";
var arguments = 3.14;    // This will cause an error
</code></pre></li>
<li><p>Will restrict uses of keywords as variables. Trying to use them will throw errors.</p></li>
</ol>

<p>In short will make your code less error prone and in turn will make you write good code.</p>

<p>To read more about it you can refer <a href=""http://www.w3schools.com/js/js_strict.asp"" rel=""noreferrer"">here</a>.</p>
","1475228","","1475228","","2017-06-18 03:14:24","2017-06-18 03:14:24","","","","0","","",""
"40706413","2","","1335851","2016-11-20 16:23:54","","9","","<p>Normally, JavaScript does not follow strict rules, hence increasing chances of errors. After using <code>""use strict""</code>, the JavaScript code should follow strict set of rules as in other programming languages such as use of terminators, declaration before initialization, etc. </p>

<p>If <code>""use strict""</code> is used, the code should be written by following a strict set of rules, hence decreasing the chances of errors and ambiguities.</p>
","6773472","","1402846","","2019-01-04 02:04:58","2019-01-04 02:04:58","","","","0","","",""
"44113082","2","","1335851","2017-05-22 12:38:35","","32","","<p><code>""use strict""</code> makes JavaScript code to run in <em>strict mode</em>, which basically means everything needs to be defined before use. The main reason for using strict mode is to avoid accidental global uses of undefined methods.</p>

<p>Also in strict mode, things run faster, some warnings or silent warnings throw fatal errors, it's better to always use it to make a neater code.</p>

<p><code>""use strict""</code> is widely needed to be used in ECMA5, <strong>in ECMA6 it's part of JavaScript by default</strong>, so it doesn't need to be added if you're using ES6.</p>

<p>Look at these statements and examples from MDN:</p>

<blockquote>
  <p><strong>The ""use strict"" Directive</strong><br> The ""use strict"" directive is new in
  JavaScript 1.8.5 (ECMAScript version 5). It is not a statement, but a
  literal expression, ignored by earlier versions of JavaScript. The
  purpose of ""use strict"" is to indicate that the code should be
  executed in ""strict mode"". With strict mode, you can not, for example,
  use undeclared variables.</p>
  
  <p><strong>Examples of using ""use strict"":</strong><br>
  Strict mode for functions: Likewise, to invoke strict mode for a
  function, put the exact statement ""use strict""; (or 'use strict';) in
  the function's body before any other statements.</p>
</blockquote>

<p><strong>1) strict mode in functions</strong> </p>

<pre><code> function strict() {
     // Function-level strict mode syntax
     'use strict';
     function nested() { return 'And so am I!'; }
     return ""Hi!  I'm a strict mode function!  "" + nested();
 }
 function notStrict() { return ""I'm not strict.""; }

 console.log(strict(), notStrict());
</code></pre>

<p><strong>2) whole-script strict mode</strong> </p>

<pre><code>'use strict';
var v = ""Hi! I'm a strict mode script!"";
console.log(v);
</code></pre>

<p><strong>3) Assignment to a non-writable global</strong></p>

<pre><code>'use strict';

// Assignment to a non-writable global
var undefined = 5; // throws a TypeError
var Infinity = 5; // throws a TypeError

// Assignment to a non-writable property
var obj1 = {};
Object.defineProperty(obj1, 'x', { value: 42, writable: false });
obj1.x = 9; // throws a TypeError

// Assignment to a getter-only property
var obj2 = { get x() { return 17; } };
obj2.x = 5; // throws a TypeError

// Assignment to a new property on a non-extensible object.
var fixed = {};
Object.preventExtensions(fixed);
fixed.newProp = 'ohai'; // throws a TypeError
</code></pre>

<p>You can <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"" rel=""noreferrer"">read more on MDN</a>.</p>
","5423108","","2157640","","2018-08-30 15:16:03","2018-08-30 15:16:03","","","","0","","",""
"54400182","2","","1335851","2019-01-28 10:42:25","","0","","<p><strong>""use strict""; Defines that JavaScript code should be executed in
   ""strict mode"".</strong></p>

<ul>
<li>The ""use strict"" directive was new in ECMAScript version 5.</li>
<li>It is not a statement, but a literal expression, ignored by earlier
versions of JavaScript.</li>
<li>The purpose of ""use strict"" is to indicate that the code should be
executed in ""strict mode"".</li>
<li>With strict mode, you can not, for example, use undeclared variables.</li>
</ul>

<p>All modern browsers support ""use strict"" except <em>Internet Explorer 9 and lower</em>.</p>

<p><strong>Disadvantage</strong></p>

<p>If a developer used a library that was in strict mode, but the developer was used to working in normal mode, they might call some actions on the library that wouldn’t work as expected.</p>

<p>Worse, since the developer is in normal mode, they don’t have the advantages of extra errors being thrown, so the error might fail silently.</p>

<p>Also, as listed above, strict mode stops you from doing certain things.</p>

<p>People generally think that you shouldn’t use those things in the first place, but some developers don’t like the constraint and want to use all the features of the language.</p>

<ul>
<li><p><strong>For basic example and for reference go through :</strong></p>

<p><a href=""https://www.tutorialsteacher.com/javascript/javascript-strict"" rel=""nofollow noreferrer"">https://www.tutorialsteacher.com/javascript/javascript-strict</a></p></li>
</ul>
","10943108","","","","","2019-01-28 10:42:25","","","","0","","",""
"1552353","2","","1552340","2009-10-12 01:51:34","","2202","","<pre><code>git diff --name-only SHA1 SHA2
</code></pre>

<p>where you only need to include enough of the SHA to identify the commits. You can also do, for example</p>

<pre><code>git diff --name-only HEAD~10 HEAD~5
</code></pre>

<p>to see the differences between the tenth latest commit and the fifth latest (or so).</p>
","157237","","","","","2009-10-12 01:51:34","","","","11","","",""
"6827937","2","","1552340","2011-07-26 09:26:18","","366","","<pre><code>git diff --name-status [SHA1 [SHA2]]
</code></pre>

<p>is like --name-only, except you get a simple prefix telling you what happened to the file (modified, deleted, added...)</p>

<pre><code>git log --name-status --oneline [SHA1..SHA2]
</code></pre>

<p>is similar, but commits are listed after the commit message, so you can see when a file was changed.</p>

<ul>
<li><p>if you're interested in just what happened to certain files/folders you can append <code>-- &lt;filename&gt; [&lt;filename&gt;...]</code> to the <code>git log</code> version.</p></li>
<li><p>if you want to see what happened for a single commit, call it SHA1, then do<br>
<code>git log --name-status --oneline [SHA1^..SHA1]</code></p></li>
</ul>

<p>File status flags:<br>
M modified   -   File has been modified<br>
C copy-edit -    File has been copied and modified<br>
R rename-edit -  File has been renamed and modified<br>
A added       -   File has been added<br>
D deleted -      File has been deleted<br>
U unmerged -     File has conflicts after a merge   </p>
","623519","","1709587","","2017-03-10 22:15:48","2017-03-10 22:15:48","","","","4","","",""
"9791602","2","","1552340","2012-03-20 17:10:23","","44","","<p>But for seeing the files changed between your branch and its common ancestor with another branch (say origin/master):</p>

<pre><code>git diff --name-only `git merge-base origin/master HEAD`
</code></pre>
","17055","","17055","","2017-02-23 19:08:21","2017-02-23 19:08:21","","","","5","","",""
"25763660","2","","1552340","2014-09-10 10:59:35","","3","","<p>Use
git log --pretty=oneline >C:\filename.log</p>

<p>which will log only a oneline (--pretty=oneline) thats the name of the changed file. Also will log all the details to your output file.</p>
","3111175","","","","","2014-09-10 10:59:35","","","","1","","",""
"29569456","2","","1552340","2015-04-10 19:38:17","","8","","<p>Add below alias to your <code>~/.bash_profile</code>, then run, <code>source ~/.bash_profile</code>; now anytime you need to see the updated files in the last commit, run, <code>showfiles</code> from your git repository. </p>

<pre><code>alias showfiles='git show --pretty=""format:"" --name-only'
</code></pre>
","577878","","","","","2015-04-10 19:38:17","","","","1","","",""
"32896508","2","","1552340","2015-10-01 20:42:14","","3","","<p>Also note, if you just want to see the changed files between the last commit and the one before it. This works fine: <code>git show --name-only</code></p>
","181310","","","","","2015-10-01 20:42:14","","","","0","","",""
"33495736","2","","1552340","2015-11-03 09:39:46","","0","","<p>Based on <code>git diff --name-status</code> I wrote the <a href=""https://github.com/opicbernard/git-diffview"" rel=""nofollow"">git-diffview</a> git extension that renders a hierarchical tree view of what changed between two paths.</p>
","3136493","","","","","2015-11-03 09:39:46","","","","0","","",""
"50155271","2","","1552340","2018-05-03 12:37:07","","2","","<p>As artfulrobot said in his answer:</p>

<pre><code>git diff --name-status [SHA1 [SHA2]]
</code></pre>

<p>My example:</p>

<pre><code>git diff --name-status 78a09k12067c24d8f117886c4723ccf111af4997 
4b95d595812211553070046bf2ebd807c0862cca
M       views/layouts/default.ctp
M       webroot/css/theme.css
A       webroot/img/theme/logo.png
</code></pre>
","4242086","","","","","2018-05-03 12:37:07","","","","0","","",""
"53344206","2","","1552340","2018-11-16 19:27:47","","0","","<p>The following works well for me:</p>

<p><code>$ git show --name-only --format=tformat: SHA1..SHA2</code></p>

<p>It can also be used with a single commit:</p>

<p><code>git show --name-only --format=tformat: SHA1</code></p>

<p>which is handy for use in Jenkins where you are provided with a List of changeSet SHA's, and want to iterate over them to see which files have been changed. </p>

<p>This is similar to a couple of the answers above, but using <code>tformat:</code> rather than <code>format:</code> removes the separator space between commits.</p>
","1259990","","","","","2018-11-16 19:27:47","","","","0","","",""
"54413550","2","","1552340","2019-01-29 03:48:16","","0","","<p>Just for someone who needs to focus only on Java files, this is my solution:</p>

<pre><code> git diff --name-status SHA1 SHA2 | grep '\.java$'
</code></pre>
","6163756","","","","","2019-01-29 03:48:16","","","","0","","",""
"1764501","2","","1764483","2009-11-19 16:16:32","","20","","<p>I would suggest simply <em>UsersRoles</em>, as that is what it holds.</p>
","20315","","","","","2009-11-19 16:16:32","","","","1","","",""
"1764507","2","","1764483","2009-11-19 16:16:58","","-1","","<p>Indeed, use table aliases and select the columns with same names apart with the AS selector.</p>

<p>e.g. <code>SELECT user.id AS user_id</code></p>
","213633","","","","","2009-11-19 16:16:58","","","","0","","",""
"1764508","2","","1764483","2009-11-19 16:16:59","","25","","<p>I'd call the users table <code>User</code>, the roles table <code>Role</code> and the join table <code>UserRoles</code>.</p>

<p>By the way, the pk <code>Id</code> is not really necessary in a join table. Better make the <code>UserId</code> and <code>RoleId</code> together the pk or just uk (unique key) so that you can ensure unique <code>User</code>-<code>Role</code> relationships.</p>
","157882","","157882","","2009-11-19 16:32:53","2009-11-19 16:32:53","","","","11","","",""
"1764512","2","","1764483","2009-11-19 16:17:20","","6","","<p>We have the same structure and call the link table UserRoles.</p>
","144424","","","","","2009-11-19 16:17:20","","","","2","","",""
"1764516","2","","1764483","2009-11-19 16:17:42","","0","","<p>We've always used the names of the two tables followed by the word, 'Links'.
So in your example our table name would be 'UsersRolesLinks'.</p>
","88069","","","","","2009-11-19 16:17:42","","","","0","","",""
"1764528","2","","1764483","2009-11-19 16:18:48","","0","","<p>You could steal a page from Microsoft, and call it <em>UsersInRoles</em>.</p>
","106356","","","","","2009-11-19 16:18:48","","","","0","","",""
"1764538","2","","1764483","2009-11-19 16:20:28","","8","","<p>I'd call the link table this:</p>

<pre><code>Remove_The_Surrogate_Primary_Key_From_The_Link_Table_Unless_You_Can_Prove_That_You_Really_Need_One
</code></pre>
","55159","","","","","2009-11-19 16:20:28","","","","8","","","2009-11-19 16:20:28"
"1764571","2","","1764483","2009-11-19 16:24:15","","29","","<p>It seems like the mapping table is storing all the roles that each user is a member of.  If this is correct I would call the table <code>UserRoles</code>.</p>

<p>This correctly (IMO) pluralizes the intent of the table rather than <code>UsersRoles</code> which just sounds odd.</p>
","1314","","","","","2009-11-19 16:24:15","","","","0","","",""
"1764676","2","","1764483","2009-11-19 16:37:44","","2","","<p>I've always gone with something like : <code>rel_user_roles</code> or <code>relUserRoles</code>. Which table goes first usually just depends on where it is in the data model.</p>
","214749","","","","","2009-11-19 16:37:44","","","","0","","",""
"1764704","2","","1764483","2009-11-19 16:41:09","","1","","<p>I have a convention which I find easy to see right away:</p>

<pre><code>User
Role
User2Role
</code></pre>
","175308","","","","","2009-11-19 16:41:09","","","","0","","",""
"1764937","2","","1764483","2009-11-19 17:09:24","","4","","<p>This is the convention at my workplace:</p>

<pre><code>UsersXRoles
</code></pre>
","41595","","","","","2009-11-19 17:09:24","","","","1","","",""
"1765003","2","","1764483","2009-11-19 17:15:57","","8","","<ul>
<li>Table names should always be singular, that way later you don't have to be like ""is it <code>User</code> or <code>Users</code>? What about things that end in an S? etc"" (I would change this now if you just started the project)</li>
<li>The common convention would be: <code>User</code>, <code>Role</code>, and the xref table: <code>UserRole</code>.</li>
<li>The most important table, or the one that existed before goes first. This is specially true if the 'role' table has no real use outside user permission stuff. so <code>UserRole</code> makes much more sense than <code>RoleUser</code>.</li>
<li>I've seen things like <code>User_X_Role</code> or <code>UserXRole</code> as well, if you like the extra verbosity</li>
</ul>
","26192","","26192","","2009-11-19 18:01:19","2009-11-19 18:01:19","","","","1","","",""
"12727726","2","","1764483","2012-10-04 12:51:25","","2","","<p>I've been thinking carefully about this, and I would link the table <code>User</code> and the table <code>Role</code> with the table <code>UsersRoles</code>.  I think its nice, because it indicates that the many-to-many relationship could be considered as linking many roles to one user, or indeed many users to one role (so both being plural makes sense).  It can also be read as ""Users' roles"", indicating that the normal way of thinking about the relationship is the ""roles that a user has"" way round.</p>
","178757","","","","","2012-10-04 12:51:25","","","","1","","",""
"19417647","2","","1764483","2013-10-17 03:18:05","","1","","<p>2 approaches:</p>

<ol>
<li><p>where you will only ever have one relationship between the tables: join table could be RoleUser or Role_User.  Go alphabetic with your name order, Role 1st, then User, then you don't have to try to remember!</p></li>
<li><p>where you will have multiple relationships between the tables: <em>relationshipname</em> - e.g. you might have a list of regular roles for users, and you might have a list of potential, or past roles for users.  Same 2 tables, but different relationships.  Then you might have RoleUser_Current and RoleUser_Past.</p></li>
</ol>
","1727453","","","","","2013-10-17 03:18:05","","","","0","","",""
"49790878","2","","1764483","2018-04-12 07:52:07","","0","","<p>Its good to name join table by using names of tables which it connects.
For example two tables ""products"" and ""product_tags"", and the joining table is called ""product_product_tags"".
The big advantage is that from this name you can immediatelly say which tables its joining together. When you have 50 and more tables in your DB its good to have it like this and you no longer need to think about joining tables purposes.</p>
","4883721","","","","","2018-04-12 07:52:07","","","","0","","",""
"1986398","2","","1986386","2009-12-31 17:51:19","","1765","","<p>You're looking for <a href=""http://ruby-doc.org/core-2.3.1/Array.html#method-i-include-3F"" rel=""noreferrer""><code>include?</code></a>:</p>

<pre><code>&gt;&gt; ['Cat', 'Dog', 'Bird'].include? 'Dog'
=&gt; true
</code></pre>
","69755","","2202702","","2016-04-29 12:02:04","2016-04-29 12:02:04","","","","10","","",""
"1986404","2","","1986386","2009-12-31 17:52:15","","47","","<p>Use <code>Enumerable#include</code>:</p>

<pre><code>a = %w/Cat Dog Bird/

a.include? 'Dog'
</code></pre>

<p>Or, if a number of tests are done,<sup>1</sup> you can get rid of the loop (that even <code>include?</code> has) and go from <em>O(n)</em> to <em>O(1)</em> with:</p>

<pre><code>h = Hash[[a, a].transpose]
h['Dog']
</code></pre>

<p><hr>
<sup>1. I hope this is obvious but to head off objections: yes, for just a few lookups, the Hash[] and transpose ops dominate the profile and are each <em>O(n)</em> themselves.</sup></p>
","140740","","140740","","2016-02-06 00:18:29","2016-02-06 00:18:29","","","","0","","",""
"1986405","2","","1986386","2009-12-31 17:52:28","","159","","<p>Try</p>

<pre><code>['Cat', 'Dog', 'Bird'].include?('Dog')
</code></pre>
","240245","","","","","2009-12-31 17:52:28","","","","3","","",""
"10601055","2","","1986386","2012-05-15 12:50:11","","221","","<p>There is an <a href=""https://apidock.com/rails/Object/in%3F"" rel=""noreferrer""><code>in?</code> method</a> in <code>ActiveSupport</code> (part of Rails) since v3.1, as pointed out by @campaterson. So within Rails, or if you <code>require 'active_support'</code>, you can write:</p>

<pre><code>'Unicorn'.in?(['Cat', 'Dog', 'Bird']) # =&gt; false
</code></pre>

<p>OTOH, there is no <code>in</code> operator or <code>#in?</code> method in Ruby itself, even though it has been proposed before, <a href=""http://bugs.ruby-lang.org/issues/3845"" rel=""noreferrer"">in particular by Yusuke Endoh</a> a top notch member of ruby-core.</p>

<p>As pointed out by others, the reverse method <a href=""http://www.ruby-doc.org/core-1.9.3/Array.html#method-i-include-3F"" rel=""noreferrer""><code>include?</code></a> exists, for all <code>Enumerable</code>s including <code>Array</code>, <code>Hash</code>, <code>Set</code>, <code>Range</code>:</p>

<pre><code>['Cat', 'Dog', 'Bird'].include?('Unicorn') # =&gt; false
</code></pre>

<hr>

<p>Note that if you have many values in your array, they will all be checked one after the other (i.e. <code>O(n)</code>), while that lookup for a hash will be constant time (i.e <code>O(1)</code>). So if you array is constant, for example, it is a good idea to use a <a href=""http://ruby-doc.org/stdlib-2.2.2/libdoc/set/rdoc/Set.html"" rel=""noreferrer"">Set</a> instead. E.g:</p>

<pre><code>require 'set'
ALLOWED_METHODS = Set[:to_s, :to_i, :upcase, :downcase
                       # etc
                     ]

def foo(what)
  raise ""Not allowed"" unless ALLOWED_METHODS.include?(what.to_sym)
  bar.send(what)
end
</code></pre>

<p>A <a href=""http://pastie.org/3913273"" rel=""noreferrer"">quick test</a> reveals that calling <code>include?</code> on a 10 element <code>Set</code> is about 3.5x faster  than calling it on the equivalent <code>Array</code> (if the element is not found).</p>

<p>A final closing note: be wary when using <code>include?</code> on a <code>Range</code>, there are subtleties, so refer to <a href=""http://ruby-doc.org/core-1.9.3/Range.html#method-i-include-3F"" rel=""noreferrer"">the doc</a> and compare with <a href=""http://ruby-doc.org/core-1.9.3/Range.html#method-i-cover-3F"" rel=""noreferrer""><code>cover?</code></a>...</p>
","8279","","337903","","2017-08-10 20:27:27","2017-08-10 20:27:27","","","","2","","",""
"10672159","2","","1986386","2012-05-20 09:08:35","","44","","<p>If you want to check by a block, you could try any? or all?.  </p>

<pre><code>%w{ant bear cat}.any? {|word| word.length &gt;= 3}   #=&gt; true  
%w{ant bear cat}.any? {|word| word.length &gt;= 4}   #=&gt; true  
[ nil, true, 99 ].any?                            #=&gt; true  
</code></pre>

<p>Details are here: <a href=""http://ruby-doc.org/core-1.9.3/Enumerable.html"" rel=""noreferrer"">http://ruby-doc.org/core-1.9.3/Enumerable.html</a><br>
My inspiration come from here: <a href=""https://stackoverflow.com/a/10342734/576497"">https://stackoverflow.com/a/10342734/576497</a></p>
","576497","","-1","","2017-05-23 12:10:48","2012-06-21 13:24:23","","","","1","","",""
"12897444","2","","1986386","2012-10-15 14:08:53","","3","","<p>There's the other way around, too!</p>

<p>Suppose the array is [ :edit, :update, :create, :show ] - well perhaps the entire <em>seven deadly/restful sins</em> :)</p>

<p>And further toy with the idea of <em>pulling</em> a valid action from some string - say </p>

<blockquote>
  <p>my brother would like me to update his profile</p>
</blockquote>

<h2>Solution</h2>

<pre><code>[ :edit, :update, :create, :show ].select{|v| v if ""my brother would like me to update his profile"".downcase =~ /[,|.| |]#{v.to_s}[,|.| |]/}
</code></pre>
","686227","","","","","2012-10-15 14:08:53","","","","4","","",""
"17028531","2","","1986386","2013-06-10 16:23:39","","29","","<p>Several answers suggest <code>Array#include?</code>, but there is one important caveat: Looking at the source, even <code>Array#include?</code> does perform looping:</p>

<pre><code>rb_ary_includes(VALUE ary, VALUE item)
{
    long i;

    for (i=0; i&lt;RARRAY_LEN(ary); i++) {
        if (rb_equal(RARRAY_AREF(ary, i), item)) {
            return Qtrue;
        }
    }
    return Qfalse;
}
</code></pre>

<p>The way to test the word presence without looping is by constructing a <em>trie</em> for your array. There are many trie implementations out there (google ""ruby trie""). I will use <code>rambling-trie</code> in this example: </p>

<pre><code>a = %w/cat dog bird/

require 'rambling-trie' # if necessary, gem install rambling-trie
trie = Rambling::Trie.create { |trie| a.each do |e| trie &lt;&lt; e end }
</code></pre>

<p>And now we are ready to test the presence of various words in your array without looping over it, in <code>O(log n)</code> time, with same syntactic simplicity as <code>Array#include?</code>, using sublinear <code>Trie#include?</code>:</p>

<pre><code>trie.include? 'bird' #=&gt; true
trie.include? 'duck' #=&gt; false
</code></pre>
","1153747","","","","","2013-06-10 16:23:39","","","","7","","",""
"17961387","2","","1986386","2013-07-31 04:04:02","","4","","<p>For what it's worth, The <a href=""http://ruby-doc.org/core-2.0/Array.html"" rel=""nofollow noreferrer"">Ruby docs</a> are an amazing resource for these kinds of questions.</p>

<p>I would also take note of the length of the array you're searching through. The <code>include?</code> method will run a linear search with O(n) complexity which can get pretty ugly depending on the size of the array. </p>

<p>If you're working with a large (sorted) array, I would consider writing a <a href=""http://en.wikipedia.org/wiki/Binary_search_algorithm"" rel=""nofollow noreferrer"">binary search algorithm</a> which shouldn't be too difficult and has a worst case of O(log n). </p>

<p>Or if you're using Ruby 2.0, you can take advantage of <code>bsearch</code>.</p>
","1123693","","1123693","","2016-12-02 20:47:49","2016-12-02 20:47:49","","","","3","","",""
"19142964","2","","1986386","2013-10-02 17:22:21","","15","","<p>This is another way to do this: use the Array#index method.</p>

<p>It returns the index of the first occurrence of the element in the array.</p>

<p>example:</p>

<pre><code>a = ['cat','dog','horse']
if a.index('dog')
    puts ""dog exists in the array""
end
</code></pre>

<p>index() can also take a block</p>

<p>for example</p>

<pre><code>a = ['cat','dog','horse']
puts a.index {|x| x.match /o/}
</code></pre>

<p>here, return the index of the first word in the array that containing letter 'o'.</p>
","874283","","","","","2013-10-02 17:22:21","","","","1","","",""
"21900925","2","","1986386","2014-02-20 07:24:06","","3","","<p>If we want to not use <code>include?</code> this also works:</p>

<pre><code>['cat','dog','horse'].select{ |x| x == 'dog' }.any?
</code></pre>
","687142","","","","","2014-02-20 07:24:06","","","","1","","",""
"22916211","2","","1986386","2014-04-07 15:04:57","","4","","<p>If you have on mind more values... you can try:</p>

<p>Example: if Cat and Dog exist in the array:</p>

<pre><code>(['Cat','Dog','Bird'] &amp; ['Cat','Dog'] ).size == 2   #or replace 2 with ['Cat','Dog].size
</code></pre>

<p>Instead of:</p>

<pre><code>['Cat','Dog','Bird'].member?('Cat') and ['Cat','Dog','Bird'].include?('Dog')
</code></pre>

<p>Note: member? and include? are the same.</p>

<p><strong>This can do the work in one line!</strong></p>
","1698859","","","","","2014-04-07 15:04:57","","","","0","","",""
"23091602","2","","1986386","2014-04-15 18:29:23","","5","","<p>This will tell you not only that it exists but also how many times it appears:</p>

<pre><code> a = ['Cat', 'Dog', 'Bird']
 a.count(""Dog"")
 #=&gt; 1
</code></pre>
","3245240","","","","","2014-04-15 18:29:23","","","","1","","",""
"23671088","2","","1986386","2014-05-15 06:46:49","","0","","<p>if you don't want to use include? you can first wrap the element in an array and then check whether the wrapped element is equal to the intersection of the array and the wrapped element.  This will return a boolean value based on equality.</p>

<pre><code>def in_array?(array, item)
    item = [item] unless item.is_a?(Array)
    item == array &amp; item
end
</code></pre>
","2675681","","","","","2014-05-15 06:46:49","","","","0","","",""
"23941897","2","","1986386","2014-05-29 19:58:44","","16","","<p>If you don't want to loop, there's no way to do it with Arrays. You should use a Set instead.</p>

<pre><code>require 'set'
s = Set.new
100.times{|i| s &lt;&lt; ""foo#{i}""}
s.include?(""foo99"")
 =&gt; true
[1,2,3,4,5,6,7,8].to_set.include?(4) 
  =&gt; true
</code></pre>

<p>Sets work internally like hashes, so Ruby doesn't need to loop through the collection to find items, since as the name implies, it generates hashes of the keys and creates a memory map so that each hash point to a certain point in memory. The previous example done with a Hash:</p>

<pre><code>fake_array = {}
100.times{|i| fake_array[""foo#{i}""] = 1}
fake_array.has_key?(""foo99"")
  =&gt; true
</code></pre>

<p>The downside is that Sets and hash keys can only include unique items and if you add a lot of items, Ruby will have to rehash the whole thing after certain number of items to build a new map that suits a larger keyspace. For more about this, I recommend you watch <a href=""https://www.youtube.com/watch?v=NMwyWBtSiGM"" rel=""noreferrer"">MountainWest RubyConf 2014 - Big O in a Homemade Hash by Nathan Long</a> </p>

<p>Here's a benchmark:</p>

<pre><code>require 'benchmark'
require 'set'

array = []
set   = Set.new

10_000.times do |i|
  array &lt;&lt; ""foo#{i}""
  set   &lt;&lt; ""foo#{i}""
end

Benchmark.bm do |x|
  x.report(""array"") { 10_000.times { array.include?(""foo9999"") } }
  x.report(""set  "") { 10_000.times { set.include?(""foo9999"")   } }
end
</code></pre>

<p>And the results:</p>

<pre><code>      user     system      total        real
array  7.020000   0.000000   7.020000 (  7.031525)
set    0.010000   0.000000   0.010000 (  0.004816)
</code></pre>
","681520","","","","","2014-05-29 19:58:44","","","","3","","",""
"25384313","2","","1986386","2014-08-19 13:11:26","","2","","<p>How about this way?</p>

<pre class=""lang-rb prettyprint-override""><code>['Cat', 'Dog', 'Bird'].index('Dog')
</code></pre>
","893329","","1149074","","2015-01-25 11:28:30","2015-01-25 11:28:30","","","","1","","",""
"34605942","2","","1986386","2016-01-05 07:04:34","","0","","<p>Here is one more way to do this:</p>

<pre><code>arr = ['Cat', 'Dog', 'Bird']
e = 'Dog'

present = arr.size != (arr - [e]).size
</code></pre>
","794242","","","","","2016-01-05 07:04:34","","","","4","","",""
"36935586","2","","1986386","2016-04-29 10:12:26","","8","","<p>There are multiple ways to accomplish this. A few of them are as follows:</p>

<pre><code>a = [1,2,3,4,5]

2.in? a  #=&gt; true

8.in? a #=&gt; false

a.member? 1 #=&gt; true

a.member? 8 #=&gt; false
</code></pre>
","5881210","","3569921","","2016-07-01 15:36:23","2016-07-01 15:36:23","","","","1","","",""
"40845772","2","","1986386","2016-11-28 13:43:57","","3","","<pre><code>['Cat', 'Dog', 'Bird'].detect { |x| x == 'Dog'}
=&gt; ""Dog""
!['Cat', 'Dog', 'Bird'].detect { |x| x == 'Dog'}.nil?
=&gt; true
</code></pre>
","2334864","","2334864","","2016-12-19 08:01:54","2016-12-19 08:01:54","","","","1","","",""
"40857783","2","","1986386","2016-11-29 04:23:41","","0","","<pre><code>array = [ 'Cat', 'Dog', 'Bird' ]
array.include?(""Dog"")
</code></pre>
","6384279","","","","","2016-11-29 04:23:41","","","","0","","",""
"41325300","2","","1986386","2016-12-25 23:40:10","","28","","<p>Ruby has 11 methods to find elements in an array.</p>

<p>The preferred one is <code>include?</code></p>

<p>Or for repeated access, creating a set and then calling <code>include?</code> or <code>member?</code></p>

<p>Here are all of them,</p>

<pre><code>array.include?(element) # preferred method
array.member?(element)
array.to_set.include?(element)
array.to_set.member?(element)
array.index(element) &gt; 0
array.find_index(element) &gt; 0
array.index { |each| each == element } &gt; 0
array.find_index { |each| each == element } &gt; 0
array.any? { |each| each == element }
array.find { |each| each == element } != nil
array.detect { |each| each == element } != nil
</code></pre>

<p>All of them return a <code>true</code>ish value if the element is present. </p>

<p><code>include?</code> is the preferred method. It uses a C-language <code>for</code> loop internally that breaks when an element matches the internal <code>rb_equal_opt/rb_equal</code> functions. It cannot get much more efficient unless you create a set for repeated membership checks.</p>

<pre><code>VALUE
rb_ary_includes(VALUE ary, VALUE item)
{
  long i;
  VALUE e;

  for (i=0; i&lt;RARRAY_LEN(ary); i++) {
    e = RARRAY_AREF(ary, i);
    switch (rb_equal_opt(e, item)) {
      case Qundef:
        if (rb_equal(e, item)) return Qtrue;
        break;
      case Qtrue:
        return Qtrue;
    }
  }
  return Qfalse;
}
</code></pre>

<p><code>member?</code> is not redefined in <code>Array</code> class and uses an unoptimized implementation from the <code>Enumerable</code> module that literally enumerate through all elements.</p>

<pre><code>static VALUE
member_i(RB_BLOCK_CALL_FUNC_ARGLIST(iter, args))
{
  struct MEMO *memo = MEMO_CAST(args);

  if (rb_equal(rb_enum_values_pack(argc, argv), memo-&gt;v1)) {
    MEMO_V2_SET(memo, Qtrue);
    rb_iter_break();
  }
  return Qnil;
}

static VALUE
enum_member(VALUE obj, VALUE val)
{
  struct MEMO *memo = MEMO_NEW(val, Qfalse, 0);

  rb_block_call(obj, id_each, 0, 0, member_i, (VALUE)memo);
  return memo-&gt;v2;
}
</code></pre>

<p>Translated to Ruby code this does about the following</p>

<pre><code>def member?(value)
  memo = [value, false, 0]
  each_with_object(memo) do |each, memo|
    if each == memo[0]
      memo[1] = true 
      break
    end
  memo[1]
end
</code></pre>

<p>Both <code>include?</code> and <code>member?</code> have <code>O(n)</code> time complexity since the both search the array for the first occurrence of the expected value. </p>

<p>We can use a set to get <code>O(1)</code> access time at the cost of having to create a hash representation of the array first. If you repeatedly check membership on the same array this initial investment can pay off quickly. <code>Set</code> is not implemented in C but as plain Ruby class, still the <code>O(1)</code> access time of the underlying <code>@hash</code> makes this worthwhile.</p>

<p>Here is the implementation of the <code>Set</code> class,</p>

<pre><code>module Enumerable
  def to_set(klass = Set, *args, &amp;block)
    klass.new(self, *args, &amp;block)
  end
end

class Set
  def initialize(enum = nil, &amp;block) # :yields: o
    @hash ||= Hash.new
    enum.nil? and return
    if block
      do_with_enum(enum) { |o| add(block[o]) }
    else
      merge(enum)
    end
  end

  def merge(enum)
    if enum.instance_of?(self.class)
      @hash.update(enum.instance_variable_get(:@hash))
    else
      do_with_enum(enum) { |o| add(o) }
    end
    self
  end

  def add(o)
    @hash[o] = true
    self
  end

  def include?(o)
    @hash.include?(o)
  end
  alias member? include?

  ...
end
</code></pre>

<p>As you can see the <code>Set</code> class just creates an internal <code>@hash</code> instance, maps all objects to <code>true</code> and then checks membership using <code>Hash#include?</code> which is implemented with <code>O(1)</code> access time in the <code>Hash</code> class.</p>

<p>I won't discuss the other 7 methods as they are all less efficient.</p>

<p>There are actually even more methods with <code>O(n)</code> complexity beyond the 11 listed above, but I decided to not list them since scan the entire array rather than breaking at the first match. </p>

<p>Don't use these,</p>

<pre><code># bad examples
array.grep(element).any? 
array.select { |each| each == element }.size &gt; 0
...
</code></pre>
","24468","","24468","","2016-12-25 23:48:10","2016-12-25 23:48:10","","","","3","","",""
"41325331","2","","1986386","2016-12-25 23:48:46","","7","","<p>Fun fact, </p>

<p>You can use <code>*</code> to check array membership in a <code>case</code> expressions. </p>

<pre><code>case element
when *array 
  ...
else
  ...
end
</code></pre>

<p>Notice the little <code>*</code> in the when clause, this checks for membership in the array. </p>

<p>All the usual magic behavior of the splat operator applies, so for example if <code>array</code> is not actually an array but a single element it will match that element.</p>
","24468","","","","","2016-12-25 23:48:46","","","","1","","",""
"43687751","2","","1986386","2017-04-28 19:38:25","","3","","<p>If you need to check multiples times for any key, convert <code>arr</code> to <code>hash</code>, and now check in O(1) </p>

<pre><code>arr = ['Cat', 'Dog', 'Bird']
hash = arr.map {|x| [x,true]}.to_h
 =&gt; {""Cat""=&gt;true, ""Dog""=&gt;true, ""Bird""=&gt;true}
hash[""Dog""]
 =&gt; true
hash[""Insect""]
 =&gt; false
</code></pre>

<p><strong>Performance of <a href=""https://apidock.com/ruby/Hash/has_key%3F"" rel=""nofollow noreferrer"">Hash#has_key?</a> versus <a href=""https://apidock.com/ruby/Array/include%3F"" rel=""nofollow noreferrer"">Array#include?</a></strong></p>

<pre>
Parameter              Hash#has_key?                 Array#include 

Time Complexity         O(1) operation                O(n) operation 

Access Type             Accesses Hash[key] if it      Iterates through each element
                        returns any value then        of the array till it
                        true is returned to the       finds the value in Array
                        Hash#has_key? call
                        call    
</pre>

<p>For single time check using <code>include?</code> is fine</p>
","3442392","","2308683","","2018-09-08 16:22:20","2018-09-08 16:22:20","","","","4","","",""
"54233378","2","","1986386","2019-01-17 10:03:07","","-1","","<blockquote>
  <p>it has many ways to find a element in any array but the simplest way is 'in ?' method.</p>
</blockquote>

<pre><code>example:
arr = [1,2,3,4]
number = 1
puts ""yes #{number} is present in arr"" if number.in? arr
</code></pre>
","5751697","","5751697","","2019-01-17 10:11:09","2019-01-17 10:11:09","","","","0","","",""
"19515594","2","","1552340","2013-10-22 10:42:22","","19","","<p>To supplement @artfulrobot's answer, if you want to show changed files between two branches:</p>

<pre><code>git diff --name-status mybranch..myotherbranch
</code></pre>

<p>Be careful on precedence. If you place the newer branch first then it would show files as deleted rather than added.</p>

<p>Adding a <code>grep</code> can refine things further:</p>

<pre><code>git diff --name-status mybranch..myotherbranch | grep ""A\t""
</code></pre>

<p>That will then show only files added in <code>myotherbranch</code>.</p>
","2044766","","472495","","2013-12-29 13:17:26","2013-12-29 13:17:26","","","","1","","",""
"39069120","2","","1335851","2016-08-21 21:43:24","","16","","<p>Small examples to compare:</p>

<p>Non-strict mode:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>for (i of [1,2,3]) console.log(i)
    
// output:
// 1
// 2
// 3</code></pre>
</div>
</div>
</p>

<p>Strict mode:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>'use strict';
for (i of [1,2,3]) console.log(i)

// output:
// Uncaught ReferenceError: i is not defined</code></pre>
</div>
</div>
</p>

<p>Non-strict mode:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>String.prototype.test = function () {
  console.log(typeof this === 'string');
};

'a'.test();

// output
// false</code></pre>
</div>
</div>
</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>String.prototype.test = function () {
  'use strict';
  
  console.log(typeof this === 'string');
};

'a'.test();

// output
// true</code></pre>
</div>
</div>
</p>
","10550549","","10550549","","2018-11-18 16:31:07","2018-11-18 16:31:07","","","","2","","",""
"34428027","2","","1335851","2015-12-23 03:10:38","","52","","<p>When adding <code>""use strict"";</code>, the following cases will throw a <strong>SyntaxError</strong> before the script is executing:</p>

<ul>
<li><p><em>Paving the way for future ECMAScript versions</em>, using one of the newly reserved keywords (in prevision for <em>ECMAScript 6</em>): <code>implements</code>, <code>interface</code>, <code>let</code>, <code>package</code>, <code>private</code>, <code>protected</code>, <code>public</code>, <code>static</code>, and <code>yield</code>.</p></li>
<li><p>Declaring function in blocks </p>

<pre><code>if(a&lt;b){ function f(){} }
</code></pre></li>
<li><p>Octal syntax </p>

<pre><code>var n = 023;
</code></pre></li>
<li><p><code>this</code> point to the global object.</p>

<pre><code> function f() {
      ""use strict"";
      this.a = 1;
 };
 f(); 
</code></pre></li>
<li><p>Declaring twice the same name for a property name in an object literal </p>

<pre><code> {a: 1, b: 3, a: 7} 
</code></pre>

<p>This is no longer the case in ECMAScript 6 (<a href=""https://bugzilla.mozilla.org/show_bug.cgi?id=1041128"" rel=""noreferrer"">bug 1041128</a>).</p></li>
<li><p>Declaring two function arguments with the same name function </p>

<pre><code>f(a, b, b){}
</code></pre></li>
<li><p>Setting a value to an undeclared variable</p>

<pre><code>function f(x){
   ""use strict"";
   var a = 12;
   b = a + x*35; // error!
}
f();
</code></pre></li>
<li><p>Using <code>delete</code> on a variable name <code>delete myVariable;</code></p></li>
<li><p>Using <code>eval</code> or <code>arguments</code> as variable or function argument name</p>

<pre><code>""use strict"";
arguments++;
var obj = { set p(arguments) { } };
try { } catch (arguments) { }
function arguments() { } 
</code></pre></li>
</ul>

<p>Sources:</p>

<ul>
<li><p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode"" rel=""noreferrer"">Transitioning to strict mode</a> on MDN</p></li>
<li><p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"" rel=""noreferrer"">Strict mode</a> on MDN</p></li>
<li><p><a href=""http://web.archive.org/web/20170707015027/http://cjihrig.com/blog/javascripts-strict-mode-and-why-you-should-use-it/"" rel=""noreferrer"">JavaScript’s Strict Mode and Why You Should Use It</a> on Colin J. Ihrig's blog (archived version)</p></li>
</ul>
","3011380","","2157640","","2017-10-24 10:50:18","2017-10-24 10:50:18","","","","0","","",""
"27114400","2","","1335851","2014-11-24 21:22:08","","577","","<p>The statement <code>""use strict"";</code> instructs the browser to use the Strict mode, which is a reduced and safer feature set of JavaScript. </p>

<h2>List of features (non-exhaustive)</h2>

<ol>
<li><p>Disallows global variables. (Catches missing <code>var</code> declarations and typos in variable names) </p></li>
<li><p>Silent failing assignments will throw error in strict mode (assigning <code>NaN = 5;</code>) </p></li>
<li><p>Attempts to delete undeletable properties will throw (<code>delete Object.prototype</code>) </p></li>
<li><p>Requires all property names in an object literal to be unique (<code>var x = {x1: ""1"", x1: ""2""}</code>) </p></li>
<li><p>Function parameter names must be unique (<code>function sum (x, x) {...}</code>) </p></li>
<li><p>Forbids octal syntax (<code>var x = 023;</code> some devs assume wrongly that a preceding zero does nothing to change the number.) </p></li>
<li><p>Forbids the <code>with</code> keyword </p></li>
<li><p><code>eval</code> in strict mode does not introduce new variables  </p></li>
<li><p>Forbids deleting plain names (<code>delete x;</code>)</p></li>
<li><p>Forbids binding or assignment of the names <code>eval</code> and <code>arguments</code> in any form </p></li>
<li><p>Strict mode does not alias properties of the <code>arguments</code> object with the formal parameters. (i.e. in <code>function sum (a,b) { return arguments[0] + b;}</code> This works because <code>arguments[0]</code> is bound to <code>a</code> and so on. )</p></li>
<li><p><code>arguments.callee</code> is not supported</p></li>
</ol>

<p>[Ref: <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"" rel=""noreferrer"">Strict mode</a>, <em>Mozilla Developer Network</em>]</p>
","223656","","1228","","2016-01-22 18:30:33","2016-01-22 18:30:33","","","","3","","",""
"9643692","2","","1335851","2012-03-10 03:31:15","","58","","<p>If you use a browser released in the last year or so then it most likely supports JavaScript Strict mode. Only older browsers around before ECMAScript 5 became the current standard don't support it. </p>

<p>The quotes around the command make sure that the code will still work in older browsers as well (although the things that generate a syntax error in strict mode will generally just cause the script to malfunction in some hard to detect way in those older browsers).</p>
","1260550","","","","","2012-03-10 03:31:15","","","","2","","",""
"14271451","2","","1186400","2013-01-11 03:59:28","","0","","<p>If you're talking about ActiveRecord objects, I use the 'attribute-defaults' gem.</p>

<p>Documentation &amp; download: <a href=""https://github.com/bsm/attribute-defaults"" rel=""nofollow"">https://github.com/bsm/attribute-defaults</a></p>
","71062","","","","","2013-01-11 03:59:28","","","","0","","",""
"3941201","2","","1186400","2010-10-15 09:59:58","","20","","<p>First of all you can't overload <code>initialize(*args)</code> as it's not called in all cases.</p>

<p>Your best option is to put your defaults into your migration:</p>

<pre><code>add_column :accounts, :max_users, :integer, :default =&gt; 10
</code></pre>

<p>Second best is to place defaults into your model but this will only work with attributes that are initially nil. You may have trouble as I did with <code>boolean</code> columns:</p>

<pre><code>def after_initialize
  if new_record?
    max_users ||= 10
  end
end
</code></pre>

<p>You need the <code>new_record?</code> so the defaults don't override values loaded from the datbase. </p>

<p>You need <code>||=</code> to stop Rails from overriding parameters passed into the initialize method. </p>
","456144","","128421","","2016-04-21 16:17:50","2016-04-21 16:17:50","","","","4","","",""
"1188840","2","","1186400","2009-07-27 15:26:57","","1","","<p>The suggestion to override new/initialize is probably incomplete.  Rails will (frequently) call allocate for ActiveRecord objects, and calls to allocate won't result in calls to initialize.</p>

<p>If you're talking about ActiveRecord objects, take a look at overriding after_initialize.</p>

<p>These blog posts (not mine) are useful:</p>

<p><a href=""http://www.3hv.co.uk/blog/2007/01/18/default-values-in-your-models/"" rel=""nofollow noreferrer"">Default values</a>
<a href=""http://www.3hv.co.uk/blog/2009/06/03/constructors-in-ruby-are-not-guaranteed-to-be-called/"" rel=""nofollow noreferrer"">Default constructors not called</a></p>

<p>[Edit: SFEley points out that Rails actually does look at the default in the database when it instantiates a new object in memory - I hadn't realized that.]</p>
","73046","","73046","","2009-07-27 15:34:45","2009-07-27 15:34:45","","","","0","","",""
"1188834","2","","1186400","2009-07-27 15:26:01","","92","","<p>""Correct"" is a dangerous word in Ruby.  There's usually more than one way to do anything.  If you know you'll <em>always</em> want that default value for that column on that table, setting them in a DB migration file is the easiest way:</p>

<pre><code>class SetDefault &lt; ActiveRecord::Migration
  def self.up
    change_column :people, :last_name, :type, :default =&gt; ""Doe""
  end

  def self.down
    # You can't currently remove default values in Rails
    raise ActiveRecord::IrreversibleMigration, ""Can't remove the default""
  end
end
</code></pre>

<p>Because ActiveRecord autodiscovers your table and column properties, this will cause the same default to be set in any model using it in any standard Rails app.</p>

<p>However, if you only want default values set in specific cases -- say, it's an inherited model that shares a table with some others -- then another elegant way is do it directly in your Rails code when the model object is created:</p>

<pre><code>class GenericPerson &lt; Person
  def initialize(attributes=nil)
    attr_with_defaults = {:last_name =&gt; ""Doe""}.merge(attributes)
    super(attr_with_defaults)
  end
end
</code></pre>

<p>Then, when you do a <code>GenericPerson.new()</code>, it'll always trickle the ""Doe"" attribute up to <code>Person.new()</code> unless you override it with something else.</p>
","145809","","1515819","","2017-06-23 14:59:09","2017-06-23 14:59:09","","","","12","","",""
"1188739","2","","1186400","2009-07-27 15:11:38","","-3","","<p>You can override the constructor for the ActiveRecord model.</p>

<p>Like this:</p>

<pre><code>def initialize(*args)
  super(*args)
  self.attribute_that_needs_default_value ||= default_value
  self.attribute_that_needs_another_default_value ||= another_default_value
  #ad nauseum
end
</code></pre>
","86422","","","","","2009-07-27 15:11:38","","","","1","","",""
"1186593","2","","1186400","2009-07-27 05:51:44","","7","","<p>If you are referring to ActiveRecord objects, you have (more than) two ways of doing this:</p>

<h3>1. Use a :default parameter in the DB</h3>

<p>E.G.</p>

<pre><code>class AddSsl &lt; ActiveRecord::Migration
  def self.up
    add_column :accounts, :ssl_enabled, :boolean, :default =&gt; true
  end

  def self.down
    remove_column :accounts, :ssl_enabled
  end
end
</code></pre>

<p>More info here: <a href=""http://api.rubyonrails.org/classes/ActiveRecord/Migration.html"" rel=""nofollow noreferrer"">http://api.rubyonrails.org/classes/ActiveRecord/Migration.html</a></p>

<h3>2. Use a callback</h3>

<p>E.G. <code>before_validation_on_create</code></p>

<p>More info here: <a href=""http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html#M002147"" rel=""nofollow noreferrer"">http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html#M002147</a></p>
","145248","","145248","","2012-12-03 19:57:59","2012-12-03 19:57:59","","","","5","","",""
"1186428","2","","1186400","2009-07-27 04:25:12","","1","","<p>If you are just setting defaults for certain attributes of a database backed model I'd consider using sql default column values - can you clarify what types of defaults you are using?</p>

<p>There are a number of approaches to handle it, this <a href=""http://blog.phusion.nl/2008/10/03/47/"" rel=""nofollow noreferrer"">plugin</a> looks like an interesting option.</p>
","39819","","","","","2009-07-27 04:25:12","","","","2","","",""
"46282446","2","","1020568","2017-09-18 14:57:42","","0","","<p>Since Ruby 2.4 there is a built in <a href=""https://github.com/ruby/ruby/blob/v2_4_0_preview3/string.c#L6083-L6131"" rel=""nofollow noreferrer"">full Unicode case mapping</a>. Source: <a href=""https://stackoverflow.com/a/38016153/888294"">https://stackoverflow.com/a/38016153/888294</a>. See Ruby 2.4.0 documentation for details: <a href=""https://ruby-doc.org/core-2.4.0/String.html#method-i-downcase"" rel=""nofollow noreferrer"">https://ruby-doc.org/core-2.4.0/String.html#method-i-downcase</a></p>
","888294","","","","","2017-09-18 14:57:42","","","","0","","",""
"38228649","2","","948135","2016-07-06 16:07:17","","4","","<p>As stated in many of the above answers, the === operator is used under the hood on case/when statements. </p>

<p>Here is a few extra information about that operator.</p>

<h2>Case equality operator: ===</h2>

<p>Many of Ruby's built-in classes, such as String, Range, and Regexp, provide their own implementations of the === operator, also known as case-equality, triple equals or threequals. Because it's implemented differently in each class, it will behave differently depending on the type of object it was called on. Generally, it returns true if the object on the right ""belongs to"" or ""is a member of"" the object on the left. For instance, it can be used to test if an object is an instance of a class (or one of its subclasses).</p>

<pre><code>String === ""zen""  # Output: =&gt; true
Range === (1..2)   # Output: =&gt; true
Array === [1,2,3]   # Output: =&gt; true
Integer === 2   # Output: =&gt; true
</code></pre>

<p>The same result can be achieved with other methods which are probably best suited for the job, such as is_a? and instance_of?.</p>

<h3>Range Implementation of ===</h3>

<p>When the === operator is called on a range object, it returns true if the value on the right falls within the range on the left.</p>

<pre><code>(1..4) === 3  # Output: =&gt; true
(1..4) === 2.345 # Output: =&gt; true
(1..4) === 6  # Output: =&gt; false

(""a""..""d"") === ""c"" # Output: =&gt; true
(""a""..""d"") === ""e"" # Output: =&gt; false
</code></pre>

<p>Remember that the === operator invokes the === method of the left-hand object. So (1..4) === 3 is equivalent to (1..4).=== 3. In other words, the class of the left-hand operand will define which implementation of the === method will be called, so the operand positions are not interchangeable. </p>

<h3>Regexp Implementation of ===</h3>

<p>Returns true if the string on the right matches the regular expression on the left.
    /zen/ === ""practice zazen today""  # Output: => true
    # is similar to
    ""practice zazen today""=~ /zen/</p>

<p>The only relevant difference between the two examples above is that, when there is a match, === returns true and =~ returns an integer, which is a truthy value in Ruby. We will get back to this soon.</p>
","6307730","","","","","2016-07-06 16:07:17","","","","0","","",""
"37456498","2","","948135","2016-05-26 09:15:12","","8","","<p>You can do like this in more natural way,</p>

<pre><code>case expression
when condtion1
   function
when condition2
   function
else
   function
end
</code></pre>
","3522082","","","","","2016-05-26 09:15:12","","","","0","","",""
"35954569","2","","948135","2016-03-12 06:33:17","","5","","<pre><code>puts ""Recommend me a language to learn?""
input = gets.chomp.downcase.to_s

case input
when 'ruby'
    puts ""Learn Ruby""
when 'python'
    puts ""Learn Python""
when 'java'
    puts ""Learn Java""
when 'php'
    puts ""Learn PHP""
else
    ""Go to Sleep!""
end
</code></pre>
","2200417","","","","","2016-03-12 06:33:17","","","","0","","",""
"20441220","2","","948135","2013-12-07 12:11:35","","67","","<p>Many programming languages, especially those derived from C, have support for the so-called <a href=""http://en.wikipedia.org/wiki/Switch_statement#Fallthrough"">Switch Fallthrough</a>. I was searching for the best way to do the same in Ruby and thought it might be useful to others:</p>

<p>In C-like languages fallthrough typically looks like this:</p>

<pre class=""lang-c prettyprint-override""><code>switch (expression) {
    case 'a':
    case 'b':
    case 'c':
        // Do something for a, b or c
        break;
    case 'd':
    case 'e':
        // Do something else for d or e
        break;
}
</code></pre>

<p>In Ruby, the same can be achieved in the following way:</p>

<pre><code>case expression
when 'a', 'b', 'c'
  # Do something for a, b or c
when 'd', 'e'
  # Do something else for d or e
end
</code></pre>

<p>This is not strictly equivalent, because it's not possible to let <code>'a'</code> execute a block of code before falling through to <code>'b'</code> or <code>'c'</code>, but for the most part I find it similar enough to be useful in the same way.</p>
","289219","","289219","","2016-05-06 01:59:39","2016-05-06 01:59:39","","","","0","","",""
"19783800","2","","948135","2013-11-05 07:29:51","","19","","<p>Since <code>switch case</code> always returns a single object, we can directly print its result:</p>

<pre><code>puts case a
     when 0
        ""It's zero""
     when 1
        ""It's one""
     end
</code></pre>
","2624953","","63550","","2015-08-08 02:42:17","2015-08-08 02:42:17","","","","0","","",""
"11345195","2","","948135","2012-07-05 13:19:42","","90","","<h1>    case...when</h1>

<p>To add more examples to <a href=""https://stackoverflow.com/a/948157/471214"">Chuck's answer</a>:</p>

<p><strong>With parameter:</strong></p>

<pre><code>case a
when 1
  puts ""Single value""
when 2, 3
  puts ""One of comma-separated values""
when 4..6
  puts ""One of 4, 5, 6""
when 7...9
  puts ""One of 7, 8, but not 9""
else
  puts ""Any other thing""
end
</code></pre>

<p><strong>Without parameter:</strong></p>

<pre><code>case
when b &lt; 3
  puts ""Little than 3""
when b == 3
  puts ""Equal to 3""
when (1..10) === b
  puts ""Something in closed range of [1..10]""
end
</code></pre>

<p>Please, be aware of <a href=""https://stackoverflow.com/a/5694333/471214"">the issue</a> that kikito warns.</p>
","471214","","-1","","2017-05-23 12:26:34","2013-07-23 15:31:37","","","","1","","",""
"26039014","2","","572549","2014-09-25 12:45:05","","741","","<p>Here is table for quick understanding:</p>

<p><strong>Git Version 1.x</strong>:
<img src=""https://i.stack.imgur.com/YfLUZ.jpg"" alt=""enter image description here""></p>

<p><strong>Git Version 2.x</strong>:
<img src=""https://i.stack.imgur.com/KwOLu.jpg"" alt=""enter image description here""></p>

<p>Long-form flags:</p>

<ul>
<li><code>git add -A</code> is equivalent to <code>git add --all</code></li>
<li><code>git add -u</code> is equivalent to <code>git add --update</code></li>
</ul>

<p><strong>Further reading:</strong></p>

<ul>
<li><a href=""https://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide"">Git for beginners: The definitive practical guide</a></li>
<li><a href=""https://try.github.io/levels/1/challenges/1"" rel=""noreferrer"">Got 15 minutes and want to learn Git? (in Interactive Way)</a></li>
<li><a href=""http://pcottle.github.io/learnGitBranching/"" rel=""noreferrer"">http://pcottle.github.io/learnGitBranching/</a></li>
<li><a href=""http://www.wei-wang.com/ExplainGitWithD3/"" rel=""noreferrer"">http://www.wei-wang.com/ExplainGitWithD3/</a></li>
</ul>
","376702","","-1","","2017-05-23 12:26:36","2016-04-14 22:42:43","","","","6","","",""
"2948576","2","","572549","2010-06-01 09:27:35","","128","","<p>So from Charles instructions above, after testing my proposed understanding would be as follow:</p>

<pre class=""lang-bash prettyprint-override""><code># For the next commit
$ git add .   # add to index only files created/modified and not those deleted
$ git add -u  # add to index only files deleted/modified and not those created
$ git add -A  # do both operation at once, add to index all files
</code></pre>

<p>This link might also be helpfull to understand in what situation those commands may be applied: <a href=""http://www.geekgumbo.com/2010/05/16/removing-deleted-files-from-your-git-working-directory/"" rel=""noreferrer"">Removing Deleted Files from your Git Working Directory</a>.</p>
","355244","","","user456814","2013-07-11 05:54:30","2013-07-11 05:54:30","","","","1","","",""
"572660","2","","572549","2009-02-21 09:00:04","","3834","","<p><em>This answer only applies to <strong>Git version 1.x</strong>. For Git version 2.x, see other answers.</em></p>

<hr>

<p><strong>Summary:</strong></p>

<ul>
<li><p><code>git add -A</code> stages <strong>all changes</strong></p></li>
<li><p><code>git add .</code> stages new files and modifications, <strong>without deletions</strong></p></li>
<li><p><code>git add -u</code> stages modifications and deletions, <strong>without new files</strong></p></li>
</ul>

<hr>

<p><strong>Detail:</strong></p>

<p><code>git add -A</code> is equivalent to  <code>git add .; git add -u</code>.</p>

<p>The important point about <code>git add .</code> is that it looks at the working tree and adds all those paths to the staged changes if they are either changed or are new and not ignored, it does not stage any 'rm' actions.</p>

<p><code>git add -u</code> looks at all the <em>already</em> tracked files and stages the changes to those files if they are different or if they have been removed. It does not add any new files, it only stages changes to already tracked files.</p>

<p><code>git add -A</code> is a handy shortcut for doing both of those.</p>

<p>You can test the differences out with something like this (note that for Git version 2.x your output for <code>git add .</code> <code>git status</code> <strong>will</strong> be different):</p>

<pre class=""lang-sh prettyprint-override""><code>git init
echo Change me &gt; change-me
echo Delete me &gt; delete-me
git add change-me delete-me
git commit -m initial

echo OK &gt;&gt; change-me
rm delete-me
echo Add me &gt; add-me

git status
# Changed but not updated:
#   modified:   change-me
#   deleted:    delete-me
# Untracked files:
#   add-me

git add .
git status

# Changes to be committed:
#   new file:   add-me
#   modified:   change-me
# Changed but not updated:
#   deleted:    delete-me

git reset

git add -u
git status

# Changes to be committed:
#   modified:   change-me
#   deleted:    delete-me
# Untracked files:
#   add-me

git reset

git add -A
git status

# Changes to be committed:
#   new file:   add-me
#   modified:   change-me
#   deleted:    delete-me
</code></pre>
","19563","Charles Bailey","578288","Charles Bailey","2018-08-30 16:04:23","2018-08-30 16:04:23","","","","18","","",""
"45807769","2","","1764483","2017-08-22 01:48:37","","0","","<p>I try to keep things simple, but also be descriptive:</p>

<p><strong>user_role_join</strong></p>
","8497726","","","","","2017-08-22 01:48:37","","","","0","","",""
"9106370","2","","1764483","2012-02-02 02:30:51","","1","","<p><code>RoleUser</code> - I use alphabetic ordering (i.e. <code>Role</code> comes before <code>User</code>). That way when you're writing a query you won't have to try and remember which order you used to name the join table.  </p>

<p>I also use singular as someone else mentioned - you don't have to try to remember!  Works for me. </p>
","1184152","","569711","","2012-10-26 09:26:11","2012-10-26 09:26:11","","","","0","","",""
"46839441","2","","1552340","2017-10-19 21:50:40","","43","","<p>It seems that no one has mentioned the switch <code>--stat</code>:</p>

<pre><code>$ git diff --stat HEAD~5 HEAD
 .../java/org/apache/calcite/rex/RexSimplify.java   | 50 +++++++++++++++++-----
 .../apache/calcite/sql/fun/SqlTrimFunction.java    |  2 +-
 .../apache/calcite/sql2rel/SqlToRelConverter.java  | 16 +++++++
 .../org/apache/calcite/util/SaffronProperties.java | 19 ++++----
 .../org/apache/calcite/test/RexProgramTest.java    | 24 +++++++++++
 .../apache/calcite/test/SqlToRelConverterTest.java |  8 ++++
 .../apache/calcite/test/SqlToRelConverterTest.xml  | 15 +++++++
 pom.xml                                            |  2 +-
 .../apache/calcite/adapter/spark/SparkRules.java   |  7 +--
 9 files changed, 117 insertions(+), 26 deletions(-)
</code></pre>

<p>There are also <code>--numstat</code></p>

<pre><code>$ git diff --numstat HEAD~5 HEAD
40      10      core/src/main/java/org/apache/calcite/rex/RexSimplify.java
1       1       core/src/main/java/org/apache/calcite/sql/fun/SqlTrimFunction.java
16      0       core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java
8       11      core/src/main/java/org/apache/calcite/util/SaffronProperties.java
24      0       core/src/test/java/org/apache/calcite/test/RexProgramTest.java
8       0       core/src/test/java/org/apache/calcite/test/SqlToRelConverterTest.java
15      0       core/src/test/resources/org/apache/calcite/test/SqlToRelConverterTest.xml
1       1       pom.xml
4       3       spark/src/main/java/org/apache/calcite/adapter/spark/SparkRules.java
</code></pre>

<p>and <code>--shortstat</code></p>

<pre><code>$ git diff --shortstat HEAD~5 HEAD
9 files changed, 117 insertions(+), 26 deletions(-)
</code></pre>
","1168041","","","","","2017-10-19 21:50:40","","","","2","","",""
"27297377","2","","1552340","2014-12-04 15:10:40","","7","","<p>This will show the changes in files:</p>

<pre><code>git diff --word-diff SHA1 SHA2
</code></pre>
","2172260","","","","","2014-12-04 15:10:40","","","","0","","",""
"36561560","2","","1335851","2016-04-12 00:25:07","","18","","<p>Note that <code>use strict</code> was introduced in <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"" rel=""noreferrer"">EcmaScript 5</a> and was kept since then.</p>

<p>Below are the conditions to trigger strict mode in <a href=""http://www.ecma-international.org/ecma-262/6.0/#sec-strict-mode-code"" rel=""noreferrer"">ES6</a> and <a href=""https://tc39.github.io/ecma262/#sec-strict-mode-code"" rel=""noreferrer"">ES7</a>:</p>

<blockquote>
  <ul>
  <li>Global code is strict mode code if it begins with a Directive    Prologue that contains a Use Strict Directive (see 14.1.1).</li>
  <li>Module code is always strict mode code.</li>
  <li>All parts of a <em>ClassDeclaration</em> or a <em>ClassExpression</em> are strict mode    code.</li>
  <li>Eval code is strict mode code if it begins with a Directive Prologue    that contains a Use Strict Directive or if the call to eval is a direct eval (see 12.3.4.1) that is contained in strict mode code.</li>
  <li>Function code is strict mode code if the associated <em>FunctionDeclaration, FunctionExpression, GeneratorDeclaration, GeneratorExpression, MethodDefinition, or ArrowFunction</em> is contained in strict mode code or if the code that produces the value of the function’s [[ECMAScriptCode]] internal slot begins with a Directive Prologue that contains a Use Strict Directive.</li>
  <li>Function code that is supplied as the arguments to the built-in    Function and Generator constructors is strict mode code if the last argument is a String that when processed is a <em>FunctionBody</em> that begins with a Directive Prologue that contains a Use Strict Directive.</li>
  </ul>
</blockquote>
","2817112","","","","","2016-04-12 00:25:07","","","","0","","",""
"9109889","2","","1764483","2012-02-02 09:29:20","","5","","<p>The database represents am enterprise, right? So what do the people in that enterprise call the relationship?</p>

<p>Here are some I do know:</p>

<ul>
<li><p><code>employee</code> reports to <code>line manager</code> == org chart</p></li>
<li><p><code>student</code> takes <code>course</code> == enrolment</p></li>
<li><p><code>woman</code> marries <code>man</code> == marriages</p></li>
</ul>

<p>When in doubt, ask a domain expert within the enterprise.</p>
","15354","","","","","2012-02-02 09:29:20","","","","1","","",""
"54790703","2","","1986386","2019-02-20 16:09:56","","0","","<p>If you're trying to do this in a <a href=""https://github.com/seattlerb/minitest"" rel=""nofollow noreferrer"">MiniTest</a> unit test, you can use <a href=""https://www.rubydoc.info/github/test-unit/test-unit/Test%2FUnit%2FAssertions:assert_include"" rel=""nofollow noreferrer""><code>assert_includes</code></a>. Example:</p>

<pre><code>pets = ['Cat', 'Dog', 'Bird']
assert_includes(pets, 'Dog')      # -&gt; passes
assert_includes(pets, 'Zebra')    # -&gt; fails 
</code></pre>
","12484","","","","","2019-02-20 16:09:56","","","","0","","",""
"2003515","2","","2003505","2010-01-05 01:13:55","","18516","","<h1>Executive Summary</h1>

<pre><code>$ git push --delete &lt;remote_name&gt; &lt;branch_name&gt;
$ git branch -d &lt;branch_name&gt;
</code></pre>

<p>Note that in most cases the remote name is <code>origin</code>.</p>

<h1>Delete Local Branch</h1>

<p>To delete the <em>local</em> branch use one of the following:</p>

<pre><code>$ git branch -d branch_name
$ git branch -D branch_name
</code></pre>

<p><strong>Note:</strong> The <code>-d</code> option is an alias for <code>--delete</code>, which only deletes the branch if it has already been fully merged in its upstream branch. You could also use <code>-D</code>, which is an alias for <code>--delete --force</code>, which deletes the branch ""irrespective of its merged status."" [Source: <code>man git-branch</code>] </p>

<h1>Delete Remote Branch [Updated on 8-Sep-2017]</h1>

<p>As of <a href=""https://github.com/gitster/git/blob/master/Documentation/RelNotes/1.7.0.txt"" rel=""noreferrer"">Git v1.7.0</a>, you can delete a <strong><em>remote</em></strong> branch using</p>

<pre><code>$ git push &lt;remote_name&gt; --delete &lt;branch_name&gt;
</code></pre>

<p>which might be easier to remember than</p>

<pre><code>$ git push &lt;remote_name&gt; :&lt;branch_name&gt;
</code></pre>

<p>which was added in <a href=""https://github.com/gitster/git/blob/master/Documentation/RelNotes/1.5.0.txt"" rel=""noreferrer"">Git v1.5.0</a> ""to delete a remote branch or a tag.""</p>

<p>Starting on <a href=""https://github.com/git/git/blob/master/Documentation/RelNotes/2.8.0.txt"" rel=""noreferrer"">Git v2.8.0</a> you can also use <code>git push</code> with the <code>-d</code> option as an alias for <code>--delete</code>.</p>

<p>Therefore, the version of Git you have installed will dictate whether you need to use the easier or harder syntax.</p>

<h2>Delete Remote Branch [Original Answer from 5-Jan-2010]</h2>

<p>From Chapter 3 of <a href=""http://git-scm.com/book/en/Git-Branching-Remote-Branches"" rel=""noreferrer""><em>Pro Git</em></a> by Scott Chacon:</p>

<blockquote>
  <h3>Deleting Remote Branches</h3>
  
  <p>Suppose you’re done with a remote branch — say, you and your collaborators are finished with a feature and have merged it into your remote’s master branch (or whatever branch your stable code-line is in). You can delete a remote branch using the rather obtuse syntax <code>git push [remotename] :[branch]</code>. If you want to delete your server-fix branch from the server, you run the following:</p>

<pre><code>$ git push origin :serverfix
To git@github.com:schacon/simplegit.git
 - [deleted]         serverfix
</code></pre>
  
  <p>Boom. No more branch on your server. You may want to dog-ear this page, because you’ll need that command, and you’ll likely forget the syntax. A way to remember this command is by recalling the <code>git push [remotename] [localbranch]:[remotebranch]</code> syntax that we went over a bit earlier. If you leave off the <code>[localbranch]</code> portion, then you’re basically saying, “Take nothing on my side and make it be <code>[remotebranch]</code>.”</p>
</blockquote>

<p>I issued <code>git push origin :bugfix</code> and it worked beautifully. Scott Chacon was right—I will want to <a href=""http://en.wiktionary.org/wiki/dogear#Verb"" rel=""noreferrer"">dog ear</a> that page (or virtually dog ear by answering this on Stack&nbsp;Overflow).</p>

<p>Then you should execute this on other machines</p>

<pre><code>git fetch --all --prune
</code></pre>

<p>to propagate changes.</p>
","95592","","4248328","","2018-12-13 04:45:54","2018-12-13 04:45:54","","","","23","","",""
"7923161","2","","2003505","2011-10-27 22:22:53","","741","","<p>You can also use the following to delete the remote branch</p>

<pre><code>git push --delete origin serverfix
</code></pre>

<p>Which does the same thing as</p>

<pre><code>git push origin :serverfix
</code></pre>

<p>but it may be easier to remember.</p>
","447884","","4248328","","2018-12-13 04:44:17","2018-12-13 04:44:17","","","","2","","",""
"9848609","2","","2003505","2012-03-24 02:21:48","","101","","<p>In addition to the other answers, I often use the <a href=""https://github.com/webmat/git_remote_branch"" rel=""noreferrer"">git_remote_branch</a> tool. It's an extra install, but it gets you a convenient way to interact with remote branches. In this case, to delete:</p>

<pre><code>grb delete branch
</code></pre>

<p>I find that I also use the <code>publish</code> and <code>track</code> commands quite often</p>
","21593","","4248328","","2018-12-13 04:41:10","2018-12-13 04:41:10","","","","0","","",""
"10999165","2","","2003505","2012-06-12 14:51:43","","2994","","<p>Matthew's answer is great for removing <em>remote</em> branches and I also appreciate the explanation, but to make a simple distinction between the two commands:</p>

<p>To remove a <strong><em>local branch</em></strong> from your machine:</p>

<p><code>git branch -d {the_local_branch}</code> (use <code>-D</code> instead to force deleting the branch without checking merged status)</p>

<p>To remove a <strong><em>remote branch</em></strong> from the server:</p>

<p><code>git push origin --delete {the_remote_branch}</code></p>

<p>Reference: <a href=""https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote"" rel=""noreferrer"">https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote</a></p>
","385559","","4551632","","2017-12-18 12:33:13","2017-12-18 12:33:13","","","","8","","",""
"13270340","2","","2003505","2012-11-07 13:02:14","","349","","<p>Tip: When you delete branches using</p>

<pre class=""lang-bash prettyprint-override""><code>git branch -d &lt;branchname&gt; # deletes local branch
</code></pre>

<p>or</p>

<pre class=""lang-bash prettyprint-override""><code>git push origin :&lt;branchname&gt; # deletes remote branch
</code></pre>

<p>only the references are deleted. Even though the branch is actually removed on the remote the references to it still exists in the local repositories of your team members. This means that for other team members the deleted branches are still visible when they do a <code>git branch -a</code>.</p>

<p>To solve this your team members can prune the deleted branches with</p>

<pre><code>git remote prune &lt;repository&gt;
</code></pre>

<p>This is typically <code>git remote prune origin</code>.</p>
","350644","","4248328","","2018-12-13 04:44:30","2018-12-13 04:44:30","","","","3","","",""
"13437928","2","","2003505","2012-11-18 06:11:34","","190","","<p>Another approach is:-</p>

<pre><code>git push --prune origin
</code></pre>

<p><strong><em>WARNING:</em></strong> <em>This will delete all remote branches that do not exist locally.</em> Or more comprehensively,</p>

<pre><code>git push --mirror
</code></pre>

<p>will effectively make the remote repository look like the local copy of the repository (local heads, remotes and tags are mirrored on remote).</p>
","1193481","","4248328","","2018-12-13 04:44:03","2018-12-13 04:44:03","","","","1","","",""
"14345010","2","","2003505","2013-01-15 19:05:13","","119","","<p>If you want to complete both these steps with a single command, you can make an alias for it by adding the below to your <code>~/.gitconfig</code>:</p>

<pre><code>[alias]
    rmbranch = ""!f(){ git branch -d ${1} &amp;&amp; git push origin --delete ${1}; };f""
</code></pre>

<p>Alternatively, you can add this to your global config from the command line using</p>

<pre class=""lang-bash prettyprint-override""><code>git config --global alias.rmbranch \
'!f(){ git branch -d ${1} &amp;&amp; git push origin --delete ${1}; };f'
</code></pre>

<p><strong>NOTE</strong>: If using <code>-d</code> (lowercase d), the branch will only be deleted if it has been merged. To force the delete to happen, you will need to use <code>-D</code> (uppercase D).</p>
","370671","","","user456814","2014-06-11 16:26:17","2014-06-11 16:26:17","","","","1","","",""
"15364667","2","","2003505","2013-03-12 14:57:48","","105","","<p>You can also do this using <code>git remote prune origin</code></p>

<pre><code>$ git remote prune origin
Pruning origin
URL: git@example.com/yourrepo.git
 * [pruned] origin/some-branchs
</code></pre>

<p>It prunes and deletes remote-tracking branches from a <code>git branch -r</code> listing.</p>
","1317035","","4248328","","2018-12-13 04:43:19","2018-12-13 04:43:19","","","","0","","",""
"15775364","2","","2003505","2013-04-02 22:11:24","","159","","<p>I use the following in my <a href=""http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29"" rel=""noreferrer"">Bash</a> settings:</p>

<pre><code>alias git-shoot=""git push origin --delete""
</code></pre>

<p>Then you can call:</p>

<pre><code>git-shoot branchname
</code></pre>
","134077","","4248328","","2018-12-13 04:43:53","2018-12-13 04:43:53","","","","3","","",""
"16276586","2","","2003505","2013-04-29 10:39:35","","127","","<p>Since January 2013, GitHub included a <kbd>Delete branch</kbd> button next to each branch in your ""Branches"" page.</p>

<p>Relevant blog post: <a href=""https://github.com/blog/1377-create-and-delete-branches"" rel=""noreferrer"">Create and delete branches</a></p>
","1026132","","4248328","","2018-12-13 04:42:21","2018-12-13 04:42:21","","","","2","","",""
"19572740","2","","2003505","2013-10-24 17:36:23","","256","","<pre><code>git branch -D &lt;name-of-branch&gt;
git branch -D -r origin/&lt;name-of-branch&gt;
git push origin :&lt;name-of-branch&gt;
</code></pre>
","450148","","450148","","2014-08-08 20:04:03","2014-08-08 20:04:03","","","","2","","",""
"20081966","2","","2003505","2013-11-19 21:02:31","","42","","<p>Mashup of all the other answers. Requires <code>Ruby 1.9.3+</code>, tested <strong>only</strong> on OS X.</p>

<p>Call this file <code>git-remove</code>, make it executable, and put it in your path. Then use, for example, <code>git remove temp</code>. </p>

<pre class=""lang-ruby prettyprint-override""><code>#!/usr/bin/env ruby
require 'io/console'

if __FILE__ == $0
      branch_name = ARGV[0] if (ARGV[0])
      print ""Press Y to force delete local and remote branch #{branch_name}...""
    response = STDIN.getch
    if ['Y', 'y', 'yes'].include?(response)
      puts ""\nContinuing.""
      `git branch -D #{branch_name}`
      `git branch -D -r origin/#{branch_name}`
      `git push origin --delete #{branch_name}` 
    else
      puts ""\nQuitting.""
    end
end
</code></pre>
","8047","","4248328","user456814","2018-12-13 04:42:35","2018-12-13 04:42:35","","","","5","","",""
"20233127","2","","2003505","2013-11-27 03:04:55","","49","","<p>Many of the other answers will lead to errors/warnings. This approach is relatively fool proof although you may still need <code>git branch -D branch_to_delete</code> if it's not fully merged into <code>some_other_branch</code>, for example.</p>

<pre><code>git checkout some_other_branch
git push origin :branch_to_delete
git branch -d branch_to_delete
</code></pre>

<p>Remote pruning isn't needed if you deleted the remote branch. It's only used to get the most up to date remotes available on a repository you're tracking. I've observed <code>git fetch</code> will add remotes, not remove them. Here's an example of when <code>git remote prune origin</code> will actually do something:</p>

<p>User A does the steps above. User B would run the following commands to see the most up to date remote branches</p>

<pre><code>git fetch
git remote prune origin
git branch -r
</code></pre>
","418828","","4248328","","2018-12-13 04:41:37","2018-12-13 04:41:37","","","","0","","",""
"23961231","2","","2003505","2014-05-30 18:32:35","","1724","","<h1>The Short Answers</h1>

<p>If you want more detailed explanations of the following commands, then see the long answers in the next section.</p>

<p>Deleting a remote branch:</p>

<pre class=""lang-bash prettyprint-override""><code>git push origin --delete &lt;branch&gt;  # Git version 1.7.0 or newer
git push origin :&lt;branch&gt;          # Git versions older than 1.7.0
</code></pre>

<p>Deleting a local branch:</p>

<pre class=""lang-bash prettyprint-override""><code>git branch --delete &lt;branch&gt;
git branch -d &lt;branch&gt; # Shorter version
git branch -D &lt;branch&gt; # Force delete un-merged branches
</code></pre>

<p>Deleting a local remote-tracking branch:</p>

<pre class=""lang-bash prettyprint-override""><code>git branch --delete --remotes &lt;remote&gt;/&lt;branch&gt;
git branch -dr &lt;remote&gt;/&lt;branch&gt; # Shorter

git fetch &lt;remote&gt; --prune # Delete multiple obsolete tracking branches
git fetch &lt;remote&gt; -p      # Shorter
</code></pre>

<h1>The Long Answer: there are 3 different branches to delete!</h1>

<p>When you're dealing with deleting branches both locally and remotely, keep in mind that <strong>there are 3 different branches involved</strong>:</p>

<ol>
<li>The local branch <code>X</code>.</li>
<li>The remote origin branch <code>X</code>.</li>
<li>The local remote-tracking branch <code>origin/X</code> that tracks the remote branch <code>X</code>.</li>
</ol>

<p><img src=""https://i.stack.imgur.com/NLAqw.png"" alt=""Visualization of 3 branches""></p>

<p>The original poster used</p>

<pre><code>git branch -rd origin/bugfix
</code></pre>

<p>which only deleted his <strong>local remote-tracking branch</strong> <code>origin/bugfix</code>, and not the actual remote branch <code>bugfix</code> on <code>origin</code>.</p>

<p><img src=""https://i.stack.imgur.com/iCOnz.png"" alt=""Diagram 2""></p>

<p><strong>To delete that actual remote branch</strong>, you need</p>

<pre><code>git push origin --delete bugfix
</code></pre>

<p><img src=""https://i.stack.imgur.com/6Z3GY.png"" alt=""Diagram 3""></p>

<h1>Additional Details</h1>

<p>The following sections describe additional details to consider when deleting your remote and remote-tracking branches.</p>

<h2>Pushing to delete remote branches also deletes remote-tracking branches</h2>

<p>Note that deleting the remote branch <code>X</code> from the command line using a <code>git push</code> <strong>will also delete the local remote-tracking branch</strong> <code>origin/X</code>, so it is not necessary to prune the obsolete remote-tracking branch with <code>git fetch --prune</code> or <code>git fetch -p</code>, though it wouldn't hurt if you did it anyway.</p>

<p>You can verify that the remote-tracking branch <code>origin/X</code> was also deleted by running the following:</p>

<pre class=""lang-bash prettyprint-override""><code># View just remote-tracking branches
git branch --remotes
git branch -r

# View both strictly local as well as remote-tracking branches
git branch --all
git branch -a
</code></pre>

<h2>Pruning the obsolete local remote-tracking branch origin/X</h2>

<p>If you didn't delete your remote branch <code>X</code> from the command line (like above), then your local repo will still contain (a now obsolete) remote-tracking branch <code>origin/X</code>. This can happen if you deleted a remote branch directly through GitHub's web interface, for example.</p>

<p>A typical way to remove these obsolete remote-tracking branches (since Git version 1.6.6) is to simply run <code>git fetch</code> with the <code>--prune</code> or shorter <code>-p</code>. <strong>Note that this removes all obsolete local remote-tracking branches for any remote branches that no longer exist on the remote</strong>:</p>

<pre class=""lang-bash prettyprint-override""><code>git fetch origin --prune
git fetch origin -p # Shorter
</code></pre>

<p>Here is the relevant quote from the <a href=""https://github.com/git/git/blob/v2.0.0/Documentation/RelNotes/1.6.6.txt#L162-L166"" rel=""noreferrer"">1.6.6 release notes</a> (emphasis mine):</p>

<blockquote>
  <p><strong>""git fetch"" learned</strong> <code>--all</code> and <code>--multiple</code>options, to run fetch from
  many repositories, and <strong><code>--prune</code> option to remove remote tracking
  branches that went stale.</strong>  These make ""git remote update"" and ""git
  remote prune"" less necessary (there is no plan to remove ""remote
  update"" nor ""remote prune"", though).</p>
</blockquote>

<h3>Alternative to above automatic pruning for obsolete remote-tracking branches</h3>

<p>Alternatively, instead of pruning your obsolete local remote-tracking branches through <code>git fetch -p</code>, <em>you can avoid making the extra network operation</em> by just manually removing the branch(es) with the <code>--remote</code> or <code>-r</code> flags:</p>

<pre class=""lang-bash prettyprint-override""><code>git branch --delete --remotes origin/X
git branch -dr origin/X # Shorter
</code></pre>

<h2>See Also</h2>

<ul>
<li><a href=""https://jk.gs/git-branch.html"" rel=""noreferrer"">git-branch(1) Manual Page</a>.</li>
<li><a href=""https://jk.gs/git-fetch.html"" rel=""noreferrer"">git-fetch(1) Manual Page</a>.</li>
<li><a href=""https://git-scm.com/book/en/Git-Branching-Remote-Branches"" rel=""noreferrer"">Pro Git &sect; 3.5 Git Branching - Remote Branches</a>.</li>
</ul>
","","user456814","539465","user456814","2016-03-10 12:20:26","2016-03-10 12:20:26","","","","3","","",""
"2373106","2","","2373074","2010-03-03 16:40:40","","1","","<p>if you are writing asp.net then occasionally you have to use double quotes in Eval statements and single quotes for delimiting the values - this is mainly so that the C# inline code knows its using a string in the eval container rather than a character.  Personally I'd only use one or the other as a standard and not mix them, it looks messy thats all.</p>
","2208","","","","","2010-03-03 16:40:40","","","","0","","",""
"2373160","2","","2373074","2010-03-03 16:47:15","","10","","<p>In HTML I don't believe it matters whether you use <code>""</code> or <code>'</code>, but it should be used consistently throughout the document.</p>

<p>My own usage prefers that attributes/html use <code>""</code>, whereas all javascript uses <code>'</code> instead.</p>

<p>This makes it slightly easier, for me, to read and check. If your use makes more sense for you than mine would, there's no need for change. But, to me, your code would <em>feel</em> messy. It's personal is all.</p>
","82548","","","","","2010-03-03 16:47:15","","","","4","","",""
"2373171","2","","2373074","2010-03-03 16:49:17","","373","","<p>The w3 org <a href=""http://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.2"" rel=""noreferrer"">said</a>:</p>

<blockquote>
  <p>By default, SGML requires that all attribute values be delimited using either double quotation marks (ASCII decimal 34) or single quotation marks (ASCII decimal 39). Single quote marks can be included within the attribute value when the value is delimited by double quote marks, and vice versa. Authors may also use numeric character references to represent double quotes (<code>&amp;#34;</code>) and single quotes (<code>&amp;#39;</code>). For double quotes authors can also use the character entity reference <code>&amp;quot;</code>.</p>
</blockquote>

<p>So... seems to be no difference. Only depends on your style.</p>
","229087","","119081","","2010-03-03 16:50:53","2010-03-03 16:50:53","","","","17","","",""
"2373203","2","","2373074","2010-03-03 16:53:36","","-8","","<p>Double quotes are used for strings (i.e., ""this is a string"") and single quotes are used for a character (i.e., 'a', 'b' or 'c').  Depending on the programming language and context, you can get away with using double quotes for a character but not single quotes for a string.</p>

<p>HTML doesn't care about which one you use.  However, if you're writing HTML inside a PHP script, you should stick with double quotes as you will need to escape them (i.e., \""whatever\"") to avoid confusing yourself and PHP.</p>
","273942","","","","","2010-03-03 16:53:36","","","","2","","",""
"2373206","2","","2373074","2010-03-03 16:54:01","","61","","<p>I use <code>""</code> as a top-tier and <code>'</code> as a second tier, as I imagine most people do. For example</p>

<pre><code>&lt;a href=""#"" onclick=""alert('Clicked!');""&gt;Click Me!&lt;/a&gt;
</code></pre>

<p>In that example, you must use both, it is unavoidable.</p>
","174375","","5067993","","2017-07-30 06:38:00","2017-07-30 06:38:00","","","","6","","",""
"2831067","2","","2831059","2010-05-14 00:04:39","","8","","<p>You can try the following:</p>

<pre><code>remove_column :table_name, :column_name
</code></pre>

<p>(<a href=""http://apidock.com/rails/ActiveRecord/ConnectionAdapters/SchemaStatements/remove_column"" rel=""nofollow noreferrer"">Official documentation</a>)</p>
","179125","","1080354","","2018-12-07 09:13:25","2018-12-07 09:13:25","","","","0","","",""
"2963582","2","","2831059","2010-06-03 05:49:17","","808","","<pre><code>remove_column :table_name, :column_name
</code></pre>

<p>For instance:</p>

<pre><code>remove_column :users, :hobby
</code></pre>

<p>would remove the hobby Column from the users table.</p>
","145282","","6318514","","2017-03-09 15:03:13","2017-03-09 15:03:13","","","","5","","",""
"4834901","2","","4834809","2011-01-29 03:09:15","","3","","<p>When I've done this, rather than fiddling the original migration, I create a new one with just the add column in the up section and a drop column in the down section.</p>

<p>You can change the original and rerun it if you migrate down between, but in this case I think that's made a migration that won't work properly.</p>

<p>As currently posted, you're adding the column and then creating the table.</p>

<p>If you change the order it might work.  Or, as you're modifying an existing migration, just add it to the create table instead of doing a separate add column.</p>
","220834","","220834","","2011-01-29 03:21:35","2011-01-29 03:21:35","","","","0","","",""
"4834906","2","","4834809","2011-01-29 03:10:22","","499","","<p>If you have already run your original migration (before editing it), then you need to generate a new migration (<code>rails generate migration add_email_to_users email:string</code> will do the trick). Then do a <code>rake db:migrate</code> and it'll run the new migration.</p>

<p>If you have not yet run the original migration you can just edit it, like you're trying to do. Your migration code is <strong>almost</strong> perfect: you just need to remove the <code>add_column</code> line completely (that code is trying to add a column to a table, before the table has been created, and your table creation code has already been updated to include a <code>t.string :email</code> anyway).</p>
","424300","","1004046","","2013-05-17 12:30:56","2013-05-17 12:30:56","","","","5","","",""
"4981869","2","","2373074","2011-02-13 01:34:46","","11","","<p>If it's all the same, perhaps using single-quotes is better since it doesn't require holding down the shift key. Fewer keystrokes == less chance of RSI.</p>
","531228","","","","","2011-02-13 01:34:46","","","","4","","",""
"5209833","2","","5209814","2011-03-06 10:01:50","","116","","<p>Let me provide answers to both possible questions. Note that your existing title (and original post) ask a question different than what you seek in your edit and subsequent comment.</p>

<hr>

<p><strong>To position an element ""fixed"" relative to a parent element</strong>, you want <code>position:absolute</code> on the child element, and any position mode other than the default or static on your parent element.</p>

<p>For example:</p>



<pre class=""lang-css prettyprint-override""><code>#parentDiv { position:relative; }
#childDiv { position:absolute; left:50px; top:20px; }
</code></pre>

<p>This will position <code>childDiv</code> element 50 pixels left and 20 pixels down relative to parentDiv's position.</p>

<hr>

<p><strong>To position an element ""fixed"" relative to the window</strong>, you want <code>position:fixed</code>, and can use <code>top:</code>, <code>left:</code>, <code>right:</code>, and <code>bottom:</code> to position as you see fit. </p>

<p>For example:</p>

<pre class=""lang-css prettyprint-override""><code>#yourDiv { position:fixed; bottom:40px; right:40px; }
</code></pre>

<p>This will position <code>yourDiv</code> fixed relative to the web browser window, 40 pixels from the bottom edge and 40 pixels from the right edge.</p>
","29152","","2756409","","2018-07-08 22:43:17","2018-07-08 22:43:17","","","","9","","",""
"5340767","2","","5340724","2011-03-17 14:54:25","","15","","<p>Either <code>cherry-pick</code> the relevant commits into branch <code>aq</code> or merge branch <code>master</code> into branch <code>aq</code>.</p>
","66353","","","","","2011-03-17 14:54:25","","","","1","","",""
"5340773","2","","5340724","2011-03-17 14:54:41","","633","","<p>Check out the <code>aq</code> branch, and rebase from <code>master</code>.</p>

<pre><code>git checkout aq
git rebase master
</code></pre>
","13831","","63550","","2016-07-05 16:06:43","2016-07-05 16:06:43","","","","8","","",""
"5340774","2","","5340724","2011-03-17 14:54:47","","229","","<p>You should be able to just <code>git merge origin/master</code> when you are on your aq branch.</p>

<pre><code>git checkout aq
git merge origin/master
</code></pre>
","171742","","","","","2011-03-17 14:54:47","","","","9","","",""
"5345862","2","","5340724","2011-03-17 22:07:51","","22","","<p>There is no guarantee that the master bug fixes are not amongst other commits, hence you can't simply merge. Do</p>

<pre><code>git checkout aq
git cherry-pick commit1
git cherry-pick commit2
git cherry-pick commit3
...
</code></pre>

<p>assuming those commits represent the bug fixes.</p>

<p>From now on though, keep bug fixes in a separate branch. You will be able to just</p>

<pre><code>git merge hotfixes
</code></pre>

<p>when you want to roll them all into the regular dev branch.</p>
","1864976","","1908134","","2018-01-16 18:05:26","2018-01-16 18:05:26","","","","0","","",""
"5508131","2","","5508119","2011-04-01 00:54:33","","47","","<pre><code>SELECT * FROM products WHERE catid IN ('1', '2', '3', '4')
</code></pre>
","572129","","1369235","","2017-06-20 13:04:05","2017-06-20 13:04:05","","","","0","","",""
"5508226","2","","5508119","2011-04-01 01:12:30","","-1","","<pre><code>$SQL_Part=""(""
$i=0;
while ($i&lt;length($cat)-1)
{
   $SQL_Part+=$cat[i]+"","";
}
$SQL_Part=$SQL_Part+$cat[$i+1]+"")""

$SQL=""SELECT * FROM products WHERE catid IN ""+$SQL_Part;
</code></pre>

<p>It's more generic and will fit for any array!!</p>
","484290","","","","","2011-04-01 01:12:30","","","","0","","",""
"5767332","2","","5767325","2011-04-23 22:20:28","","118","","<pre><code>Array.prototype.remByVal = function(val) {
    for (var i = 0; i &lt; this.length; i++) {
        if (this[i] === val) {
            this.splice(i, 1);
            i--;
        }
    }
    return this;
}
//Call like
[1, 2, 3, 4].remByVal(3);
</code></pre>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>Array.prototype.remByVal = function(val) {
    for (var i = 0; i &lt; this.length; i++) {
        if (this[i] === val) {
            this.splice(i, 1);
            i--;
        }
    }
    return this;
}

var rooms = ['hello', 'something']

rooms = rooms.remByVal('hello')

console.log(rooms)</code></pre>
</div>
</div>
</p>
","617762","","3973137","","2017-09-25 04:56:18","2017-09-25 04:56:18","","","","6","","",""
"5767335","2","","5767325","2011-04-23 22:20:56","","1016","","<p>I don't know how you are expecting <code>array.remove(int)</code> to behave. There are three possibilities I can think of that you might be wanting.</p>

<p>To remove an element of an array at an index <code>i</code>:</p>

<pre><code>array.splice(i, 1);
</code></pre>

<p>If you want to remove every element with value <code>number</code> from the array:</p>

<pre><code>for(var i = array.length - 1; i &gt;= 0; i--) {
    if(array[i] === number) {
       array.splice(i, 1);
    }
}
</code></pre>

<p>If you just want to make the element at index <code>i</code> no longer exist, but you don't want the indexes of the other elements to change:</p>

<pre><code>delete array[i];
</code></pre>
","546661","","546661","","2018-12-18 17:42:12","2018-12-18 17:42:12","","","","19","","",""
"5767357","2","","5767325","2011-04-23 22:23:50","","9939","","<p>Find the <code>index</code> of the array element you want to remove, then remove that index with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"" rel=""noreferrer""><code>splice</code></a>.</p>

<blockquote>
  <p>The splice() method changes the contents of an array by removing
  existing elements and/or adding new elements.</p>
</blockquote>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var array = [2, 5, 9];
console.log(array)
var index = array.indexOf(5);
if (index &gt; -1) {
  array.splice(index, 1);
}
// array = [2, 9]
console.log(array);</code></pre>
</div>
</div>
</p>

<p>The second parameter of <code>splice</code> is the number of elements to remove. Note that <code>splice</code> modifies the array in place and returns a new array containing the elements that have been removed.</p>
","613430","","800817","","2019-02-17 00:02:23","2019-02-17 00:02:23","","","","37","","",""
"5767411","2","","5767325","2011-04-23 22:32:45","","383","","<p>Depends on whether you want to keep an empty spot or not.</p>

<p>If you do want an empty slot, delete is fine:</p>

<pre><code>delete array[ index ];
</code></pre>

<p>If you don't, you should use the <a href=""https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice"">splice</a> method:</p>

<pre><code>array.splice( index, 1 );
</code></pre>

<p>And if you need the value of that item, you can just store the returned array's element:</p>

<pre><code>var value = array.splice( index, 1 )[0];
</code></pre>

<p>In case you want to do it in some order, you can use <code>array.pop()</code> for the last one or <code>array.shift()</code> for the first one (and both return the value of the item too).</p>

<p>And if you don't know the index of the item, you can use <code>array.indexOf( item )</code> to get it (in a <code>if()</code> to get one item or in a <code>while()</code> to get all of them). <code>array.indexOf( item )</code> returns either the index or -1 if not found.&nbsp;</p>
","304559","","147057","","2014-07-10 22:43:25","2014-07-10 22:43:25","","","","5","","",""
"7217906","2","","7217894","2011-08-27 22:54:08","","197","","<p><strong>If you haven't already committed your changes</strong>, just use <code>git checkout</code> to move to the new branch and then commit them normally - changes to files are not tied to a particular branch until you commit them.</p>

<p>If you <strong>have</strong> already committed your changes:</p>

<ol>
<li>Type <code>git log</code> and remember the SHA of the commit you want to move.</li>
<li>Check out the branch you want to move the commit to.</li>
<li>Type <code>git cherry-pick SHA</code> substituting the SHA from above.</li>
<li>Switch back to your original branch.</li>
<li>Use <code>git reset HEAD~1</code> to reset back before your wrong-branch commit.</li>
</ol>

<p><code>cherry-pick</code> takes a given commit and applies it to the currently checked-out head, thus allowing you to copy the commit over to a new branch.</p>
","148870","","11410","","2011-08-29 06:34:57","2011-08-29 06:34:57","","","","7","","",""
"7218106","2","","7217894","2011-08-27 23:46:14","","538","","<p><code>git stash</code> is your friend.</p>

<p>If you have not made the commit yet, just run <code>git stash</code>. This will save away all of your changes.</p>

<p>Switch to the branch you want the changes on and run <code>git stash pop</code>.</p>

<p>There are lots of uses for git stash. This is certainly one of the more useful reasons.</p>

<p>An example:</p>

<pre><code># work on some code
git stash
git checkout correct-branch
git stash pop
</code></pre>
","424780","","424780","","2011-08-29 00:52:34","2011-08-29 00:52:34","","","","7","","",""
"7823145","2","","5209814","2011-10-19 14:46:31","","186","","<p>The CSS specification requires that <code>position:fixed</code> be anchored to the viewport, not the containing positioned element.</p>

<p>If you must specify your coordinates relative to a parent, you will have to use JavaScript to find the parent's position relative to the viewport first, then set the child (fixed) element's position accordingly.</p>

<p><strong>ALTERNATIVE</strong>: Some browsers have <code>sticky</code> CSS support which limits an element to be positioned within both its container and the viewport. Per the commit message:</p>

<blockquote>
  <p><code>sticky</code> ... constrains an element to be positioned inside the intersection of its container box, and the viewport.</p>
  
  <p>A stickily positioned element behaves like position:relative (space is
  reserved for it in-flow), but with an offset that is determined by the
  sticky position. Changed isInFlowPositioned() to cover relative and
  sticky.</p>
</blockquote>

<p>Depending on your design goals, this behavior may be helpful in some cases. It is currently a working draft, and has decent support, aside from table elements. <code>position: sticky</code> still needs a <code>-webkit</code> prefix in Safari.</p>

<p>See <a href=""https://caniuse.com/#feat=css-sticky"" rel=""noreferrer"">caniuse</a> for up-to-date stats on browser support.</p>
","2291","","2291","","2018-01-05 00:04:35","2018-01-05 00:04:35","","","","8","","",""
"8799617","2","","3028653","2012-01-10 06:51:48","","12","","<p>1)  <strong>:collection</strong> - Add named routes for other actions that operate on the collection. Takes a hash of <code>#{action} =&gt; #{method}</code>, where method is <code>:get/:post/:put/:delete</code>, an array of any of the previous, or :any if the method does not matter. These routes map to a URL like <strong>/users/customers_list</strong>, with a route of <strong>customers_list_users_url</strong>.</p>

<blockquote>
  <p>map.resources :users, :collection => { :customers_list=> :get }</p>
</blockquote>

<p>2) <code>:member</code> - Same as <code>:collection</code>, but for actions that operate on a
    specific member.</p>

<blockquote>
  <p>map.resources :users, :member => { :inactive=> :post }</p>
</blockquote>

<p>it treated as <code>/users/1;inactive=&gt; [:action =&gt; 'inactive', :id =&gt; 1]</code> </p>
","853453","","2231236","","2014-07-17 09:43:21","2014-07-17 09:43:21","","","","1","","",""
"9461657","2","","9461621","2012-02-27 07:56:13","","149","","<p>Sounds like this should work for you:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>    function kFormatter(num) {
        return num &gt; 999 ? (num/1000).toFixed(1) + 'k' : num
    }
    
    console.log(kFormatter(1200)); // 1.2k
    console.log(kFormatter(900)); // 900</code></pre>
</div>
</div>
</p>
","808921","","1075247","","2019-03-07 13:56:34","2019-03-07 13:56:34","","","","6","","",""
"9462382","2","","9461621","2012-02-27 09:03:47","","149","","<p>A more generalized version:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function nFormatter(num, digits) {
  var si = [
    { value: 1, symbol: """" },
    { value: 1E3, symbol: ""k"" },
    { value: 1E6, symbol: ""M"" },
    { value: 1E9, symbol: ""G"" },
    { value: 1E12, symbol: ""T"" },
    { value: 1E15, symbol: ""P"" },
    { value: 1E18, symbol: ""E"" }
  ];
  var rx = /\.0+$|(\.[0-9]*[1-9])0+$/;
  var i;
  for (i = si.length - 1; i &gt; 0; i--) {
    if (num &gt;= si[i].value) {
      break;
    }
  }
  return (num / si[i].value).toFixed(digits).replace(rx, ""$1"") + si[i].symbol;
}

/*
 * Tests
 */
var tests = [
  { num: 1234, digits: 1 },
  { num: 100000000, digits: 1 },
  { num: 299792458, digits: 1 },
  { num: 759878, digits: 1 },
  { num: 759878, digits: 0 },
  { num: 123, digits: 1 },
  { num: 123.456, digits: 1 },
  { num: 123.456, digits: 2 },
  { num: 123.456, digits: 4 }
];
var i;
for (i = 0; i &lt; tests.length; i++) {
  console.log(""nFormatter("" + tests[i].num + "", "" + tests[i].digits + "") = "" + nFormatter(tests[i].num, tests[i].digits));
}</code></pre>
</div>
</div>
</p>
","87015","","87015","","2017-11-24 12:43:06","2017-11-24 12:43:06","","","","13","","",""
"11371799","2","","2373074","2012-07-07 02:24:20","","-5","","<p>In PHP using double quotes causes a slight decrease in performance because variable names are evaluated, so in practice, I always use single quotes when writing code:</p>

<pre><code>echo ""This will print you the value of $this_variable!"";
echo 'This will literally say $this_variable with no evaluation.';
</code></pre>

<p>So you can write this instead;</p>

<pre><code>echo 'This will show ' . $this_variable . '!';
</code></pre>

<hr>

<p>I believe Javascript functions similarly, so a very tiny improvement in performance, if that matters to you.</p>

<hr>

<p>Additionally, if you look all the way down to HTML spec 2.0, all the tags listed here;</p>

<p><a href=""http://www.w3.org/MarkUp/html-spec/L2index.html"" rel=""nofollow"">W3 HTML DTD Reference</a></p>

<p>(Use doublequotes.) Consistency is important no matter which you tend to use more often.</p>
","1377321","","307310","","2012-07-07 03:34:34","2012-07-07 03:34:34","","","","1","","",""
"11400721","2","","3028653","2012-07-09 18:14:11","","29","","<p>Theo's answer is correct. For documentation's sake, I'd like to also note that the two will generate different path helpers.</p>

<p><code>member {get 'preview'}</code> will generate:</p>

<pre><code>preview_photo_path(@photo) # /photos/1/preview
</code></pre>

<p><code>collection {get 'search'}</code> will generate:</p>

<pre><code>search_photos_path # /photos/search
</code></pre>

<p>Note plurality!</p>
","202875","","","","","2012-07-09 18:14:11","","","","0","","",""
"11647685","2","","3028653","2012-07-25 10:26:41","","193","","<pre><code>                URL                 Helper                      Description
----------------------------------------------------------------------------------------------------------------------------------
member          /photos/1/preview   preview_photo_path(photo)   Acts on a specific resource so required id (preview specific photo)
collection      /photos/search      search_photos_path          Acts on collection of resources(display all photos)
</code></pre>
","398863","","398863","","2016-07-14 12:08:28","2016-07-14 12:08:28","","","","3","","",""
"11757642","2","","11757537","2012-08-01 10:49:22","","54","","<p>The only real way is to have a container around your image and use <code>overflow:hidden</code>:</p>

<p><strong>HTML</strong></p>

<pre><code>&lt;div class=""container""&gt;&lt;img src=""ckk.jpg"" /&gt;&lt;/div&gt;
</code></pre>

<p><strong>CSS</strong></p>

<pre><code>.container {
    width: 300px;
    height: 200px;
    display: block;
    position: relative;
    overflow: hidden;
}

.container img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
}
</code></pre>

<p>It's a pain in CSS to do what you want and center the image, there is a quick fix in jquery such as:</p>

<pre><code>var conHeight = $("".container"").height();
var imgHeight = $("".container img"").height();
var gap = (imgHeight - conHeight) / 2;
$("".container img"").css(""margin-top"", -gap);
</code></pre>

<p><a href=""http://jsfiddle.net/x86Q7/2/"" rel=""noreferrer"">http://jsfiddle.net/x86Q7/2/</a></p>
","828261","","4390133","","2017-03-23 13:12:38","2017-03-23 13:12:38","","","","8","","",""
"11757693","2","","11757537","2012-08-01 10:51:56","","3","","<p>Try something like this: <a href=""http://jsfiddle.net/D7E3E/4/"" rel=""nofollow"">http://jsfiddle.net/D7E3E/4/</a></p>

<p>Using a container with overflow: hidden</p>

<p>EDIT: @Dominic Green beat me.</p>
","871021","","","","","2012-08-01 10:51:56","","","","3","","",""
"11763434","2","","11757537","2012-08-01 16:17:42","","327","","<p>If you want to use the image as a CSS background, there is an elegant solution. Simply use <code>cover</code> or <code>contain</code> in the <code>background-size</code> CSS3 property.</p>

<pre><code>&lt;div class=""container""&gt;&lt;/div&gt;​

.container {
    width: 150px;
    height: 100px;
    background-image: url(""http://i.stack.imgur.com/2OrtT.jpg"");
    background-size: cover;
    background-repeat: no-repeat;
    background-position: 50% 50%;
}​
</code></pre>

<p>While <code>cover</code> will give you a scaled up image, <code>contain</code> will give you a scaled down image. Both will preserve the pixel aspect ratio.</p>

<p><a href=""http://jsfiddle.net/uTHqs/"" rel=""noreferrer"">http://jsfiddle.net/uTHqs/</a> (using cover)</p>

<p><a href=""http://jsfiddle.net/HZ2FT/"" rel=""noreferrer"">http://jsfiddle.net/HZ2FT/</a> (using contain)</p>

<p>This approach has the advantage of being friendly to Retina displays as per Thomas Fuchs' quick guide. <a href=""http://cl.ly/0v2u190o110R"" rel=""noreferrer"">http://cl.ly/0v2u190o110R</a></p>

<p>It's worth mentioning that browser support for both attributes excludes IE6-8. <a href=""http://www.quirksmode.org/css/background.html"" rel=""noreferrer"">http://www.quirksmode.org/css/background.html</a></p>
","1512956","","1512956","","2013-02-22 01:07:31","2013-02-22 01:07:31","","","","11","","",""
"12952256","2","","5767325","2012-10-18 10:13:15","","42","","<p>If you want a new array with the deleted positions removed, you can always delete the specific element and filter out the array. It might need an extension of the <a href=""http://www.tutorialspoint.com/javascript/array_filter.htm"">array object</a> for browsers that don't implement the filter method but in the long term its easier since all you do is this:</p>

<pre><code>var my_array = [1,2,3,4,5,6];
delete my_array[4];
console.log(my_array.filter(function(a){return typeof a !== 'undefined';}));
</code></pre>

<p>Should display <code>[1, 2, 3, 4, 6]</code></p>
","208271","","208271","","2014-09-05 07:59:57","2014-09-05 07:59:57","","","","0","","",""
"13003900","2","","5209814","2012-10-22 01:21:48","","9","","<p>Here is an example of Jon Adams suggestion above in order to fix a div (toolbar) to the right hand side of your page element using jQuery. The idea is to find the distance from the right hand side of the viewport to the right hand side of the page element and to keep the right hand side of the toolbar there!  </p>

<h2>HTML</h2>

<pre><code>&lt;div id=""pageElement""&gt;&lt;/div&gt;
&lt;div id=""toolbar""&gt;&lt;/div&gt;
</code></pre>

<h2>CSS</h2>

<pre><code>#toolbar {
    position: fixed;
}
....
</code></pre>

<h2>jQuery</h2>

<pre><code>function placeOnRightHandEdgeOfElement(toolbar, pageElement) {
    $(toolbar).css(""right"", $(window).scrollLeft() + $(window).width()
    - $(pageElement).offset().left
    - parseInt($(pageElement).css(""borderLeftWidth""),10)
    - $(pageElement).width() + ""px"");
}
$(document).ready(function() {
    $(window).resize(function() {
        placeOnRightHandEdgeOfElement(""#toolbar"", ""#pageElement"");
    });
    $(window).scroll(function () { 
        placeOnRightHandEdgeOfElement(""#toolbar"", ""#pageElement"");
    });
    $(""#toolbar"").resize();
});
</code></pre>
","1764015","","2291","","2012-11-05 02:45:46","2012-11-05 02:45:46","","","","1","","",""
"13824472","2","","13824444","2012-12-11 16:36:16","","8","","<p>From what you printed, it seems <code>var2</code> is an array containing one string. Or actually, it appears to hold the result of running <code>.inspect</code> on an array containing one string.  It would be helpful to show how you are initializing them.</p>

<pre><code>irb(main):005:0* v1 = ""test""
=&gt; ""test""
irb(main):006:0&gt; v2 = [""test""]
=&gt; [""test""]
irb(main):007:0&gt; v3 = v2.inspect
=&gt; ""[\""test\""]""
irb(main):008:0&gt; puts v1,v2,v3
test
test
[""test""]
</code></pre>
","10396","","10396","","2013-09-30 14:13:52","2013-09-30 14:13:52","","","","0","","",""
"13824475","2","","13824444","2012-12-11 16:36:28","","7","","<p><code>var1</code> is a regular string, whereas <code>var2</code> is an array, this is how you should compare (in this case):</p>

<pre><code>puts var1 == var2[0]
</code></pre>
","1441894","","","","","2012-12-11 16:36:28","","","","3","","",""
"13824481","2","","13824444","2012-12-11 16:36:41","","6","","<p>Comparison of strings is very easy in Ruby:</p>

<pre><code>v1 = ""string1""
v2 = ""string2""
puts v1 == v2 # prints false
puts ""hello""==""there"" # prints false
v1 = ""string2""
puts v1 == v2 # prints true
</code></pre>

<p>Make sure your var2 is not an array (which seems to be like)</p>
","658469","","","","","2012-12-11 16:36:41","","","","0","","",""
"13824648","2","","13824444","2012-12-11 16:45:04","","95","","<p>Here are some:</p>

<pre><code>""Ali"".eql? ""Ali""
=&gt; true
</code></pre>

<p>The spaceship (<code>&lt;=&gt;</code>) method can be used to compare two strings in relation to their alphabetical ranking. The &lt;=> method returns 0 if the strings are identical, -1 if the left hand string is less than the right hand string, and 1 if it is greater:</p>

<pre><code>""Apples"" &lt;=&gt; ""Apples""
=&gt; 0

""Apples"" &lt;=&gt; ""Pears""
=&gt; -1

""Pears"" &lt;=&gt; ""Apples""
=&gt; 1
</code></pre>

<p>A case insensitive comparison may be performed using the casecmp method which returns the same values as the &lt;=> method described above:</p>

<pre><code>""Apples"".casecmp ""apples""
=&gt; 0
</code></pre>
","277740","","277740","","2012-12-11 16:51:16","2012-12-11 16:51:16","","","","4","","",""
"13960754","2","","5209814","2012-12-19 20:37:54","","2","","<p>I know this is an older post, but I think a good example of what Jiew Meng was trying to do can already be found on this site.  Check out the side menu located here: <a href=""https://stackoverflow.com/faq#questions"">https://stackoverflow.com/faq#questions</a>.  Looking at it without getting into it too deep, I can tell javascript attaches a fixed position once the scrolling hits below the anchor tag and removes the fixed positioning if the scrolling goes above that same anchor tag.  Hopefully, that will get someone started in the right direction.</p>
","1916890","","-1","","2017-05-23 10:31:12","2012-12-19 20:43:51","","","","1","","",""
"13989373","2","","5767325","2012-12-21 11:32:32","","142","","<p>There are two major approaches:</p>

<ol>
<li><p><strong>splice()</strong>: <code>anArray.splice(index, 1);</code></p></li>
<li><p><strong>delete</strong>: <code>delete anArray[index];</code></p></li>
</ol>

<p>Be careful when you use delete for an array. It is good for deleting attributes of objects but not so good for arrays. It is better to use <code>splice</code> for arrays.</p>

<p>Keep in mind that when you use <code>delete</code> for an array you could get wrong results for <code>anArray.length</code>. In other words, <code>delete</code> would remove the element but wouldn't update the value of length property.</p>

<p>You can also expect to have holes in index numbers after using delete, e.g. you could end up with having indexes 1,3,4,8,9,11 and length as it was before using delete. 
In that case, all indexed <code>for</code> loops would crash, since indexes are no longer sequential.</p>

<p>If you are forced to use <code>delete</code> for some reason, then you should use <a href=""https://stackoverflow.com/questions/9329446/for-each-over-an-array-in-javascript""><code>for each</code></a> loops when you need to loop through arrays. As the matter of fact, always avoid using indexed for loops, if possible. That way the code would be more robust and less prone to problems with indexes.</p>
","897373","","897373","","2017-10-03 12:04:03","2017-10-03 12:04:03","","","","0","","",""
"14994860","2","","9461621","2013-02-21 04:59:33","","59","","<p>Further improving Salman's Answer because it returns nFormatter(33000) as 33.0K</p>

<pre><code>function nFormatter(num) {
     if (num &gt;= 1000000000) {
        return (num / 1000000000).toFixed(1).replace(/\.0$/, '') + 'G';
     }
     if (num &gt;= 1000000) {
        return (num / 1000000).toFixed(1).replace(/\.0$/, '') + 'M';
     }
     if (num &gt;= 1000) {
        return (num / 1000).toFixed(1).replace(/\.0$/, '') + 'K';
     }
     return num;
}
</code></pre>

<p>now nFormatter(33000) = 33K</p>
","1766033","","","","","2013-02-21 04:59:33","","","","3","","",""
"15381347","2","","5767325","2013-03-13 09:28:29","","22","","<p><strong>Update:</strong> This method is recommended only if you cannot use ECMAScript 2015 (formerly known as ES6). If you can use it, other answers here provide much neater implementations.</p>

<hr>

<p><a href=""https://gist.github.com/zykadelic/5069236"" rel=""noreferrer"">This gist here</a> will solve your problem, and also deletes all occurrences of the argument instead of just 1 (or a specified value).</p>

<pre><code>Array.prototype.destroy = function(obj){
    // Return null if no objects were found and removed
    var destroyed = null;

    for(var i = 0; i &lt; this.length; i++){

        // Use while-loop to find adjacent equal objects
        while(this[i] === obj){

            // Remove this[i] and store it within destroyed
            destroyed = this.splice(i, 1)[0];
        }
    }

    return destroyed;
}
</code></pre>

<p>Usage:</p>

<pre><code>var x = [1, 2, 3, 3, true, false, undefined, false];

x.destroy(3);         // =&gt; 3
x.destroy(false);     // =&gt; false
x;                    // =&gt; [1, 2, true, undefined]

x.destroy(true);      // =&gt; true
x.destroy(undefined); // =&gt; undefined
x;                    // =&gt; [1, 2]

x.destroy(3);         // =&gt; null
x;                    // =&gt; [1, 2]
</code></pre>
","638254","","638254","","2017-09-01 22:41:13","2017-09-01 22:41:13","","","","0","","",""
"15484516","2","","15482354","2013-03-18 18:47:19","","5","","<p>What if you try adding something like this:</p>

<pre><code>validates_format_of :body, :with =&gt; /\A[[:graph:]]\Z/i
</code></pre>

<p>Notes:</p>

<ul>
<li><code>validates_format_of</code> lets you validate with regex</li>
<li><code>[[:graph:]]</code> lets you check a string for printable characters (<a href=""http://ruby-doc.org/core-2.0/Regexp.html"" rel=""noreferrer"">see ""Character Classes""</a>)</li>
</ul>
","1167750","","1167750","","2013-03-18 18:58:31","2013-03-18 18:58:31","","","","0","","",""
"15762329","2","","5767325","2013-04-02 10:56:10","","35","","<p>Check out this code. It works in every <strong>major browser</strong>.</p>

<pre><code>remove_item = function (arr, value) {
    var b = '';
    for (b in arr) {
        if (arr[b] === value) {
            arr.splice(b, 1);
            break;
        }
    }
    return arr;
}
</code></pre>

<p>Call this function </p>

<pre><code>remove_item(array,value);
</code></pre>
","1127910","","","user456814","2014-05-24 07:02:53","2014-05-24 07:02:53","","","","3","","",""
"15848647","2","","2831059","2013-04-06 08:24:33","","10","","<pre><code>rails g migration RemoveXColumnFromY column_name:data_type
</code></pre>

<p>X = column name <br>
Y = table name</p>

<p><strong>EDIT</strong></p>

<p>Changed <code>RemoveXColumnToY</code> to <code>RemoveXColumnFromY</code> as per comments - provides more clarity for what the migration is actually doing.</p>
","1653382","","1028679","","2017-11-13 11:01:03","2017-11-13 11:01:03","","","","2","","",""
"16024899","2","","11757537","2013-04-15 21:21:31","","4","","<p>I helped build a jQuery plugin called <a href=""https://github.com/Jux/jquery-fillmore"" rel=""nofollow"">Fillmore</a>, which handles the <code>background-size: cover</code> in browsers that support it, and has a shim for those that don't.  Give it a look!</p>
","358804","","","","","2013-04-15 21:21:31","","","","0","","",""
"16192001","2","","16191820","2013-04-24 12:25:14","","14","","<p>just use <code>rake db:reset</code>, that will drop your database (same as undoing all migrations) and reset to the last schema.</p>

<p><strong>UPDATE</strong>: a more correct approach will be using <code>rake db:migrate:reset</code>. That will drop the database, create it again and run all the migrations, instead of resetting to the latest schema.</p>
","536984","","536984","","2016-11-27 00:03:10","2016-11-27 00:03:10","","","","3","","",""
"16192396","2","","16191820","2013-04-24 12:46:06","","127","","<p>While @Orlandos' response is correct, <code>rake db:reset</code> does not redo all migrations, and, as he says, loads the data from the last schema.
If you want to undo all the migrations and then redo them, you should use:</p>

<pre><code>rake db:migrate:reset #runs db:drop db:create db:migrate
</code></pre>

<p>You can see more information in this post: <a href=""https://stackoverflow.com/questions/10301794/difference-between-rake-dbmigrate-dbreset-and-dbschemaload"">Difference between rake db:migrate db:reset and db:schema:load</a></p>
","1167828","","-1","","2017-05-23 11:55:03","2013-09-16 19:51:18","","","","7","","",""
"16521953","2","","5767325","2013-05-13 12:22:07","","6","","<p>You can iterate over each <code>array</code>-item and <code>splice</code> it if it exist in your <code>array</code>.</p>

<pre><code>function destroy(arr, val) {
    for (var i = 0; i &lt; arr.length; i++) if (arr[i] === val) arr.splice(i, 1);
    return arr;
}
</code></pre>
","1250044","","","","","2013-05-13 12:22:07","","","","2","","",""
"16581496","2","","9529300","2013-05-16 07:32:27","","34","","<p>if you want to change color by hovering in the element, try this:</p>

<pre><code>path:hover{
  fill:red;
}
</code></pre>
","2238803","","","","","2013-05-16 07:32:27","","","","0","","",""
"17074278","2","","17073808","2013-06-12 20:02:03","","14","","<p>Git does not provide such feature. The Git philosophy is to track 'content', not 'files'. Adding files to the staging area allow you to prepare precisely your commit. If several files are added to the staging area, it's because there are linked to the same feature. That's why the commit message represents the whole change.</p>

<p>If you need a message per file, you may consider creating several commits on a feature branch, with only one file per commit.</p>

<p>Hope this helps.</p>
","894194","","","","","2013-06-12 20:02:03","","","","5","","",""
"20690490","2","","5767325","2013-12-19 19:54:26","","838","","<h1>Edited on 2016 october</h1>

<ul>
<li>Do it simple, intuitive and explicit (<a href=""https://en.wikipedia.org/wiki/Occam%27s_razor"" rel=""noreferrer"">https://en.wikipedia.org/wiki/Occam%27s_razor</a>)</li>
<li>Do it immutable (original array stay unchanged)</li>
<li>Do it with standard JS functions, if your browser don't support them - <strong>use polyfill</strong></li>
</ul>

<p>In this code example I use <strong>""array.filter(...)""</strong> function to remove unwanted items from array, this function doesn't change the original array and creates a new one. If your browser don't support this function (e.g. IE before version 9, or Firefox before version 1.5), consider using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Polyfill"" rel=""noreferrer""><strong>the filter polyfill from Mozilla</strong></a>.</p>

<h1>Removing item (ECMA-262 Edition 5 code aka oldstyle JS)</h1>

<pre><code>var value = 3

var arr = [1, 2, 3, 4, 5, 3]

arr = arr.filter(function(item) { 
    return item !== value
})

console.log(arr)
// [ 1, 2, 4, 5 ]
</code></pre>

<h1>Removing item (ES2015 code)</h1>

<pre><code>let value = 3

let arr = [1, 2, 3, 4, 5, 3]

arr = arr.filter(item =&gt; item !== value)

console.log(arr)
// [ 1, 2, 4, 5 ]
</code></pre>

<p><strong>IMPORTANT</strong> ES2015 ""() => {}"" arrow function syntax is not supported in IE at all, Chrome before 45 version, Firefox before 22 version, Safari before 10 version. To use ES2015 syntax in old browsers you can use <a href=""http://babeljs.io"" rel=""noreferrer"">BabelJS</a></p>

<hr>

<h1>Removing multiple items (ES2016 code)</h1>

<p>An additional advantage of this method is that you can remove multiple items</p>

<pre><code>let forDeletion = [2, 3, 5]

let arr = [1, 2, 3, 4, 5, 3]

arr = arr.filter(item =&gt; !forDeletion.includes(item))
// !!! Read below about array.includes(...) support !!!

console.log(arr)
// [ 1, 4 ]
</code></pre>

<p><strong>IMPORTANT</strong> ""array.includes(...)"" function is not supported in IE at all, Chrome before 47 version, Firefox before 43 version, Safari before 9 version and Edge before 14 version so <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Polyfill"" rel=""noreferrer""><strong>here is polyfill from Mozilla</strong></a></p>

<h1>Removing multiple items (Cutting-edge experimental JavaScript ES2018?)</h1>

<pre><code>// array-lib.js

export function remove(...forDeletion) {
    return this.filter(item =&gt; !forDeletion.includes(item))
}

// main.js

import { remove } from './array-lib.js'

let arr = [1, 2, 3, 4, 5, 3]

// :: This-Binding Syntax Proposal
// using ""remove"" function as ""virtual method""
// without extending Array.prototype
arr = arr::remove(2, 3, 5)

console.log(arr)
// [ 1, 4 ]
</code></pre>

<p><a href=""https://babeljs.io/repl/#?babili=false&amp;evaluate=true&amp;lineWrap=false&amp;presets=es2015%2Creact%2Cstage-0%2Cstage-2&amp;targets=&amp;browsers=chrome%20%3E%2050&amp;builtIns=false&amp;code=%20%20%20%20function%20remove(...forDeletion)%20%7B%0A%20%20%20%20%20%20%20%20return%20this.filter(item%20%3D%3E%20!forDeletion.includes(item))%0A%20%20%20%20%7D%0A%0A%20%20%20%20let%20arr%20%3D%20%5B1%2C%202%2C%203%2C%204%2C%205%2C%203%5D%0A%0A%20%20%20%20%2F%2F%20%3A%3A%20This-Binding%20Syntax%20Proposal%0A%20%20%20%20%2F%2F%20using%20remove%20function%20as%20%22virtual%20method%22%0A%20%20%20%20arr%20%3D%20arr%3A%3Aremove(2%2C%203%2C%205)%0A%0A%20%20%20%20console.log(arr)%0A%20%20%20%20%2F%2F%20%5B%201%2C%204%20%5D"" rel=""noreferrer""><strong>Try it yourself in BabelJS :)</strong></a></p>

<p><strong>Reference</strong></p>

<ul>
<li><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes"" rel=""noreferrer"">Array.prototype.includes</a></li>
<li><a href=""https://github.com/tc39/proposal-bind-operator"" rel=""noreferrer"">This-Binding Syntax Proposal</a></li>
<li><a href=""https://vanslaars.io/post/create-pipe-function/"" rel=""noreferrer"">Functional composition</a></li>
</ul>
","3120495","","3120495","","2018-04-06 12:59:39","2018-04-06 12:59:39","","","","16","","",""
"20824579","2","","20824558","2013-12-29 11:16:20","","18","","<p>It doesn't need to be that way, but it's valid JavaScript code. Actually it's quite uncommon to see such syntax. I guess it's a personal preference of the author.</p>
","29407","","63550","","2017-12-08 18:04:26","2017-12-08 18:04:26","","","","5","","",""
"20824614","2","","20824558","2013-12-29 11:20:33","","3","","<blockquote>
  <p>Why would the author write return (next()); ... ?</p>
</blockquote>

<p>Regarding <code>next()</code>:</p>

<p>Probably because his function is something like this:</p>

<pre><code>function next()
{
  var i=0;
  return function (){
    // Do something with that closured i....
  }
}
</code></pre>

<p>Regarding <code>(xxx);</code>:</p>

<p>It is unnecessary. Every minifier will remove it.</p>

<p>Example (uglifyJS):</p>

<p><img src=""https://i.stack.imgur.com/QlOOg.png"" alt=""Enter image description here""></p>

<p>becomes:</p>

<p><img src=""https://i.stack.imgur.com/MlzHG.png"" alt=""Enter image description here""></p>
","859154","","63550","","2017-12-08 18:07:33","2017-12-08 18:07:33","","","","0","","",""
"20925700","2","","20925494","2014-01-04 19:30:31","","18","","<p>The options <code>dependent: :destroy</code> is ignored when using with the <code>:through</code> (see <a href=""http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_many"" rel=""nofollow noreferrer"">doc</a>). You have to do it manually, with a <code>before_destroy</code> <a href=""http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html"" rel=""nofollow noreferrer"">callback</a> for example.</p>

<pre><code> class Deal

   before_destroy :destroy_coupon_codes

   private

   def destroy_coupon_codes
     self.coupon_codes.destroy_all   
   end
 end
</code></pre>
","1128103","","1128103","","2017-10-14 19:55:32","2017-10-14 19:55:32","","","","2","","",""
"21160506","2","","5767325","2014-01-16 11:27:54","","27","","<p>I'm pretty new to JavaScript and needed this functionality. I merely wrote this:</p>

<pre><code>function removeFromArray(array, item, index) {
  while((index = array.indexOf(item)) &gt; -1) {
    array.splice(index, 1);
  }
}
</code></pre>

<p>Then when I want to use it:</p>

<pre><code>//Set-up some dummy data
var dummyObj = {name:""meow""};
var dummyArray = [dummyObj, ""item1"", ""item1"", ""item2""];

//Remove the dummy data
removeFromArray(dummyArray, dummyObj);
removeFromArray(dummyArray, ""item2"");
</code></pre>

<p>Output - As expected.
[""item1"", ""item1""]</p>

<p>You may have different needs than I, so you can easily modify it to suit them. I hope this helps someone.</p>
","3202289","","1250044","","2014-12-30 16:17:43","2014-12-30 16:17:43","","","","0","","",""
"21408685","2","","5767325","2014-01-28 14:44:55","","15","","<p>Based on all the answers which were mainly correct and taking into account the best practices suggested (especially not using Array.prototype directly), I came up with the below code:</p>

<pre><code>function arrayWithout(arr, values) {
  var isArray = function(canBeArray) {
    if (Array.isArray) {
      return Array.isArray(canBeArray);
    }
    return Object.prototype.toString.call(canBeArray) === '[object Array]';
  };

  var excludedValues = (isArray(values)) ? values : [].slice.call(arguments, 1);
  var arrCopy = arr.slice(0);

  for (var i = arrCopy.length - 1; i &gt;= 0; i--) {
    if (excludedValues.indexOf(arrCopy[i]) &gt; -1) {
      arrCopy.splice(i, 1);
    }
  }

  return arrCopy;
}
</code></pre>

<p>Reviewing the above function, despite the fact that it works fine, I realised there could be some performance improvement. Also using ES6 instead of ES5 is a much better approach. To that end, this is the improved code:</p>

<pre><code>const arrayWithoutFastest = (() =&gt; {
  const isArray = canBeArray =&gt; ('isArray' in Array) 
    ? Array.isArray(canBeArray) 
    : Object.prototype.toString.call(canBeArray) === '[object Array]';

  let mapIncludes = (map, key) =&gt; map.has(key);
  let objectIncludes = (obj, key) =&gt; key in obj;
  let includes;

  function arrayWithoutFastest(arr, ...thisArgs) {
    let withoutValues = isArray(thisArgs[0]) ? thisArgs[0] : thisArgs;

    if (typeof Map !== 'undefined') {
      withoutValues = withoutValues.reduce((map, value) =&gt; map.set(value, value), new Map());
      includes = mapIncludes;
    } else {
      withoutValues = withoutValues.reduce((map, value) =&gt; { map[value] = value; return map; } , {}); 
      includes = objectIncludes;
    }

    const arrCopy = [];
    const length = arr.length;

    for (let i = 0; i &lt; length; i++) {
      // If value is not in exclude list
      if (!includes(withoutValues, arr[i])) {
        arrCopy.push(arr[i]);
      }
    }

    return arrCopy;
  }

  return arrayWithoutFastest;  
})();
</code></pre>

<p>How to use:</p>

<pre><code>const arr = [1,2,3,4,5,""name"", false];

arrayWithoutFastest(arr, 1); // will return array [2,3,4,5,""name"", false]
arrayWithoutFastest(arr, 'name'); // will return [2,3,4,5, false]
arrayWithoutFastest(arr, false); // will return [2,3,4,5]
arrayWithoutFastest(arr,[1,2]); // will return [3,4,5,""name"", false];
arrayWithoutFastest(arr, {bar: ""foo""}); // will return the same array (new copy)
</code></pre>

<p>I am currently writing a blog post in which I have benchmarked several solutions for Array without problem and compared the time it takes to run. I will update this answer with the link once I finish that post. Just to let you know, I have compared the above against lodash's without and in case the browser supports <code>Map</code>, it beats lodash! Notice that I am not using <code>Array.prototype.indexOf</code> or <code>Array.prototype.includes</code> as wrapping the exlcudeValues in a <code>Map</code> or <code>Object</code> makes querying faster!</p>
","1538074","","1538074","","2018-11-19 23:02:58","2018-11-19 23:02:58","","","","0","","",""
"21447823","2","","5767325","2014-01-30 04:27:35","","8","","<p>In <a href=""http://en.wikipedia.org/wiki/CoffeeScript"" rel=""noreferrer"">CoffeeScript</a>:</p>

<pre><code>my_array.splice(idx, 1) for ele, idx in my_array when ele is this_value
</code></pre>
","992767","","992767","","2014-09-05 07:21:44","2014-09-05 07:21:44","","","","0","","",""
"21531501","2","","5767325","2014-02-03 15:41:47","","16","","<p>I know there are a lot of answers already, but many of them seem to over complicate the problem.  Here is a simple, recursive way of removing all instances of a key - calls self until index isn't found.  Yes, it only works in browsers with <code>indexOf</code>, but it's simple and can be easily polyfilled.</p>

<p><strong>Stand-alone function</strong></p>

<pre><code>function removeAll(array, key){
    var index = array.indexOf(key);

    if(index === -1) return;

    array.splice(index, 1);
    removeAll(array,key);
}
</code></pre>

<p><strong>Prototype method</strong></p>

<pre><code>Array.prototype.removeAll = function(key){
    var index = this.indexOf(key);

    if(index === -1) return;

    this.splice(index, 1);
    this.removeAll(key);
}
</code></pre>
","2132305","","2132305","","2014-02-19 22:20:53","2014-02-19 22:20:53","","","","1","","",""
"21688894","2","","5767325","2014-02-10 22:06:01","","53","","<p>You can do it easily with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"">filter</a> method:</p>

<pre><code>function remove(arrOriginal, elementToRemove){
    return arrOriginal.filter(function(el){return el !== elementToRemove});
}
console.log( remove([1, 2, 1, 0, 3, 1, 4], 1) );
</code></pre>

<p>This removes all elements from the array and also works faster then combination of slice and indexOf</p>
","1090562","","","","","2014-02-10 22:06:01","","","","6","","",""
"21717780","2","","2831059","2014-02-12 03:06:53","","5","","<p>Give below command it will add in migration file on its own</p>

<pre><code>rails g migration RemoveColumnFromModel
</code></pre>

<p>After running above command you can check migration file remove_column code must be added there on its own</p>

<p>Then migrate the db</p>

<pre><code>rake db:migrate
</code></pre>
","3234432","","","","","2014-02-12 03:06:53","","","","0","","",""
"21771137","2","","11757537","2014-02-14 04:54:31","","5","","<p>Building off of @Dominic Green's answer using jQuery, here is a solution that should work for images that are either wider than they are high or higher than they are wide.</p>

<p><a href=""http://jsfiddle.net/grZLR/4/"" rel=""noreferrer"">http://jsfiddle.net/grZLR/4/</a></p>

<p>There is probably a more elegant way of doing the JavaScript, but this does work.</p>

<pre><code>function myTest() {
  var imgH = $(""#my-img"").height();
  var imgW = $(""#my-img"").width();
  if(imgW &gt; imgH) {
    $("".container img"").css(""height"", ""100%"");
    var conWidth = $("".container"").width();
    var imgWidth = $("".container img"").width();
    var gap = (imgWidth - conWidth)/2;
    $("".container img"").css(""margin-left"", -gap);
  } else {
    $("".container img"").css(""width"", ""100%"");
    var conHeight = $("".container"").height();
    var imgHeight = $("".container img"").height();
    var gap = (imgHeight - conHeight)/2;
    $("".container img"").css(""margin-top"", -gap);
  }
}
myTest();
</code></pre>
","2200263","","","","","2014-02-14 04:54:31","","","","0","","",""
"22350412","2","","2373074","2014-03-12 11:42:18","","1","","<p>Using "" instead of ' when:</p>

<pre><code>&lt;input value=""user""/&gt; //Standard html
&lt;input value=""user's choice""/&gt; //Need to use single quote
&lt;input onclick=""alert('hi')""/&gt; //When giving string as parameter for javascript function
</code></pre>

<p>Using ' instead of "" when:</p>

<pre><code>&lt;input value='""User""'/&gt; //Need to use double quote
var html = ""&lt;input name='username'/&gt;"" //When assigning html content to a javascript variable
</code></pre>
","1424127","","","","","2014-03-12 11:42:18","","","","1","","",""
"22529246","2","","5767325","2014-03-20 09:56:54","","6","","<p>I like this version of splice, removing an element by its value using <code>$.inArray</code>:</p>

<pre><code>$(document).ready(function(){
    var arr = [""C#"",""Ruby"",""PHP"",""C"",""C++""];
    var itemtoRemove = ""PHP"";
    arr.splice($.inArray(itemtoRemove, arr),1);
});
</code></pre>
","626762","","63550","","2014-06-22 22:03:43","2014-06-22 22:03:43","","","","4","","",""
"22962475","2","","2831059","2014-04-09 12:25:33","","21","","<p>There are two good ways to do this:</p>

<h2>remove_column</h2>

<p>You can simply use remove_column, like so:</p>

<pre><code>remove_column :users, :first_name
</code></pre>

<p>This is fine if you only need to make a single change to your schema.</p>

<h2>change_table block</h2>

<p>You can also do this using a change_table block, like so:</p>

<pre><code>change_table :users do |t|
  t.remove :first_name
end
</code></pre>

<p>I prefer this as I find it more legible, and you can make several changes at once.</p>

<p>Here's the full list of supported change_table methods:</p>

<p><a href=""http://apidock.com/rails/ActiveRecord/ConnectionAdapters/SchemaStatements/change_table"" rel=""noreferrer"">http://apidock.com/rails/ActiveRecord/ConnectionAdapters/SchemaStatements/change_table</a></p>
","687677","","687677","","2014-04-28 08:35:42","2014-04-28 08:35:42","","","","0","","",""
"23080956","2","","4834809","2014-04-15 10:23:22","","97","","<p>Use this command at rails console</p>

<pre><code>rails generate migration add_fieldname_to_tablename fieldname:string
</code></pre>

<p>and </p>

<pre><code>rake db:migrate
</code></pre>

<p>to run this migration</p>
","3279009","","46914","","2018-11-05 16:01:25","2018-11-05 16:01:25","","","","2","","",""
"23090409","2","","23090136","2014-04-15 17:20:48","","11","","<p>set the wrapper to height 100%</p>

<pre><code>.vwrapper {
  display: flex;
  flex-direction: column;

  flex-wrap: nowrap;
  justify-content: flex-start;
  align-items: stretch;
  align-content: stretch;

  height: 100%;
}
</code></pre>

<p>and set the 3rd row to flex-grow</p>

<pre><code>#row3 {
   background-color: green;
   flex: 1 1 auto;
   display: flex;
}
</code></pre>

<p><a href=""http://jsfiddle.net/L4d7M/"" rel=""noreferrer"">demo</a></p>
","1926369","","","","","2014-04-15 17:20:48","","","","2","","",""
"23090449","2","","23090136","2014-04-15 17:22:59","","82","","<p>You should set <code>height</code> of <code>html, body, .wrapper</code> to <code>100%</code> (in order to inherit full height) and then just set a <code>flex</code> value greater than <code>1</code> to <code>.row3</code> and not on the others.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.wrapper, html, body {
    height: 100%;
    margin: 0;
}
.wrapper {
    display: flex;
    flex-direction: column;
}
#row1 {
    background-color: red;
}
#row2 {
    background-color: blue;
}
#row3 {
    background-color: green;
    flex:2;
    display: flex;
}
#col1 {
    background-color: yellow;
    flex: 0 0 240px;
}
#col2 {
    background-color: orange;
    flex: 1 1;
}
#col3 {
    background-color: purple;
    flex: 0 0 240px;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""wrapper""&gt;
    &lt;div id=""row1""&gt;this is the header&lt;/div&gt;
    &lt;div id=""row2""&gt;this is the second line&lt;/div&gt;
    &lt;div id=""row3""&gt;
        &lt;div id=""col1""&gt;col1&lt;/div&gt;
        &lt;div id=""col2""&gt;col2&lt;/div&gt;
        &lt;div id=""col3""&gt;col3&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><strong><a href=""http://fiddle.jshell.net/r9VaT/"" rel=""noreferrer"">DEMO</a></strong></p>
","2442099","","937841","","2018-01-18 23:10:00","2018-01-18 23:10:00","","","","3","","",""
"23336560","2","","23336359","2014-04-28 08:51:04","","1","","<p>Ok, first include jQuery library in the <code>&lt;head&gt;</code> section of your document e.g.</p>

<p>Google CDN version</p>

<pre><code>&lt;script src=""//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js""&gt;&lt;/script&gt;
</code></pre>

<p>or download the compressed, production <a href=""http://code.jquery.com/jquery-1.11.0.min.js"" rel=""nofollow"">jQuery 1.11.0</a> and put it in your root folder then include it like this</p>

<pre><code>&lt;script src=""jquery-1.11.0.min.js""&gt;&lt;/script&gt;
</code></pre>

<p>then add below script just before the <code>&lt;/body&gt;</code> tag</p>

<pre><code>&lt;script&gt;
  (function($) {
    $('.search_button').click(function() {
      if($('.search_function').css('display') === 'none') {
         $('.search_function').slideToggle(350);
      }
    });
  })(jQuery);
&lt;/script&gt;
</code></pre>

<p>Here's a <kbd><strong><a href=""http://jsfiddle.net/mdesdev/Af6v8/"" rel=""nofollow"">FIDDLE</a></strong></kbd></p>
","2666313","","2666313","","2014-04-28 09:07:38","2014-04-28 09:07:38","","","","2","","",""
"23427665","2","","5767325","2014-05-02 12:00:18","","59","","<p>Too old to reply, but may it help someone, by providing a predicate instead of a value.</p>

<p><strong>NOTE:</strong> it will update the given array, and return affected rows</p>

<h2>Usage</h2>

<pre><code>var removed = helper.removeOne(arr, row =&gt; row.id === 5 );

var removed = helper.remove(arr, row =&gt; row.name.startsWith('BMW'));
</code></pre>

<h2>Definition</h2>

<pre><code>var helper = {

    // Remove and return the first occurrence     

    removeOne: function(array, predicate) {
        for (var i = 0; i &lt; array.length; i++) {
            if (predicate(array[i])) {
                return array.splice(i, 1);
            }
        }
    },

    // Remove and return all occurrences  

    remove: function(array, predicate) {
        var removed = [];

        for (var i = 0; i &lt; array.length;) {

            if (predicate(array[i])) {
                removed.push(array.splice(i, 1));
                continue;
            }

            i++;                
        }

        return removed;
    }
};
</code></pre>
","1104402","","1104402","","2016-12-26 10:57:02","2016-12-26 10:57:02","","","","2","","",""
"23687597","2","","11757537","2014-05-15 20:03:10","","7","","<p>Another solution is to put the image in a container with the desired width and height.  Using this method you would not have to set the image as a background image of an element.</p>

<p>Then you can do this with an <code>img</code> tag and just set a max-width and max-height on the element.</p>

<p>CSS:</p>

<pre><code>.imgContainer {
    display: block;
    width: 150px; 
    height: 100px;
}

.imgContainer img {
    max-width: 100%;
    max-height: 100%;
}
</code></pre>

<p>HTML:</p>

<pre><code>&lt;div class='imgContainer'&gt;
    &lt;img src='imagesrc.jpg' /&gt;
&lt;/div&gt;
</code></pre>

<p>Now when you change the size of the container the image will automatically grow as large as it can without going outside the bounds or distorting.</p>

<p>If you want to <strong>center the image</strong> vertically and horizontally you can change the container css to:</p>

<pre><code>.imgContainer {
    display: table-cell;
    width: 150px; 
    height: 100px;
    text-align: center;
    vertical-align: middle;
}
</code></pre>

<p>Here is a JS Fiddle <a href=""http://jsfiddle.net/9kUYC/2/"" rel=""noreferrer"">http://jsfiddle.net/9kUYC/2/</a></p>
","1269900","","1269900","","2014-05-15 20:08:19","2014-05-15 20:08:19","","","","5","","",""
"23951789","2","","5767325","2014-05-30 09:57:35","","54","","<p><a href=""http://underscorejs.org/#without"" rel=""noreferrer"">Underscore.js</a> can be used to solve issues with multiple browsers. It uses in-build browser methods if present. If they are absent like in the case of older Internet&nbsp;Explorer versions it uses its own custom methods.</p>

<p>A simple example to remove elements from array (from the website):</p>

<pre><code>_.without([1, 2, 1, 0, 3, 1, 4], 0, 1); // =&gt; [2, 3, 4]
</code></pre>
","1847764","","63550","","2017-05-21 11:29:54","2017-05-21 11:29:54","","","","0","","",""
"24664114","2","","2831059","2014-07-09 21:30:09","","33","","<p>In a rails4 app it is possible to use the change method also for removing columns. The third param is the data_type and in the optional forth you can give options. It is a bit hidden in the section 'Available transformations' on <a href=""http://api.rubyonrails.org/classes/ActiveRecord/Migration.html"">the documentation</a> .</p>

<pre><code>class RemoveFieldFromTableName &lt; ActiveRecord::Migration
  def change
    remove_column :table_name, :field_name, :data_type, {}
  end
end
</code></pre>
","1383990","","","","","2014-07-09 21:30:09","","","","0","","",""
"24832913","2","","15482354","2014-07-18 20:02:45","","27","","<p><code>presence: true</code> already does that according to 
<a href=""http://guides.rubyonrails.org/active_record_validations.html#presence"">http://guides.rubyonrails.org/active_record_validations.html#presence</a>  </p>

<blockquote>
  <p>This helper validates that the specified attributes are not empty. It uses the blank? method to check if the value is either nil or a blank string, that is, a string that is either empty or consists of whitespace.  </p>
</blockquote>
","2080173","","273715","","2014-09-25 18:41:54","2014-09-25 18:41:54","","","","2","","",""
"25011664","2","","2003505","2014-07-29 09:02:48","","63","","<p><strong><em>This won't work if you have a tag with the same name as the branch on the remote:</em></strong></p>

<pre><code>$ git push origin :branch-or-tag-name
error: dst refspec branch-or-tag-name matches more than one.
error: failed to push some refs to 'git@github.com:SomeName/some-repo.git'
</code></pre>

<p>In that case you need to specify that you want to delete the branch, not the tag:</p>

<pre><code>git push origin :refs/heads/branch-or-tag-name
</code></pre>

<p>Similarly, to delete the tag instead of the branch you would use:</p>

<pre><code>git push origin :refs/tags/branch-or-tag-name
</code></pre>
","745250","","4248328","","2018-12-13 04:43:05","2018-12-13 04:43:05","","","","2","","",""
"25431418","2","","5340724","2014-08-21 16:33:19","","78","","<p>First check out to master:</p>

<pre><code>git checkout master
</code></pre>

<p>Do all changes, hotfix and commits and push your master.</p>

<p>Go back to your branch, 'aq', and merge master in it:</p>

<pre><code>git checkout aq
git merge master
</code></pre>

<p>Your branch will be up-to-date with master. A good and basic example of merge is <em><a href=""http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging"">3.2 Git Branching - Basic Branching and Merging</a></em>.</p>
","445058","","63550","","2016-07-05 16:10:10","2016-07-05 16:10:10","","","","1","","",""
"25449515","2","","25430085","2014-08-22 14:34:24","","11","","<p>The solution does not lie in Rails magic but in the way you manage the <code>favicon.ico</code> file. <a href=""http://msdn.microsoft.com/en-us/library/ie/gg491740(v=vs.85).aspx"">A single ICO file can contain several pictures</a>. This is what web browsers expect. In particular, <code>favicon.ico</code> should contain three versions of the same icon: 16x16, 32x32 and 48x48. Regarding the <code>sizes</code> attribute, it was introduced in HTML5 and is dedicated to the PNG icons. Not <code>favicon.ico</code>.</p>

<p><strong>The code</strong></p>

<p>The basic definition is enough:</p>

<pre><code>favicon_link_tag '/path/to/favicon.ico'
</code></pre>

<p>Make sure the path is consistent with <code>app/assets/images</code>, I must admit I don't know where it is mapped.</p>

<p><strong>The picture</strong></p>

<p>You can first prepare three PNG pictures (let's call them <code>16x16.png</code>, <code>32x32.png</code> and <code>48x48.png</code>) and merge them with a tool such as <code>icotool</code> (on Ubuntu: <code>sudo apt-get install icoutils</code>):</p>

<pre><code>icotool -c -o favicon.ico 16x16.png 32x32.png 48x48.png
</code></pre>

<p>If you don't want to bother with <code>icotool</code> and you don't have any other solution at hand, you can also use this <a href=""http://realfavicongenerator.net/"">favicon generator</a>. Just keep the generated <code>favicon.ico</code> and leave the rest if you are not interested. Full disclosure: I'm the author of this site.</p>
","499917","","","","","2014-08-22 14:34:24","","","","1","","",""
"25666631","2","","20925494","2014-09-04 13:21:07","","3","","<p>I recommend using <code>:after_destroy</code> callback, so if destroying some <code>Deal</code> instance fails for whatever reason you don't end up deleting all of its <code>CouponCodes</code>.</p>

<p>Here's an <code>:after_destroy</code> example that should work:</p>

<pre><code>after_destroy { |record|
  CouponCode.destroy(record.coupon_codes.pluck(:id))
}
</code></pre>

<p>Make sure to remove <code>dependent: :destroy</code> from <code>has_many :couponizations</code> in the <code>Deals</code> model, because all <code>couponizations</code> will now be destroyed by the <code>has_one :couponization, dependent: :destroy</code> in the <code>CouponCode</code> model.</p>
","1851294","","","","","2014-09-04 13:21:07","","","","0","","",""
"25859628","2","","2878248","2014-09-16 02:05:26","","21","","<p>There isn't really a formal manual, because there's no single style or standard.</p>

<p>So long as you understand <a href=""http://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS"">the rules of identifier naming</a> you can use whatever you like.</p>

<p>In practice, I find it easier to use <code>lower_case_underscore_separated_identifiers</code> because it isn't necessary to <code>""Double Quote""</code> them everywhere to preserve case, spaces, etc.</p>

<p>If you wanted to name your tables and functions <code>""@MyAṕṕ! """"betty"""" Shard$42""</code> you'd be free to do that, though it'd be pain to type everywhere.</p>

<p>The main things to understand are:</p>

<ul>
<li><p>Unless double-quoted, identifiers are case-folded to lower-case, so <code>MyTable</code>, <code>MYTABLE</code> and <code>mytable</code> are all the same thing, but <code>""MYTABLE""</code> and <code>""MyTable""</code> are different;</p></li>
<li><p>Unless double-quoted:</p>

<blockquote>
  <p>SQL identifiers and key words must begin with a letter (a-z, but also letters with diacritical marks and non-Latin letters) or an underscore (_). Subsequent characters in an identifier or key word can be letters, underscores, digits (0-9), or dollar signs ($).</p>
</blockquote></li>
<li><p>You must double-quote keywords if you wish to use them as identifiers.</p></li>
</ul>

<p>In practice I strongly recommend that you <em>do not</em> use <a href=""http://www.postgresql.org/docs/current/static/sql-keywords-appendix.html"">keywords</a> as identifiers. At least avoid reserved words. Just because you can name a table <code>""with""</code> doesn't mean you should.</p>
","398670","","398670","","2016-04-03 12:38:26","2016-04-03 12:38:26","","","","1","","",""
"25887881","2","","5767325","2014-09-17 10:14:34","","7","","<p>Use jQuery's InArray:</p>

<pre><code>A = [1, 2, 3, 4, 5, 6];
A.splice($.inArray(3, A), 1);
//It will return A=[1, 2, 4, 5, 6]`   
</code></pre>

<p><strong>Note: inArray will return -1, if the element was not found.</strong></p>
","3885237","","63550","","2015-07-11 09:48:58","2015-07-11 09:48:58","","","","2","","",""
"26237660","2","","2003505","2014-10-07 13:52:09","","355","","<p>If you want to delete a branch, first checkout to the branch other than the branch to be deleted.</p>

<pre><code>git checkout other_than_branch_to_be_deleted
</code></pre>

<p>Deleting the local branch:</p>

<pre><code>git branch -D branch_to_be_deleted
</code></pre>

<p>Deleting the remote branch:</p>

<pre><code>git push origin --delete branch_to_be_deleted
</code></pre>
","1351195","","67579","","2015-06-09 02:04:02","2015-06-09 02:04:02","","","","0","","",""
"26509484","2","","5767325","2014-10-22 14:10:01","","2","","<p>Removing the value with index and splice!</p>

<pre><code>function removeArrValue(arr,value) {
    var index = arr.indexOf(value);
    if (index &gt; -1) {
        arr.splice(index, 1);
    }
    return arr;
}
</code></pre>
","4168909","","63550","","2015-07-11 09:49:40","2015-07-11 09:49:40","","","","1","","",""
"27794789","2","","9461621","2015-01-06 08:29:31","","4","","<p>Further improving @Yash's answer with negative number support:</p>

<pre><code>function nFormatter(num) {
    isNegative = false
    if (num &lt; 0) {
        isNegative = true
    }
    num = Math.abs(num)
    if (num &gt;= 1000000000) {
        formattedNumber = (num / 1000000000).toFixed(1).replace(/\.0$/, '') + 'G';
    } else if (num &gt;= 1000000) {
        formattedNumber =  (num / 1000000).toFixed(1).replace(/\.0$/, '') + 'M';
    } else  if (num &gt;= 1000) {
        formattedNumber =  (num / 1000).toFixed(1).replace(/\.0$/, '') + 'K';
    } else {
        formattedNumber = num;
    }   
    if(isNegative) { formattedNumber = '-' + formattedNumber }
    return formattedNumber;
}

nFormatter(-120000)
""-120K""
nFormatter(120000)
""120K""
</code></pre>
","170365","","","","","2015-01-06 08:29:31","","","","1","","",""
"27827538","2","","5767325","2015-01-07 19:53:17","","3","","<p>There are many fantastic answers here, but for me, what worked most simply wasn't removing my element from the array completely but simply setting the value of it to null. This works for most cases I have, and is a good solution since I will be using the variable later and don't want it gone, just empty for now. Also, this approach is completely cross-browser compatible.</p>

<pre><code>array.key = null;
</code></pre>
","988683","","","","","2015-01-07 19:53:17","","","","0","","",""
"28386507","2","","25430085","2015-02-07 19:39:42","","6","","<p>One idea would be to use the the <a href=""http://realfavicongenerator.net/"" rel=""nofollow noreferrer"">link</a> philippe_b posted to generate the various images. Place them in app/assets/images/</p>

<p>Then, in your <strong>application.html.erb</strong> put the following code between the <code>&lt;head&gt; &lt;/head&gt;</code> tags in your application:</p>

<pre><code>&lt;% %w(57 60 72 76 114 120 144 152 180).each do |s| %&gt;
  &lt;%= favicon_link_tag ""apple-touch-icon-#{s}x#{s}.png"", rel: 'apple-touch-icon', type: 'image/png', sizes: ""#{s}x#{s}"" %&gt;
&lt;% end %&gt;

&lt;% %w(16 32).each do |s| %&gt;
  &lt;%= favicon_link_tag ""favicon-#{s}x#{s}.png"", rel: 'icon', type: 'image/png', sizes: ""#{s}x#{s}"" %&gt;
&lt;% end %&gt;
</code></pre>

<p>This will allow you to use the assets precompiled in <code>app/assets/images/</code> without having to place them in <code>app/public/</code></p>

<p>Please note that I am not dealing with the Android or Windows images here, only basic favicon and apple touch images. For more information on suggested apple touch icon sizes, <a href=""https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html#/apple_ref/doc/uid/TP40006556-CH27"" rel=""nofollow noreferrer"">check this website</a>.</p>
","1741325","","1741325","","2018-03-08 10:57:57","2018-03-08 10:57:57","","","","0","","",""
"28527604","2","","2003505","2015-02-15 15:20:32","","220","","<p>This is simple: Just run the following command:</p>

<p>To delete a Git branch both locally and remotely, first delete the local branch using command:</p>

<pre><code>git branch -d example
</code></pre>

<p>(here <code>example</code> is the branch name)</p>

<p>And after that delete remote branch using command:</p>

<pre><code>git push origin :example
</code></pre>
","1468773","","67579","","2015-06-09 02:03:14","2015-06-09 02:03:14","","","","0","","",""
"29103071","2","","11757537","2015-03-17 15:25:31","","444","","<p>You can use the css property <code>object-fit</code>. </p>

<pre><code>&lt;img src=""http://i.stack.imgur.com/2OrtT.jpg"" class=""cover"" width=""242"" height=""363"" /&gt;

.cover {
  object-fit: cover;
  width: 50px;
  height: 100px;
}
</code></pre>

<p><a href=""http://codepen.io/afonsoduarte/pen/EaOROW"" rel=""noreferrer"">See example here</a></p>

<p>There's a polyfill for IE: <a href=""https://github.com/anselmh/object-fit"" rel=""noreferrer"">https://github.com/anselmh/object-fit</a></p>
","1372250","","4390133","","2017-03-24 13:48:25","2017-03-24 13:48:25","","","","13","","",""
"29535421","2","","5767325","2015-04-09 10:00:57","","22","","<p>If you have complex objects in the array you can use filters? 
In situations where $.inArray or array.splice is not as easy to use. Especially if the objects are perhaps shallow in the array.</p>

<p>E.g. if you have an object with an Id field and you want the object removed from an array:</p>

<pre><code>this.array = this.array.filter(function(element, i) {
    return element.id !== idToRemove;
});
</code></pre>
","155689","","4161269","","2015-11-10 04:20:21","2015-11-10 04:20:21","","","","1","","",""
"29811151","2","","2373074","2015-04-23 00:01:42","","3","","<p>Using double quotes for HTML</p>

<p>i.e.</p>

<pre><code>&lt;div class=""colorFont""&gt;&lt;/div&gt;
</code></pre>

<p>Using single quotes for JavaScript</p>

<p>i.e.</p>

<pre><code>$('#container').addClass('colorFont');
$('&lt;div class=""colorFont2&gt;&lt;/div&gt;');
</code></pre>
","2305243","","","","","2015-04-23 00:01:42","","","","0","","",""
"29831148","2","","2003505","2015-04-23 18:06:33","","85","","<p>Simply say:</p>

<pre><code>git branch -d &lt;branch-name&gt;
git push origin :&lt;branch-name&gt;
</code></pre>
","3568378","","63550","","2016-06-25 12:52:01","2016-06-25 12:52:01","","","","1","","",""
"30410815","2","","2003505","2015-05-23 08:56:10","","115","","<p><strong>Delete locally:</strong></p>

<p>To delete a local branch, you can use:</p>

<pre><code>git branch -d &lt;branch_name&gt; 
</code></pre>

<p>To delete a branch forcibly, use <code>-D</code> instead of <code>-d</code>. </p>

<pre><code>git branch -D &lt;branch_name&gt;
</code></pre>

<p><strong>Delete remotely:</strong></p>

<p>There are two options:</p>

<pre><code>git push origin :branchname  

git push origin --delete branchname 
</code></pre>

<p>I would suggest you use the 2nd way as it is more intuitive.</p>
","4921103","","4248328","","2018-12-13 04:45:05","2018-12-13 04:45:05","","","","0","","",""
"30856704","2","","9461621","2015-06-15 23:40:39","","1","","<p>This post is quite old but I somehow reached to this post searching for something. SO to add my input Numeral js is the one stop solution now a days. It gives a large number of methods to help formatting the numbers</p>

<p><a href=""http://numeraljs.com/"" rel=""nofollow"">http://numeraljs.com/</a></p>
","4249059","","","","","2015-06-15 23:40:39","","","","1","","",""
"32212535","2","","5767325","2015-08-25 19:34:48","","34","","<p>You can use lodash <a href=""https://lodash.com/docs#pull"" rel=""noreferrer"">_.pull</a> (mutate array), <a href=""https://lodash.com/docs#pullAt"" rel=""noreferrer"">_.pullAt</a> (mutate array) or <a href=""https://lodash.com/docs#without"" rel=""noreferrer"">_.without</a> (does't mutate array), </p>

<pre><code>var array1 = ['a', 'b', 'c', 'd']
_.pull(array1, 'c')
console.log(array1) // ['a', 'b', 'd']

var array2 = ['e', 'f', 'g', 'h']
_.pullAt(array2, 0)
console.log(array2) // ['f', 'g', 'h']

var array3 = ['i', 'j', 'k', 'l']
var newArray = _.without(array3, 'i') // ['j', 'k', 'l']
console.log(array3) // ['i', 'j', 'k', 'l']
</code></pre>
","1738342","","1738342","","2015-08-25 21:19:16","2015-08-25 21:19:16","","","","3","","",""
"32252937","2","","16191820","2015-08-27 15:01:50","","23","","<p>If you really want to <strong>rollback all of the migrations</strong>, and not just take the database to a pristine state or to the last schema, you have to run:</p>

<pre><code>rake db:migrate VERSION=0
</code></pre>

<p>This will actually rollback all the way down every migration and ensure that every migration is reversible.</p>

<p>If you now issue</p>

<pre><code>rake db:migrate:status
</code></pre>

<p>you will see that all the migrations are still there but they are in a 'down' (not applied) state.</p>

<p>Other commands that imply a <code>rake db:reset</code> or <code>rake db:drop</code> (such as in the answers by @Orlando or @Alex Falke) won't do any rollback at all: that is, they won't ensure that every migration is reversible.</p>

<p>Moreover, <code>rake db:drop</code> cannot be run while the database is being accessed by other users, while rollbacks can be performed live (even if this is generally not recommended). And last but not least, simply dropping and recreating the database will also delete the schema migrations table: if someone runs <code>rake db:migrate:status</code> after the database has been dropped, he will be replied with ""Schema migrations table does not exist yet"" and will have no clues about which migrations can be applied (unless he knows it yet or can list them).</p>
","985792","","985792","","2015-08-27 18:41:54","2015-08-27 18:41:54","","","","0","","",""
"32778811","2","","5209814","2015-09-25 09:17:02","","2","","<p>It's an old post but i'll leave here my javascript solution just in case someone need it.</p>

<hr>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// you only need this function
function sticky( _el ){
  _el.parentElement.addEventListener(""scroll"", function(){
    _el.style.transform = ""translateY(""+this.scrollTop+""px)"";
  });
}


// how to make it work:
// get the element you want to be sticky
var el = document.querySelector(""#blbl &gt; div"");
// give the element as argument, done.
sticky(el);</code></pre>
<pre class=""snippet-code-css lang-css prettyprint-override""><code>#blbl{
  position:relative;
  height:200px;  
  overflow: auto;
  background: #eee;
}

#blbl &gt; div{
  position:absolute; 
  padding:50px; 
  top:10px; 
  left:10px; 
  background: #f00
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div id=""blbl"" &gt;
    &lt;div&gt;&lt;!-- sticky div --&gt;&lt;/div&gt; 

    &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
    &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
    &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
    &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<hr>

<p><strong>Notes</strong> </p>

<ol>
<li><p>I used <em>transform: translateY(@px)</em> because it should be lightweight to compute, <a href=""http://www.html5rocks.com/en/tutorials/speed/high-performance-animations/"" rel=""nofollow"">high-performance-animations</a></p></li>
<li><p>I only tried this function with modern browsers, it won't work for old browsers where vendors are required (and IE of course) </p></li>
</ol>
","4136520","","","","","2015-09-25 09:17:02","","","","0","","",""
"33121729","2","","20824558","2015-10-14 09:36:17","","1","","<p>Just to add to what others have said.</p>

<p>Using brackets around the return value is valid JavaScript, but mostly a bad thing to do.</p>

<p>Mostly bad because it doesn't add anything yet increases the size of the JavaScript which means that there is more to download to the browser. Yes most people have fast broadband connections, but don't lose sight of the fact that everything you put in the JavaScript file needs to be downloaded so avoid unnecessary code bloat. This probably doesn't matter if you use a tool to compact your code (minifier has already been mentioned), but not everyone does.</p>

<p>Sometimes it might aid readability. Hard pressed to think of an example in this case, but if the use of brackets makes your JavaScript clearer to you as the developer and thus easier to maintain then use them - even if it goes against what I said about code bloat.</p>
","3165219","","55900","","2017-04-25 15:20:38","2017-04-25 15:20:38","","","","0","","",""
"33275647","2","","2003505","2015-10-22 07:38:48","","79","","<p>Now you can do it with the <a href=""https://desktop.github.com/"">GitHub Desktop</a> app.</p>

<p>After launching the app</p>

<ol>
<li>Click on the project containing the branch</li>
<li>Switch to the branch you would like to delete <a href=""https://i.stack.imgur.com/c0ged.png""><img src=""https://i.stack.imgur.com/c0ged.png"" alt=""switching branch""></a></li>
<li>From the ""Branch"" menu, select, ""Unpublish..."", to have the branch deleted from the GitHub servers. <a href=""https://i.stack.imgur.com/1u8oS.png""><img src=""https://i.stack.imgur.com/1u8oS.png"" alt=""unpublish branch""></a></li>
<li>From the ""Branch"" menu, select, 'Delete ""<em>branch_name</em>""...', to have the branch deleted off of your local machine (aka the machine you are currently working on) <a href=""https://i.stack.imgur.com/TTuLO.png""><img src=""https://i.stack.imgur.com/TTuLO.png"" alt=""delete local branch""></a></li>
</ol>
","473290","","473290","","2016-12-16 03:58:50","2016-12-16 03:58:50","","","","3","","",""
"33392807","2","","2373074","2015-10-28 13:48:28","","7","","<p>Actually, the best way is the way Google recommends. Double quotes:
<a href=""https://google.github.io/styleguide/htmlcssguide.xml?showone=HTML_Quotation_Marks#HTML_Quotation_Marks"" rel=""noreferrer"">https://google.github.io/styleguide/htmlcssguide.xml?showone=HTML_Quotation_Marks#HTML_Quotation_Marks</a></p>

<p>See <a href=""https://google.github.io/styleguide/htmlcssguide.xml?showone=HTML_Validity#HTML_Validity"" rel=""noreferrer"">https://google.github.io/styleguide/htmlcssguide.xml?showone=HTML_Validity#HTML_Validity</a>
Quoted Advice from Google: ""Using valid HTML is a measurable baseline quality attribute that contributes to learning about technical requirements and constraints, and that ensures proper HTML usage.""</p>
","5498556","","","","","2015-10-28 13:48:28","","","","3","","",""
"33436213","2","","2003505","2015-10-30 12:39:44","","90","","<p><a href=""http://www.git-tower.com/learn/git/ebook/command-line/remote-repositories/deleting-branches"">Deleting Branches</a></p>

<blockquote>
  <p>Let's assume our work on branch ""contact-form"" is done and we've already integrated it into ""master"". Since we don't need it anymore, we can delete it (locally):</p>

<pre><code>$ git branch -d contact-form
</code></pre>
</blockquote>

<p>And for deleting the remote branch:</p>

<pre><code>git push origin --delete contact-form
</code></pre>
","1639385","","1639385","","2015-11-18 19:51:13","2015-11-18 19:51:13","","","","0","","",""
"33496863","2","","9461621","2015-11-03 10:32:50","","3","","<p>You can use the <a href=""https://www.npmjs.com/package/d3-format"" rel=""nofollow"">d3-format</a> package modeled after Python Advanced String Formatting <a href=""https://www.python.org/dev/peps/pep-3101/"" rel=""nofollow"">PEP3101</a> :</p>

<pre><code>var f = require('d3-format')
console.log(f.format('.2s')(2500)) // displays ""2.5k""
</code></pre>
","219265","","","","","2015-11-03 10:32:50","","","","1","","",""
"33718996","2","","5767325","2015-11-15 11:09:02","","2","","<p>The following method will remove all entries of a given value from an array without creating a new array and with only one iteration which is <em>superfast</em>. And it works in ancient <a href=""https://en.wikipedia.org/wiki/Internet_Explorer_5"" rel=""nofollow"">Internet&nbsp;Explorer 5.5</a> browser:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>function removeFromArray(arr, removeValue) {
  for (var i = 0, k = 0, len = arr.length &gt;&gt;&gt; 0; i &lt; len; i++) {
    if (k &gt; 0)
      arr[i - k] = arr[i];

    if (arr[i] === removeValue)
      k++;
  }

  for (; k--;)
    arr.pop();
}

var a = [0, 1, 0, 2, 0, 3];

document.getElementById('code').innerHTML =
  'Initial array [' + a.join(', ') + ']';
//Initial array [0, 1, 0, 2, 0, 3]

removeFromArray(a, 0);

document.getElementById('code').innerHTML +=
  '&lt;br&gt;Resulting array [' + a.join(', ') + ']';
//Resulting array [1, 2, 3]</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;code id=""code""&gt;&lt;/code&gt;</code></pre>
</div>
</div>
</p>
","2676500","","63550","","2016-06-25 13:07:14","2016-06-25 13:07:14","","","","2","","",""
"34544089","2","","2003505","2015-12-31 09:22:52","","86","","<p>Delete remote branch</p>

<p><code>git push origin :&lt;branchname&gt;</code></p>

<p>Delete local branch</p>

<p><code>git branch -D &lt;branchname&gt;</code></p>

<p>Delete local branch steps:</p>

<ol>
<li>checkout to another branch</li>
<li>delete local branch</li>
</ol>
","1116453","","1116453","","2016-02-19 18:05:46","2016-02-19 18:05:46","","","","2","","",""
"34581636","2","","2003505","2016-01-03 21:08:43","","112","","<p>To delete your branch locally and remotely </p>

<ul>
<li><p>Checkout to master branch -  <code>git checkout master</code></p></li>
<li><p>Delete your remote branch - <code>git push origin --delete &lt;branch-name&gt;</code></p></li>
<li><p>Delete your local branch - <code>git branch --delete &lt;branch-name&gt;</code></p></li>
</ul>
","5733263","","3448527","","2017-12-13 22:10:51","2017-12-13 22:10:51","","","","0","","",""
"34643199","2","","20824558","2016-01-06 21:33:01","","75","","<p>Using parentheses when returning is necessary if you want to <strong>write your return statement over several lines</strong>.</p>

<p><code>React.js</code> offers a useful example. In the return statement of the <code>render</code> property in a component you usually want to spread the JSX you return over several lines for readability reasons, e.g.:</p>

<pre><code>render: function() {
    return (
        &lt;div className=""foo""&gt;
            &lt;h1&gt;Headline&lt;/h1&gt;
            &lt;MyComponent data={this.state.data} /&gt;
        &lt;/div&gt;
    );
}
</code></pre>

<p>Without parentheses it results in an error!</p>

<hr>

<p>More generally, not using parentheses when spreading a return statement over several lines will result in an error. The following example will <strong>execute properly</strong>:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var foo = function() {
  var x = 3;
  return (
    x 
    + 
    1
  );
};
console.log(foo());</code></pre>
</div>
</div>
</p>

<p>Whereas the following (without the parentheses) will <strong>throw errors</strong>:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var foo = function() {
  var x = 3;
  return 
    x 
    + 
    1
  ;
};
console.log(foo());</code></pre>
</div>
</div>
</p>
","3210677","","6901668","","2017-08-28 02:08:56","2017-08-28 02:08:56","","","","1","","",""
"34706021","2","","5767325","2016-01-10 13:36:44","","3","","<p>Remove last occurrence or all occurrences, or first occurrence?  </p>

<pre><code>var array = [2, 5, 9, 5];

// Remove last occurrence (or all occurrences)
for (var i = array.length; i--;) {
  if (array[i] === 5) {
     array.splice(i, 1);
     break; // Remove this line to remove all occurrences
  }
}
</code></pre>

<p>or</p>

<pre><code>var array = [2, 5, 9, 5];

// Remove first occurrence
for (var i = 0; array.length; i++) {
  if (array[i] === 5) {
     array.splice(i, 1);
     break; // Do not remove this line
  }
}
</code></pre>
","834398","","63550","","2016-06-25 13:05:29","2016-06-25 13:05:29","","","","0","","",""
"35080385","2","","5767325","2016-01-29 08:53:49","","5","","<p>By my solution you can remove one or more than one item in an array thanks to pure JavaScript. There is no need for another JavaScript library.</p>

<pre><code>var myArray = [1,2,3,4,5]; // First array

var removeItem = function(array,value) {  // My clear function
    if(Array.isArray(value)) {  // For multi remove
        for(var i = array.length - 1; i &gt;= 0; i--) {
            for(var j = value.length - 1; j &gt;= 0; j--) {
                if(array[i] === value[j]) {
                    array.splice(i, 1);
                };
            }
        }
    }
    else { // For single remove
        for(var i = array.length - 1; i &gt;= 0; i--) {
            if(array[i] === value) {
                array.splice(i, 1);
            }
        }
    }
}

removeItem(myArray,[1,4]); // myArray will be [2,3,5]
</code></pre>
","4766521","","63550","","2016-06-25 13:04:50","2016-06-25 13:04:50","","","","0","","",""
"35213755","2","","2003505","2016-02-04 23:34:40","","31","","<p>An alternative option to the command line for deleting remote branches is the <strong>GitHub branches page</strong>.</p>

<p>See for example: <a href=""https://github.com/angular/angular.js/branches"" rel=""noreferrer"">https://github.com/angular/angular.js/branches</a></p>

<p>Found in the <code>Code</code> -> <code>Branches</code> page of a GitHub repository.</p>

<p>I generally prefer command line myself but this <strong>GitHub page shows you lots more information</strong> about the branches, such as <strong>last updated date and user</strong>, and <strong>number of commits ahead and behind</strong>. It is useful when dealing with a large number of branches.</p>
","958584","","63550","","2016-06-25 12:53:20","2016-06-25 12:53:20","","","","0","","",""
"35324551","2","","2003505","2016-02-10 19:47:36","","49","","<p>I got sick of googling for this answer, so I took a similar approach
to <a href=""https://stackoverflow.com/a/15775364/551436"">the answer that crizCraig posted</a> earlier.</p>

<p>Added the following to my Bash profile:</p>

<pre><code>function gitdelete(){
    git push origin --delete $1
    git branch -D $1
}
</code></pre>

<p>Then every time I'm done with a branch (merged into <code>master</code>, for example) I run the following in my terminal:</p>

<pre><code>gitdelete my-branch-name
</code></pre>

<p>...which then deletes <code>my-branch-name</code> from <code>origin</code> as as well as locally.</p>
","551436","","-1","","2017-05-23 12:34:58","2016-06-25 12:55:37","","","","2","","",""
"36540678","2","","5767325","2016-04-11 05:47:16","","6","","<p><strong>Vanilla JavaScript (ES5.1) – <em>in place</em> edition</strong></p>

<p><em>Browser support: <a href=""http://en.wikipedia.org/wiki/Internet_Explorer_9"" rel=""nofollow noreferrer"">Internet&nbsp;Explorer&nbsp;9</a> or later (<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf#Browser_compatibility"" rel=""nofollow noreferrer"">detailed browser support</a>)</em></p>

<pre><code>/**
 * Removes all occurences of the item from the array.
 *
 * Modifies the array “in place”, i.e. the array passed as an argument
 * is modified as opposed to creating a new array. Also returns the modified
 * array for your convenience.
 */
function removeInPlace(array, item) {
    var foundIndex, fromIndex;

    // Look for the item (the item can have multiple indices)
    fromIndex = array.length - 1;
    foundIndex = array.lastIndexOf(item, fromIndex);

    while (foundIndex !== -1) {
        // Remove the item (in place)
        array.splice(foundIndex, 1);

        // Bookkeeping
        fromIndex = foundIndex - 1;
        foundIndex = array.lastIndexOf(item, fromIndex);
    }

    // Return the modified array
    return array;
}
</code></pre>

<p><strong>Vanilla JavaScript (ES5.1) – <em>immutable</em> edition</strong></p>

<p><em>Browser support: Same as vanilla JavaScript in place edition</em></p>

<pre><code>/**
 * Removes all occurences of the item from the array.
 *
 * Returns a new array with all the items of the original array except
 * the specified item.
 */
function remove(array, item) {
    var arrayCopy;

    arrayCopy = array.slice();

    return removeInPlace(arrayCopy, item);
}
</code></pre>

<p><strong>Vanilla ES6 – <em>immutable</em> edition</strong></p>

<p><em>Browser support: Chrome 46, Edge 12, Firefox 16, Opera 37, Safari 8 (<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator#Browser_compatibility"" rel=""nofollow noreferrer"">detailed browser support</a>)</em></p>

<pre><code>/**
 * Removes all occurences of the item from the array.
 *
 * Returns a new array with all the items of the original array except
 * the specified item.
 */
function remove(array, item) {
    // Copy the array
    array = [...array];

    // Look for the item (the item can have multiple indices)
    let fromIndex = array.length - 1;
    let foundIndex = array.lastIndexOf(item, fromIndex);

    while (foundIndex !== -1) {
        // Remove the item by generating a new array without it
        array = [
            ...array.slice(0, foundIndex),
            ...array.slice(foundIndex + 1),
        ];

        // Bookkeeping
        fromIndex = foundIndex - 1;
        foundIndex = array.lastIndexOf(item, fromIndex)
    }

    // Return the new array
    return array;
}
</code></pre>
","1071200","","1071200","","2017-12-28 21:07:53","2017-12-28 21:07:53","","","","0","","",""
"36980415","2","","2003505","2016-05-02 10:37:11","","30","","<p>I also had similar issues, and this seems to work:
This deletes local branch.
<code>git branch -d the_local_branch</code></p>

<p>This removes remote branch
<code>git push origin :the_remote_branch</code></p>

<p><a href=""http://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote"" rel=""noreferrer"">Source: Makandra Cards</a></p>
","3509197","","","","","2016-05-02 10:37:11","","","","0","","",""
"37356297","2","","2003505","2016-05-20 21:42:57","","45","","<p>Before executing</p>

<pre><code>git branch --delete &lt;branch&gt;
</code></pre>

<p>make sure you determine first what the EXACT name of the remote branch is by executing:</p>

<pre><code>git ls-remote
</code></pre>

<p>This will tell you what to enter EXACTLY for <code>&lt;branch&gt;</code> value. (<code>branch</code> is case sensitive!)</p>
","3256123","","63550","","2016-06-25 12:56:09","2016-06-25 12:56:09","","","","0","","",""
"37358787","2","","5767325","2016-05-21 04:08:44","","0","","<pre><code>Array.prototype.remove = function(x) {
    var y=this.slice(x+1);
    var z=[];
    for(i=0;i&lt;=x-1;i++) {
        z[z.length] = this[i];
    }

    for(i=0;i&lt;y.length;i++){
        z[z.length]=y[i];
    }

    return z;
}
</code></pre>
","","user4109793","3626701","","2016-05-22 20:55:49","2016-05-22 20:55:49","","","","0","","",""
"38071922","2","","5767325","2016-06-28 09:13:02","","4","","<p>Use <a href=""http://api.jquery.com/jquery.grep/"" rel=""nofollow noreferrer"">jQuery.grep()</a>:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var y = [1, 2, 3, 9, 4]
var removeItem = 9;

y = jQuery.grep(y, function(value) {
  return value != removeItem;
});
console.log(y)</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js""&gt;&lt;/script&gt;</code></pre>
</div>
</div>
</p>
","6011619","","63550","","2017-09-23 23:47:44","2017-09-23 23:47:44","","","","1","","",""
"38723094","2","","38713405","2016-08-02 14:22:10","","1467","","<p>I assume you're using the file browser located within the sidebar in Visual Studio Code to open files. If you're not, this answer will likely not be of any use to you.</p>

<p>When you [single-]click a file in the sidebar, Visual Studio Code opens it in what's called ""Preview Mode"", which allows you to quickly <strong>view</strong> files.</p>

<p>Preview Mode tabs are not kept open. As soon as you go to open another file from the sidebar, the existing Preview Mode tab (if one exists) is used. You can determine if a tab is in Preview Mode, by looking at its title in the tab bar. If the title is <em>italic</em>, the tab is in preview mode.</p>

<p>To open a file for editing (i.e. don't open in Preview Mode), double-click on the file in the sidebar.</p>

<p>If you want to disable Preview Mode all together, you can do so by setting <code>""workbench.editor.enablePreview"": false</code> in your settings file. Also make note of the <code>""workbench.editor.enablePreviewFromQuickOpen""</code> option, in case you're looking to disable this only from quick open menu.</p>

<p>Before you can disable Preview Mode, you'll need to open your <a href=""https://code.visualstudio.com/docs/customization/userandworkspace#_settings-file-locations"" rel=""noreferrer"">Settings File</a>.</p>

<p><strong>Pro Tip</strong>: You can use the <a href=""https://code.visualstudio.com/docs/editor/codebasics#_command-palette"" rel=""noreferrer"">Command Palette</a> to open your settings file, just enter ""<code>Preferences: Open User Settings</code>""!</p>

<p>Once you've opened your settings file (<em>your</em> settings file should be located on the right), add the <code>""workbench.editor.enablePreview""</code> property, and set its value to <code>false</code>.</p>

<p>You can learn more about Visual Studio Code's ""Preview Mode"", <a href=""https://code.visualstudio.com/docs/editor/tabs#_preview-mode"" rel=""noreferrer"">here</a>.</p>
","6052290","","712558","","2019-02-08 17:39:54","2019-02-08 17:39:54","","","","4","","",""
"38730739","2","","5209814","2016-08-02 21:26:36","","11","","<p>I know this is super old but after not finding the (pure CSS) answer I was looking for I came up with this solution (partially abstracted from <a href=""http://www.medium.com"" rel=""noreferrer"">medium.com</a>) and thought it might help others looking to do the same thing. </p>

<p>If you combine @DuckMaestro's answers you can position an element fixed relative to a parent (actually grandparent). Use <code>position: absolute;</code> to position an element inside a parent with <code>position: relative;</code> and then <code>position: fixed;</code> on an element inside the absolute positioned element like so:</p>

<h2>HTML</h2>

<pre class=""lang-html prettyprint-override""><code>&lt;div class=""relative""&gt;
  &lt;div class=""absolute""&gt;
    &lt;a class=""fixed-feedback""&gt;This element will be fixed&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<h2>CSS</h2>

<pre class=""lang-css prettyprint-override""><code>.relative {
  margin: 0 auto;
  position: relative;
  width: 300px;
}

.absolute {
  position: absolute;
  right: 0;
  top: 0;
  width: 50px;
}

.fixed-feedback {
  position: fixed;
  top: 120px;
  width: 50px;
}
</code></pre>

<p><a href=""http://codepen.io/whancock_/pen/AXPVdO"" rel=""noreferrer"">EXAMPLE</a></p>

<p>Like @JonAdams said, the definition of <code>position: fixed</code> requires the element to be positioned relative to the viewport but you can get around the horizontal aspect of that using this solution. </p>

<p>Note: This is different than just setting a <code>right</code> or <code>left</code> value on the fixed element because that would cause it to move horizontally when a window is resized. </p>
","4422060","","","","","2016-08-02 21:26:36","","","","3","","",""
"38776671","2","","2003505","2016-08-04 20:15:22","","27","","<p>There are good answer, but, in case that you have a ton of branches, deleting them one by one locally and remotly, would be a tedious tasks. You can use this script to automate this tasks. </p>

<pre><code>branch_not_delete=( ""master"" ""develop"" ""our-branch-1"" ""our-branch-2"")


for branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master`; do

    # delete prefix remotes/origin/ from branch name
    branch_name=""$(awk '{gsub(""remotes/origin/"", """");print}' &lt;&lt;&lt; $branch)""

    if ! [[ "" ${branch_not_delete[*]} "" == *"" $branch_name ""* ]]; then
        # delete branch remotly and locally
        git push origin :$branch_name
    fi
done 
</code></pre>

<ul>
<li>List the branches that you don't want to delete</li>
<li>Iterate over remotes branch and if they aren't in our ""preserve list"", we deleted. </li>
</ul>

<p>Source: <a href=""http://levipy.com/removing-git-branches-at-once/"">removing-git-branches-at-once</a></p>
","1539655","","","","","2016-08-04 20:15:22","","","","0","","",""
"38796408","2","","5209814","2016-08-05 19:19:05","","34","","<h1>2016 Update</h1>

<p>It's now possible in modern browsers to position an element fixed relative to its container. An element that has a transform property acts as the viewport for any of its fixed position child elements.   </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.context {
  width: 300px;
  height: 250px;
  margin: 100px;
  transform: translateZ(0);
}
.viewport {
  width: 100%;
  height: 100%;
  border: 1px solid black;
  overflow: scroll;
}
.centered {
  position: fixed;
  left: 50%;
  bottom: 15px;
  transform: translateX(-50%);
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""context""&gt;
  &lt;div class=""viewport""&gt;
    &lt;div class=""canvas""&gt;

      &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
        &lt;/tr&gt;

        &lt;tr&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
        &lt;/tr&gt;

        &lt;tr&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
          &lt;td&gt;stuff&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;

      &lt;button class=""centered""&gt;OK&lt;/button&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>
","437","","437","","2017-03-02 14:35:46","2017-03-02 14:35:46","","","","7","","",""
"38923942","2","","5767325","2016-08-12 17:59:37","","5","","<p>I made a fairly efficient extension to the base JavaScript array:</p>

<pre><code>Array.prototype.drop = function(k) {
  var valueIndex = this.indexOf(k);
  while(valueIndex &gt; -1) {
    this.removeAt(valueIndex);
    valueIndex = this.indexOf(k);
  }
};
</code></pre>
","1641480","","63550","","2017-09-23 23:47:22","2017-09-23 23:47:22","","","","2","","",""
"39119073","2","","2831059","2016-08-24 09:11:40","","13","","<p>in rails 5 you can use this command in the terminal:</p>

<pre><code>rails generate migration remove_COLUMNNAME_from_TABLENAME COLUMNNAME:DATATYPE
</code></pre>

<p>for example to remove the column access_level(string) from table users:</p>

<pre><code>rails generate migration remove_access_level_from_users access_level:string
</code></pre>

<p>and then run:</p>

<pre><code>rake db:migrate
</code></pre>
","5620542","","","","","2016-08-24 09:11:40","","","","0","","",""
"39155533","2","","11757537","2016-08-25 22:13:09","","24","","<p><strong>CSS solution no JS and no background image:</strong></p>

<p><strong>Method 1 ""margin auto"" ( IE8+ - NOT FF!):</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>div{
  width:150px; 
  height:100px; 
  position:relative;
  overflow:hidden;
}
div img{
  position:absolute; 
  top:0; 
  bottom:0; 
  margin: auto;
  width:100%;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;p&gt;Original:&lt;/p&gt;
&lt;img src=""http://i.stack.imgur.com/2OrtT.jpg"" alt=""image""/&gt;

&lt;p&gt;Wrapped:&lt;/p&gt;
&lt;div&gt;
  &lt;img src=""http://i.stack.imgur.com/2OrtT.jpg"" alt=""image""/&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""http://jsfiddle.net/5xjr05dt/"" rel=""noreferrer"">http://jsfiddle.net/5xjr05dt/</a></p>

<p><strong>Method 2 ""transform"" ( IE9+ ):</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>div{
  width:150px; 
  height:100px; 
  position:relative;
  overflow:hidden;
}

div img{
  position:absolute; 
  width:100%;
  top: 50%;
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;p&gt;Original:&lt;/p&gt;
&lt;img src=""http://i.stack.imgur.com/2OrtT.jpg"" alt=""image""/&gt;

&lt;p&gt;Wrapped:&lt;/p&gt;
&lt;div&gt;
  &lt;img src=""http://i.stack.imgur.com/2OrtT.jpg"" alt=""image""/&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""http://jsfiddle.net/5xjr05dt/1/"" rel=""noreferrer"">http://jsfiddle.net/5xjr05dt/1/</a></p>

<p>Method 2 can be used to center an image in a fixed width / height container. Both can overflow - and if the image is smaller than the container it will still be centered.</p>

<p><a href=""http://jsfiddle.net/5xjr05dt/3/"" rel=""noreferrer"">http://jsfiddle.net/5xjr05dt/3/</a></p>

<p><strong>Method 3 ""double wrapper"" ( IE8+ - NOT FF! ):</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.outer{
  width:150px; 
  height:100px; 
  margin: 200px auto; /* just for example */
  border: 1px solid red; /* just for example */
  /* overflow: hidden;	*/ /* TURN THIS ON */
  position: relative;
}
.inner { 
    border: 1px solid green; /* just for example */
    position: absolute;
    top: 0;
    bottom: 0;
    margin: auto;
    display: table;
    left: 50%;
}
.inner img {
    display: block;
    border: 1px solid blue; /* just for example */
    position: relative;
    right: 50%;
    opacity: .5; /* just for example */
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""outer""&gt;
  &lt;div class=""inner""&gt;
     &lt;img src=""http://i.stack.imgur.com/2OrtT.jpg"" alt=""image""/&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""http://jsfiddle.net/5xjr05dt/5/"" rel=""noreferrer"">http://jsfiddle.net/5xjr05dt/5/</a></p>

<p><strong>Method 4 ""double wrapper AND double image"" ( IE8+ ):</strong></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>.outer{
  width:150px; 
  height:100px; 
  margin: 200px auto; /* just for example */
  border: 1px solid red; /* just for example */
  /* overflow: hidden;	*/ /* TURN THIS ON */
  position: relative;
}
.inner { 
    border: 1px solid green; /* just for example */
    position: absolute;
    top: 50%;
    bottom: 0;
    display: table;
    left: 50%;
}
.inner .real_image {
    display: block;
    border: 1px solid blue; /* just for example */
    position: absolute;
    bottom: 50%;
    right: 50%;
    opacity: .5; /* just for example */
}

.inner .placeholder_image{
  opacity: 0.1; /* should be 0 */
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""outer""&gt;
  &lt;div class=""inner""&gt;
    &lt;img class=""real_image"" src=""http://i.stack.imgur.com/2OrtT.jpg"" alt=""image""/&gt;
    &lt;img class=""placeholder_image""  src=""http://i.stack.imgur.com/2OrtT.jpg"" alt=""image""/&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""http://jsfiddle.net/5xjr05dt/26/"" rel=""noreferrer"">http://jsfiddle.net/5xjr05dt/26/</a></p>

<ul>
<li>Method 1 has slightly better support - you have to set the width OR height of image! </li>
<li>With the prefixes method 2 also has decent support ( from ie9 up ) - Method 2 has no support on Opera mini!</li>
<li>Method 3 uses two wrappers - can overflow width AND height.</li>
<li>Method 4 uses a double image ( one as placeholder ) this gives some extra bandwidth overhead, but even better crossbrowser support.</li>
</ul>

<p><strong>Method 1 and 3 don't seem to work with Firefox</strong></p>
","4150069","","4390133","","2017-10-02 07:02:56","2017-10-02 07:02:56","","","","6","","",""
"39785339","2","","2831059","2016-09-30 06:49:08","","10","","<p><strong>Remove Columns For RAILS 5 App</strong></p>

<pre><code>rails g migration Remove&lt;Anything&gt;From&lt;TableName&gt; [columnName:type]
</code></pre>

<p>Command above generate a migration file inside <code>db/migrate</code> directory. Snippet blow is one of remove column from table example generated by Rails generator,</p>

<pre><code>class RemoveAgeFromUsers &lt; ActiveRecord::Migration
  def up
    remove_column :users, :age
  end
  def down
    add_column :users, :age, :integer
  end
end
</code></pre>

<p>I also made a quick reference guide for Rails which can be found at <a href=""http://blog.li-xinyang.com/2016/09/06/d-0000/"" rel=""noreferrer"">here</a>. </p>
","2226315","","2226315","","2017-02-17 08:36:59","2017-02-17 08:36:59","","","","0","","",""
"39847263","2","","5767325","2016-10-04 08:07:50","","38","","<p>You can use ES6. </p>

<pre><code>var array=['1','2','3','4','5','6']
var index = array.filter((value)=&gt;value!='3');
</code></pre>

<p>Output : </p>

<pre><code>[""1"", ""2"", ""4"", ""5"", ""6""]
</code></pre>
","3742975","","4753489","","2016-11-19 08:59:00","2016-11-19 08:59:00","","","","2","","",""
"39924727","2","","5767325","2016-10-07 19:42:51","","25","","<h1>ES6 &amp; without mutation:  (October 2016)</h1>

<pre><code>const removeByIndex = (list, index) =&gt;
  [
    ...list.slice(0, index),
    ...list.slice(index + 1)
  ];
</code></pre>

<p>Then : </p>

<pre><code>removeByIndex([33,22,11,44],1) //=&gt; [33,11,44]
</code></pre>
","747579","","","","","2016-10-07 19:42:51","","","","1","","",""
"40447503","2","","3047056","2016-11-06 08:49:09","","9","","<p>On a side note. If you are using <strong>@media</strong> queries (such as <code>@media screen (max-width:500px</code>)) pay particular attention to applying @media query <strong>AFTER</strong> you are done with normal styles. Because @media query will be crossed out (even though it is more specific) if followed by css that manipulates the same elements. Example:</p>

<pre><code>@media (max-width:750px){
#buy-box {width: 300px;}
}

#buy-box{
width:500px;
}

** width will be 500px and 300px will be crossed out in Developer Tools. **

#buy-box{
width:500px;
}

@media (max-width:750px){
#buy-box {width: 300px;}
}

** width will be 300px and 500px will be crossed out **
</code></pre>
","5139911","","","","","2016-11-06 08:49:09","","","","2","","",""
"40459794","2","","5209814","2016-11-07 07:23:23","","1","","<p>This works good! Reference to the original detailed answer: <a href=""https://stackoverflow.com/a/11833892/5385623"">https://stackoverflow.com/a/11833892/5385623</a></p>

<p>css:</p>

<pre><code>.level1 {
    position: relative;
}


.level2 {
    position: absolute;
}


.level3 {
    position: fixed;
    /* Do not set top / left! */
}
</code></pre>

<p>html:</p>

<pre><code>&lt;div class='level1'&gt;
    &lt;div class='level2'&gt;
        &lt;div class='level3'&gt;
            Content
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>
","5385623","","5385623","","2018-03-13 11:09:52","2018-03-13 11:09:52","","","","0","","",""
"40724354","2","","9461621","2016-11-21 16:02:04","","44","","<p>Here's a simple solution that avoids all the <code>if</code> statements (with the power of <code>Math</code>).</p>

<pre><code>var SI_SYMBOL = ["""", ""k"", ""M"", ""G"", ""T"", ""P"", ""E""];

function abbreviateNumber(number){

    // what tier? (determines SI symbol)
    var tier = Math.log10(number) / 3 | 0;

    // if zero, we don't need a suffix
    if(tier == 0) return number;

    // get suffix and determine scale
    var suffix = SI_SYMBOL[tier];
    var scale = Math.pow(10, tier * 3);

    // scale the number
    var scaled = number / scale;

    // format number and add suffix
    return scaled.toFixed(1) + suffix;
}
</code></pre>

<h3>Bonus Meme</h3>

<p><a href=""https://en.wikipedia.org/wiki/International_System_of_Units"" rel=""noreferrer"">What does <code>SI</code> stand for?</a></p>
","74291","","74291","","2018-06-29 18:45:55","2018-06-29 18:45:55","","","","5","","",""
"40875598","2","","5767325","2016-11-29 20:54:38","","4","","<p>While most of the answers above answer the question, it is not clear enough why the <code>slice()</code> method has not been used. Yes, <code>filter()</code> meets the immutability criteria, but how about doing the following shorter equivalent:</p>

<p><code>const myArray = [1,2,3,4];</code></p>

<p>And now lets say that we should remove the second element from the array, we can simply do:
<code>const newArray = myArray.slice(0,1).concat(myArray.slice(2,4));</code>
<code>// [1,3,4]</code></p>

<p>This way of deleting an element from an array is strongly encouraged today in the community due to its simple and immutable nature. In general, methods which cause mutation should be avoided. For example, you are encouraged to replace <code>push()</code> with <code>concat()</code> and <code>splice()</code> with <code>slice()</code> </p>
","2729639","","","","","2016-11-29 20:54:38","","","","0","","",""
"40943247","2","","9529300","2016-12-03 01:14:18","","17","","<p>If you go into the source code of an SVG file you can change the color fill by modifying the fill property.</p>

<pre><code>&lt;svg fill=""#3F6078"" height=""24"" viewBox=""0 0 24 24"" width=""24"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink""&gt;
&lt;/svg&gt; 
</code></pre>

<p>Use your favorite text editor, open the SVG file and play around with it.</p>
","1333988","","","","","2016-12-03 01:14:18","","","","1","","",""
"41460658","2","","38713405","2017-01-04 09:45:02","","112","","<p>If you don't want to disable <em>preview mode</em> you can explicitly tell <em>vscode</em> to keep a specific tab open. As mentioned above a tab heading with italic text is in <em>preview mode</em>.</p>

<p>To get a tab out of <em>preview mode</em> you can either right click on the tab and choose <code>keep open</code> or use the shortcut <kbd>cmd</kbd> + <kbd>k</kbd> <code>enter</code> that is mapped to the command <code>workbench.action.keepEditor</code></p>
","3534549","","9317830","","2018-02-28 11:38:34","2018-02-28 11:38:34","","","","5","","",""
"41904543","2","","5340724","2017-01-27 23:12:57","","1","","<p>You have a couple options. <code>git rebase master aq</code>onto the branch which will keep the commit names, but DO NOT REBASE if this is a remote branch. You can <code>git merge master aq</code> if you don't care about keeping the commit names. If you want to keep the commit names and it is a remote branch <code>git cherry-pick &lt;commit hash&gt;</code> the commits onto your branch.</p>
","7481142","","","","","2017-01-27 23:12:57","","","","0","","",""
"42193447","2","","2003505","2017-02-12 21:25:12","","23","","<p>Using <strong>GitBash</strong> you can execute the following:</p>

<pre><code>git branch --delete &lt;branch&gt;
</code></pre>

<h2>OR</h2>

<p>From the GitHub desktop app, when you have the branch checked out, you can delete the <strong>Local</strong> branch via the <em>Branch</em> menu strip:</p>

<p><a href=""https://i.stack.imgur.com/b6dQg.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/b6dQg.png"" alt=""enter image description here""></a></p>

<p>If you <strong>ARE NOT</strong> using the GitHub desktop app, and are using an IDE like Visual Studio for your local source control, all you have to do is a couple quick steps: </p>

<ol>
<li>Check out a branch other than the one you wish to delete.</li>
<li>Right-click the branch you wish to delete.</li>
<li>Select the <strong>Delete</strong> option from the context menu.</li>
</ol>

<p>Then, once logged in to your GitHub account online, go to the repository and click the <strong><em>All Branches</em></strong> tab.  From there, just click the little trash can icon on the right on the name of the brach you wish to delete.  </p>

<p><a href=""https://i.stack.imgur.com/hbXpP.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/hbXpP.png"" alt=""enter image description here""></a></p>

<p>*Keep in mind - if the branch isn't published, there's no need to try to delete it from your online repository.</p>
","4699016","","4699016","","2017-02-14 23:18:15","2017-02-14 23:18:15","","","","2","","",""
"42398224","2","","2003505","2017-02-22 17:20:38","","39","","<p>I added the following aliases to my <code>.gitconfig</code> file.  This allows me to delete branches with or without specifying the branch name.  Branch name is defaulted to the current branch if no argument is passed in.</p>

<pre><code>[alias]
    branch-name = rev-parse --abbrev-ref HEAD     

    rm-remote-branch = !""f() { branch=${1-$(git branch-name)}; git push origin :$branch; }; f""
    rm-local-branch = !""f() { branch=${1-$(git branch-name)}; git checkout master; git branch -d $branch; }; f""
    rm-branch-fully = !""f() { branch=${1-$(git branch-name)}; git rm-local-branch $branch; git rm-remote-branch $branch; }; f""
</code></pre>
","39803","","39803","","2017-05-03 21:02:01","2017-05-03 21:02:01","","","","2","","",""
"42632600","2","","2831059","2017-03-06 18:08:07","","0","","<p>Through<br>
<code>remove_column :table_name, :column_name</code><br>
in a migration file</p>

<p>You can remove a column directly in a rails console by typing:<br>
<code>ActiveRecord::Base.remove_column :table_name, :column_name</code></p>
","2912314","","","","","2017-03-06 18:08:07","","","","0","","",""
"42687800","2","","9461621","2017-03-09 05:57:15","","1","","<p>Adding on the top answer, this will give 1k for 1000 instead of 1.0k</p>

<pre><code>function kFormatter(num) {
    return num &gt; 999 ? num % 1000 === 0 ? (num/1000).toFixed(0) + 'k' : (num/1000).toFixed(1) + 'k' : num
}
</code></pre>
","1763358","","","","","2017-03-09 05:57:15","","","","0","","",""
"42902202","2","","5767325","2017-03-20 11:16:57","","3","","<p>I made a function </p>

<pre><code>function pop(valuetoremove, myarray) {
var indexofmyvalue = myarray.indexOf(valuetoremove);
myarray.splice(indexofmyvalue, 1);
}
</code></pre>

<p>And used like this.</p>

<pre><code>pop(valuetoremove,myarray);
</code></pre>

<p>Cheers!</p>
","4332316","","","","","2017-03-20 11:16:57","","","","1","","",""
"42907462","2","","4834809","2017-03-20 15:22:19","","0","","<p>You could rollback the last migration  by</p>

<pre><code>rake db:rollback STEP=1
</code></pre>

<p>or rollback this <strong>specific</strong> migration by</p>

<pre><code>rake db:migrate:down VERSION=&lt;YYYYMMDDHHMMSS&gt;
</code></pre>

<p>and edit the file, then run <code>rake db:mirgate</code> again.</p>
","5615038","","","","","2017-03-20 15:22:19","","","","0","","",""
"43001159","2","","11757537","2017-03-24 13:47:01","","36","","<p>Actually, this is just a derivation from the most <a href=""https://stackoverflow.com/a/29103071/4390133"">upvoted answer of this question </a> (<strong>Not</strong> the accepted one).</p>

<p>There are three differences: <br/></p>

<ol>
<li><p>There is NO need to provide the <code>height</code> and <code>width</code> attributes on the <code>image</code> element because they will be overridden by the style. <br/>so it is enough to write something like this.</p>

<pre><code>&lt;img class=""cover"" src=""url to img ...""  /&gt;
</code></pre></li>
<li><p>Providing <code>width:100%</code> on the style. <br/> This is helpful if you are using <strong>bootstrap</strong> and want the image to stretch all the available width.<br /></p></li>
<li><p>Specifying the <code>height</code> property is optional, You can remove it or keep to fit your need</p>

<pre><code>.cover {
   object-fit: cover;
   width: 100%;
   /*height: 300px;  optional, you can remove it, but in my case it was good */
}
</code></pre></li>
</ol>
","4390133","","4390133","","2019-02-01 13:23:52","2019-02-01 13:23:52","","","","4","","",""
"43122403","2","","35181340","2017-03-30 15:40:09","","38","","<p>Another way to turn off CSRF that won't render a null session is to add:</p>

<p><code>skip_before_action :verify_authenticity_token</code> in your Rails Controller. This will ensure you still have access to session info. </p>

<p>Again, make sure you only do this in API controllers or in other places where CSRF protection doesn't quite apply. </p>
","1380429","","","","","2017-03-30 15:40:09","","","","1","","",""
"43201185","2","","4834809","2017-04-04 07:44:09","","0","","<p>You can also do this ..
  rails g migration add_column_to_users email:string</p>

<p>then rake db:migrate
  also add :email attribute in your user controller ;</p>

<p>for more detail check out <a href=""http://guides.rubyonrails.org/active_record_migrations.html"" rel=""nofollow noreferrer"">http://guides.rubyonrails.org/active_record_migrations.html</a></p>
","6394247","","","","","2017-04-04 07:44:09","","","","0","","",""
"43250982","2","","2831059","2017-04-06 09:23:44","","5","","<p>For removing column from table in just easy 3 steps as follows:</p>

<ol>
<li>write this command </li>
</ol>

<p><code>rails g migration remove_column_from_table_name</code></p>

<p>after running this command in terminal one file created by this name and time stamp (remove_column from_table_name).</p>

<p>Then go to this file.</p>

<ol start=""2"">
<li><p>inside file you have to write</p>

<p><code>remove_column :table_name, :column_name</code></p></li>
<li><p>Finally go to the console and then do</p>

<p><code>rake db:migrate</code></p></li>
</ol>
","7014170","","2032444","","2017-04-06 10:48:09","2017-04-06 10:48:09","","","","0","","",""
"43311380","2","","5767325","2017-04-09 20:09:01","","4","","<h2>Remove one value, using loose comparison, without mutating original array, ES6</h2>

<pre><code>/**
 * Removes one instance of `value` from `array`, without mutating the original array. Uses loose comparison.
 * 
 * @param {Array} array Array to remove value from
 * @param {*} value Value to remove
 * @returns {Array} Array with `value` removed
 */
export function arrayRemove(array, value) {
    for(let i=0; i&lt;array.length; ++i) {
        if(array[i] == value) {
            let copy = [...array];
            copy.splice(i, 1);
            return copy;
        }
    }
    return array;
}
</code></pre>
","65387","","","","","2017-04-09 20:09:01","","","","0","","",""
"43795121","2","","5767325","2017-05-05 01:32:49","","6","","<p>Remove element at index i, without mutating the original array:</p>

<pre><code>/**
* removeElement
* @param {Array} array
* @param {Number} index
*/
function removeElement(array, index) {
   return Array.from(array).splice(index, 1);
}

// Another way is
function removeElement(array, index) {
   return array.slice(0).splice(index, 1);
}
</code></pre>
","505002","","63550","","2017-09-23 23:46:50","2017-09-23 23:46:50","","","","0","","",""
"43854346","2","","5767325","2017-05-08 17:58:25","","9","","<p><strong>2017-05-08</strong></p>

<p>Most of the given answers work for strict comparison, meaning that both objects reference the exact same object in memory (or are primitive types), but often you want to remove a non-primitive object from an array that has a certain value. For instance, if you make a call to a server and want to check a retrieved object against a local object.</p>

<pre><code>const a = {'field': 2} // Non-primitive object
const b = {'field': 2} // Non-primitive object with same value
const c = a            // Non-primitive object that reference the same object as ""a""

assert(a !== b) // Don't reference the same item, but have same value
assert(a === c) // Do reference the same item, and have same value (naturally)

//Note: there are many alternative implementations for valuesAreEqual
function valuesAreEqual (x, y) {
   return  JSON.stringify(x) === JSON.stringify(y)
}


//filter will delete false values
//Thus, we want to return ""false"" if the item
// we want to delete is equal to the item in the array
function removeFromArray(arr, toDelete){
    return arr.filter(target =&gt; {return !valuesAreEqual(toDelete, target)})
}

const exampleArray = [a, b, b, c, a, {'field': 2}, {'field': 90}];
const resultArray = removeFromArray(exampleArray, a);

//resultArray = [{'field':90}]
</code></pre>

<p>There are alternative/faster implementations for valuesAreEqual, but this does the job. You can also use a custom comparator if you have a specific field to check (for example, some retrieved UUID vs a local UUID).</p>

<p>Also note that this is a functional operation, meaning that it does not mutate the original array.</p>
","5666034","","5666034","","2017-09-07 02:30:30","2017-09-07 02:30:30","","","","2","","",""
"43888738","2","","5767325","2017-05-10 09:39:00","","32","","<p><strong>OK,</strong> for example you are having the array below:</p>

<pre><code>var num = [1, 2, 3, 4, 5];
</code></pre>

<p>And we want to delete number 4, you can simply do the below code:</p>

<pre><code>num.splice(num.indexOf(4), 1); //num will be [1, 2, 3, 5];
</code></pre>

<p>If you reusing this function, you write a reusable function which will be attached to Native array function like below:</p>

<pre><code>Array.prototype.remove = Array.prototype.remove || function(x) {
  const i = this.indexOf(x);
  if(i===-1) return;
  this.splice(i, 1); //num.remove(5) === [1, 2, 3];
}
</code></pre>

<p>But how about if you are having the below array instead with few [5]s in the Array?</p>

<pre><code>var num = [5, 6, 5, 4, 5, 1, 5];
</code></pre>

<p>We need a loop to check them all, but easier and more efficient way is using built-in JavaScript functions, so we write a function which use filter like below instead:</p>

<pre><code>const _removeValue = (arr, x) =&gt; arr.filter(n =&gt; n!==x);
//_removeValue([1, 2, 3, 4, 5, 5, 6, 5], 5) //return [1, 2, 3, 4, 6]
</code></pre>

<p>Also there are third parties libraries which do help you to do this, like Lodash or Underscore, for more info look at lodash _.pull, _.pullAt or _.without.</p>
","5423108","","5423108","","2018-03-26 00:23:30","2018-03-26 00:23:30","","","","4","","",""
"43928167","2","","5767325","2017-05-12 02:00:54","","13","","<p><strong>Remove by Index</strong></p>

<p>Function that return a copy of array without the element at index.</p>

<pre><code>/**
* removeByIndex
* @param {Array} array
* @param {Number} index
*/
function removeByIndex(array, index){
    return array.filter(function(elem, _index){
        return index != _index;
    });
}
l = [1,3,4,5,6,7];
console.log(removeByIndex(l, 1));

$&gt; [ 1, 4, 5, 6, 7 ]
</code></pre>

<p><strong>Remove by Value</strong></p>

<p>Function that return a copy of array without the Value.</p>

<pre><code>/**
* removeByValue
* @param {Array} array
* @param {Number} value
*/
function removeByValue(array, value){
    return array.filter(function(elem, _index){
        return value != elem;
    });
}
l = [1,3,4,5,6,7];
console.log(removeByValue(l, 5));

$&gt; [ 1, 3, 4, 6, 7]
</code></pre>
","1162663","","1162663","","2017-07-25 14:48:25","2017-07-25 14:48:25","","","","1","","",""
"44067185","2","","5340724","2017-05-19 10:06:39","","6","","<p>Whatever the rebase or merge is right, but what if you have multiple commits in your branch aq, the rebase or merge will contains others people changes when you send pull request, or what if squash the commits into one commit, so I think I have a way(not the best way, but very safe and clear)</p>

<pre><code># 1. Create a new remote branch A base on last master
# 2. Checkout A
# 3. Merge aq to A
</code></pre>
","1903668","","","","","2017-05-19 10:06:39","","","","0","","",""
"44126137","2","","27722872","2017-05-23 05:01:32","","0","","<p>just add <strong>display: inline-block;</strong> property and removed width.</p>
","6205407","","","","","2017-05-23 05:01:32","","","","1","","",""
"44126865","2","","27722872","2017-05-23 05:59:44","","2","","<p>Keeping the element's size relative to its content can also be done with <code>display: inline-flex</code> and <code>display: table</code></p>

<p><strong>The centering can be done with..</strong></p>

<ul>
<li><p><code>text-align: center;</code> on the parent (or above, it's inherited)</p></li>
<li><p><code>display: flex;</code> and <code>justify-content: center;</code> on the parent</p></li>
<li><p><code>position: absolute;</code> <code>left: 50%;</code> <code>transform: translateX(-50%);</code> on
the element with position: relative; (at least) on the parent.</p></li>
</ul>

<p>Here's a <a href=""https://css-tricks.com/snippets/css/a-guide-to-flexbox/"" rel=""nofollow noreferrer"">flexbox    guide</a> from    CSS Tricks</p>

<p>Here's an <a href=""https://css-tricks.com/centering-css-complete-guide/"" rel=""nofollow noreferrer"">article on centering</a> from CSS Tricks.</p>

<p><strong>Keeping an element only as wide as its content..</strong></p>

<ul>
<li><p>Can use <code>display: table;</code></p></li>
<li><p>Or inline-anything including <code>inline-flex</code> as used in my snippet
example below.</p></li>
</ul>

<p><em>Keep in mind that when centering with flexbox's <code>justify-content: center;</code> when the text wraps the text will align left. So you will still need <code>text-align: center;</code> if your site is responsive and you expect lines to wrap.</em></p>

<ul>
<li>More examples in <a href=""https://stackoverflow.com/a/32919558/3377049"">this stack
answer</a></li>
</ul>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>body {
  display: flex;
  flex-direction: column;
  height: 100vh;
  padding: 20px;
}
.container {
  display: flex;
  justify-content: center; /* center horizontally */
  align-items: center; /* center vertically */
  height: 50%;
}
.container.c1 {
  text-align: center; /* needed if the text wraps */
  /* text-align is inherited, it can be put on the parent or the target element */
}
.container.c2 {
 /* without text-align: center; */
}
.button {
  padding: 5px 10px;
  font-size: 30px;
  text-decoration: none;
  color: hsla(0, 0%, 90%, 1);
  background: linear-gradient(hsla(21, 85%, 51%, 1), hsla(21, 85%, 61%, 1));
  border-radius: 10px;
  box-shadow: 2px 2px 15px -5px hsla(0, 0%, 0%, 1);
}
.button:hover {
  background: linear-gradient(hsl(207.5, 84.8%, 51%), hsla(207, 84%, 62%, 1));
  transition: all 0.2s linear;
}
.button.b1 {
    display: inline-flex; /* element only as wide as content */
}
.button.b2 {
    display: table; /* element only as wide as content */
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""container c1""&gt;
  &lt;a class=""button b1"" href=""https://stackoverflow.com/questions/27722872/""&gt;This Text Is Centered Before And After Wrap&lt;/a&gt;
&lt;/div&gt;
&lt;div class=""container c2""&gt;
  &lt;a class=""button b2"" href=""https://stackoverflow.com/questions/27722872/""&gt;This Text Is Centered Only Before Wrap&lt;/a&gt;
&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><strong>Fiddle</strong></p>

<p><a href=""https://jsfiddle.net/Hastig/02fbs3pv/"" rel=""nofollow noreferrer"">https://jsfiddle.net/Hastig/02fbs3pv/</a></p>
","3377049","","","","","2017-05-23 05:59:44","","","","0","","",""
"44714712","2","","2003505","2017-06-23 06:42:48","","74","","<p><strong>To delete Locally - (Normal),</strong> </p>

<pre><code>git branch -d my_branch
</code></pre>

<p>If your branch in rebasing/merging progress and that was not done properly means, you will get an error <code>Rebase/Merge in progress</code> so in that case, you won't be able to delete your branch.</p>

<p>So either your need to solve rebasing/merging otherwise you can do force Delete by using,</p>

<pre><code>git branch -D my_branch
</code></pre>

<p><strong>To delete in Remote:</strong></p>

<pre><code>git push --delete origin my_branch
</code></pre>

<p><strong>can do the same using ,</strong></p>

<pre><code>git push origin :my_branch   # easy to remember both will do the same.
</code></pre>

<p><strong>Graphical Representation,</strong></p>

<p><a href=""https://i.stack.imgur.com/Y7NmS.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Y7NmS.png"" alt=""enter image description here""></a></p>
","4453737","","3501205","","2017-11-19 10:24:03","2017-11-19 10:24:03","","","","0","","",""
"45113099","2","","5767325","2017-07-14 23:58:44","","0","","<p>There are already a lot of answers, but because no one has done it with a one liner yet, I figured I'd show my method. It takes advantage of the fact that the string.split() function will remove all of the specified characters when creating an array. Here is an example: </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var ary = [1,2,3,4,1234,10,4,5,7,3];
out = ary.join(""-"").split(""-4-"").join(""-"").split(""-"");
console.log(out);</code></pre>
</div>
</div>
</p>

<p>In this example, all of the 4's are being removed from the array ary. However, it is important to note that any array containing the character ""-"" will cause issues with this example. In short, it will cause the join(""-"") function to piece your string together improperly. In such a situation, all of the the ""-"" strings in the above snipet can be replaced with any string that will not be used in the original array. Here is another example: </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var ary = [1,2,3,4,'-',1234,10,'-',4,5,7,3];
out = ary.join(""!@#"").split(""!@#4!@#"").join(""!@#"").split(""!@#"");
console.log(out);</code></pre>
</div>
</div>
</p>
","3790949","","","","","2017-07-14 23:58:44","","","","3","","",""
"45405497","2","","5767325","2017-07-30 22:55:52","","3","","<p>Post my code that removes an array element in place, and reduce the array length as well.</p>

<pre><code>function removeElement(idx, arr) {
    // check the index value
    if (idx &lt; 0 || idx &gt;= arr.length) {
        return;
    }
    // shift the elements
    for (var i = idx; i &gt; 0; --i) {
        arr[i] = arr[i - 1];
    }
    // remove the first element in array
    arr.shift();
}
</code></pre>
","2678523","","","","","2017-07-30 22:55:52","","","","0","","",""
"45583987","2","","17073808","2017-08-09 07:16:47","","6","","<p>These days you CAN add commit messages to individual files. I just did this for instance:</p>

<pre><code>git commit -m 'reference containers in app' src/App.js
</code></pre>

<p>Context: multiple files added to git through <code>$git add .</code>
THEN: commit message on this individual file (src/App.js).</p>

<p>[posting answer since this still comes up in google]</p>
","8007395","","","","","2017-08-09 07:16:47","","","","1","","",""
"45708471","2","","3047056","2017-08-16 08:17:11","","-2","","<p>There is some cases when you copy and paste the CSS code in somewhere and it breaks the format so Chrome show the yellow warning. You should try to reformat the CSS code again and it should be fine. </p>
","7441330","","","","","2017-08-16 08:17:11","","","","1","","",""
"45727028","2","","3047056","2017-08-17 05:11:57","","4","","<p>If you want to apply the style even after getting struck-trough indication, you can use <code>""!important""</code> to enforce the style. It may not be a right solution but solve the problem.</p>
","8476018","","6572922","","2017-08-17 05:20:05","2017-08-17 05:20:05","","","","0","","",""
"45733633","2","","2831059","2017-08-17 11:15:13","","7","","<p>To remove the column from table you have to run following migration:</p>

<pre><code>rails g migration remove_column_name_from_table_name column_name:data_type
</code></pre>

<p>Then run command:</p>

<pre><code>rake db:migrate
</code></pre>
","8477642","","5409748","","2018-04-02 09:06:50","2018-04-02 09:06:50","","","","0","","",""
"45946523","2","","45945820","2017-08-29 18:59:45","","27","","<p>Try the <code>View: Keep Editor</code> command (default shortcut <kbd>Ctrl</kbd>+<kbd>K</kbd>, <kbd>Enter</kbd>):</p>

<p><img src=""https://i.imgur.com/Yaq12qU.png"" alt=""""></p>

<p>Note: this shortcut is a <em>chord</em>, meaning that <kbd>Enter</kbd> must be pressed after releasing <kbd>Ctrl</kbd>+<kbd>K</kbd>.</p>
","2631715","","2631715","","2019-02-02 11:24:59","2019-02-02 11:24:59","","","","0","","",""
"46034248","2","","9529300","2017-09-04 09:37:03","","7","","<p>you put this css for svg circle.   </p>

<pre><code>svg:hover circle{
    fill: #F6831D;
    stroke-dashoffset: 0;
    stroke-dasharray: 700;
    stroke-width: 2;
}
</code></pre>
","7984635","","","","","2017-09-04 09:37:03","","","","0","","",""
"46108284","2","","38713405","2017-09-08 03:41:57","","11","","<blockquote>
  <p>Watch for filename in <em><strong>italic</strong></em></p>
</blockquote>

<p>Note that, the file name on the tab is formatted in <em><strong>italic</strong></em> if it has been opened in <code>Preview Mode</code>. </p>

<blockquote>
  <p>Quickly take a file out of Preview Mode</p>
</blockquote>

<p>To keep the file always available in VSCode editor (that is, to take it out of <code>Preview Mode</code> into normal mode), you can <strong>double-click</strong> on the tab. Then, you will notice the name becomes non-italic. </p>

<blockquote>
  <p>Feature or bug?</p>
</blockquote>

<p>I believe Preview Mode is helpful especially when you have limited screen space and need to check many files.</p>
","1017265","","1017265","","2018-11-30 07:39:07","2018-11-30 07:39:07","","","","1","","",""
"46280319","2","","5767325","2017-09-18 13:17:54","","3","","<p>For anyone looking to replicate a method that will return a new array that has duplicate numbers or strings removed, this has been put together from existing answers:</p>

<pre><code>function uniq(array) {
  var len = array.length;
  var dupFree = [];
  var tempObj = {};

  for (var i = 0; i &lt; len; i++) {
    tempObj[array[i]] = 0;
  }

  console.log(tempObj);

  for (var i in tempObj) {
    var element = i;
    if (i.match(/\d/)) {
      element = Number(i);
    }
    dupFree.push(element);
  }

  return dupFree;
}
</code></pre>
","1904850","","","","","2017-09-18 13:17:54","","","","0","","",""
"46345065","2","","11757537","2017-09-21 13:20:12","","3","","<p>This will Fill images to a specific size, without stretching it or without cropping it</p>

<pre><code>img{
    width:150px;  //your requirement size
    height:100px; //your requirement size

/*Scale down will take the necessary specified space that is 150px x 100px without stretching the image*/
    object-fit:scale-down;
}
</code></pre>
","5372715","","","","","2017-09-21 13:20:12","","","","0","","",""
"46412667","2","","2003505","2017-09-25 19:20:00","","20","","<p>I created the following convenient function in my .bash_aliases file:</p>

<pre><code>git-delete-branch() 
{ 
    if [[ -n $1 ]]; then
        git checkout master &gt; /dev/null;
        branch_name=""$1"";
        echo ""Deleting local $branch_name branch..."";
        git branch -D ""$branch_name"";
        echo ""Deleting remote $branch_name branch..."";
        git push origin --delete ""$branch_name"";
        git remote prune origin;
        echo ""Your current branches are:"";
        git branch -a;
    else
        echo ""Usage: git-delete-branch &lt;branch_name&gt;"";
    fi
}
</code></pre>
","4395283","","4395283","","2018-05-29 11:56:47","2018-05-29 11:56:47","","","","0","","",""
"46498078","2","","38713405","2017-09-29 23:28:03","","28","","<p>Use <code>workbench.editor.enablePreview: false</code> to disable Preview mode completely. </p>

<p>Use <code>workbench.editor.enablePreviewFromQuickOpen: false</code> to disable Preview mode for the files open from quick open menu.</p>
","480949","","","","","2017-09-29 23:28:03","","","","0","","",""
"46888156","2","","2003505","2017-10-23 11:23:17","","20","","<p>According to latest document using terminal we can delete following way.</p>

<p><strong>delete in local:</strong></p>

<pre><code>git branch -D usermanagement
</code></pre>

<p><strong>delete in remote location:</strong></p>

<pre><code>git push --delete origin usermanagement
</code></pre>
","4652706","","","","","2017-10-23 11:23:17","","","","0","","",""
"46998665","2","","5767325","2017-10-29 09:31:19","","-9","","<pre><code>var ar1 = [1,2,3,4,5,6,7,8,9]
var toBeRemoved = 2;
ar1.splice( (ar1.length -toBeRemoved) , toBeRemoved);
</code></pre>
","1477037","","","","","2017-10-29 09:31:19","","","","1","","",""
"47311476","2","","2831059","2017-11-15 15:38:50","","6","","<p>Generate a migration to remove a column such that if it is migrated (<code>rake db:migrate</code>), it should <strong>drop the column</strong>. And it should <strong>add column back</strong> if this migration is rollbacked (<code>rake db:rollback</code>).</p>

<p>The syntax:</p>

<p><strong>remove_column :table_name, :column_name, :type</strong></p>

<blockquote>
  <p>Removes column, also <strong>adds column back</strong> if migration is rollbacked.</p>
</blockquote>

<p>Example: </p>

<pre><code>remove_column :users, :last_name, :string
</code></pre>

<p><strong>Note</strong>: <em>If you skip the data_type</em>, the migration will remove the column successfully but if you rollback the migration it will error.</p>
","5351136","","5351136","","2018-11-29 19:07:04","2018-11-29 19:07:04","","","","0","","",""
"47696235","2","","2003505","2017-12-07 13:29:43","","17","","<blockquote>
  <p>Its very simple</p>
</blockquote>

<p><strong>To delete remote branch</strong></p>

<pre><code>git push -d origin &lt;branch-name&gt;
</code></pre>

<p>OR</p>

<pre><code>git push origin :&lt;branch-name&gt;
</code></pre>

<p><strong>To delete local branch</strong></p>

<pre><code>git branch -D &lt;branch-name&gt;
</code></pre>
","4456413","","4456413","","2017-12-18 09:50:38","2017-12-18 09:50:38","","","","2","","",""
"47840585","2","","45945820","2017-12-15 22:17:05","","10","","<p>As of v1.19 (released in December 2017) <kbd>Alt</kbd>+<kbd>Enter</kbd> opens the file (after <kbd>Ctrl</kbd>+<kbd>P</kbd>) <strong>NOT</strong> in preview mode but in a ""permanent"", touched status.</p>

<p>Related question: <a href=""https://stackoverflow.com/questions/38713405/how-to-config-vscode-to-open-files-always-in-a-new-tab"">How do I configure Visual Studio Code to open files always in a new tab?</a></p>
","836330","","2631715","","2019-02-14 01:38:04","2019-02-14 01:38:04","","","","0","","",""
"47982951","2","","5767325","2017-12-26 19:32:06","","19","","<p>You should never mutate your array your array. As this is against functional programming pattern. What you can do is create a new array without referencing the array you want to change data of using es6 method <code>filter</code>;</p>

<pre><code>var myArray = [1,2,3,4,5,6];
</code></pre>

<p>Suppose you want to remove <code>5</code> from the array you can simply do it like this.</p>

<pre><code>myArray = myArray.filter(value =&gt; value !== 5);
</code></pre>

<p>This will give you a new array without the value you wanted to remove. So the result will be</p>

<pre><code> [1,2,3,4,6]; // 5 has been removed from this array
</code></pre>

<p>For further understanding you can read the MDN documentation on Array.filter <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter</a></p>
","4921319","","","","","2017-12-26 19:32:06","","","","0","","",""
"48107407","2","","48107353","2018-01-05 04:58:48","","2","","<p>I have included the change log to see where the code needs to be change in order to get an understanding. Also the full code snippet is available below. Hope this is what you expect.</p>

<p><strong>Change log</strong></p>

<p>*Remove <code>body { overflow: hidden; }</code></p>

<p>*Change <code>.page { grid-template-columns: 3.5rem auto; }</code></p>

<p>*Added</p>

<pre><code>.nav { position: fixed;
      top: 0;
      bottom:0;}
</code></pre>

<p>*Added </p>

<pre><code>.header {  position: fixed;
      margin-left: 3.5rem;
      width: 100%;
      height: 3.5rem; }
</code></pre>

<p>Full Code</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>body {
  margin: 0;
}

.page {
  display: grid;
  grid-template-rows: 55px auto;
  grid-template-columns: 3.5rem auto;
  grid-template-areas:
    ""nav header""
    ""nav content"";
}

.nav {
  position: fixed;
  top: 0;
  bottom:0;
  grid-area: nav;
  background-color: blue;

}

.header {
  grid-area: header;
  background-color: grey;
  position: fixed;
  margin-left: 3.5rem;
  width: 100%;
  height: 3.5rem;
}

.content {
  grid-area: content;
  height: 1000px;
  background-color: red;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""page""&gt;
  &lt;div class=""nav""&gt;Side nav&lt;/div&gt;
  &lt;div class=""header""&gt;Header&lt;/div&gt;
  &lt;div class=""content""&gt;
    &lt;h1&gt;title&lt;/h1&gt;
  &lt;/div&gt;
&lt;div&gt;</code></pre>
</div>
</div>
</p>
","5717747","","5717747","","2018-01-05 05:27:34","2018-01-05 05:27:34","","","","6","","",""
"48109563","2","","48107353","2018-01-05 08:10:42","","4","","<p>Browser support is not 100%, but what about actually using sticky instead of fixed positioning? (now tested in Chrome) You won't have to deal with hard-coded margins.</p>

<p>One of the issues you'll still have to deal with, what to do when the content in your sidebar (<code>.nav &gt; div</code>) Is higher than your viewport.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>body {
  margin: 0;
}

.page {
  display: grid;
  grid-template-rows: 55px auto;
  grid-template-columns: 3.5rem auto;
  grid-template-areas: ""nav header"" ""nav content"";
}

.nav {
  grid-area: nav;
  background-color: blue;
}

.nav &gt; div {
  position: sticky;
  top: 0;
}

.header {
  grid-area: header;
  background-color: grey;
  position: sticky;
  top: 0;
  min-height: 3.5rem;
}

.content {
  grid-area: content;
  min-height: 1000px;
  background-color: red;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""page""&gt;
  &lt;div class=""nav""&gt;
    &lt;div&gt;Side nav&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=""header""&gt;Header&lt;/div&gt;
  &lt;div class=""content""&gt;
    &lt;h1&gt;title&lt;/h1&gt;
  &lt;/div&gt;
&lt;div&gt;</code></pre>
</div>
</div>
</p>
","449444","","","","","2018-01-05 08:10:42","","","","6","","",""
"48512245","2","","7217894","2018-01-30 00:41:36","","9","","<p>Sadly this happens to me quite regularly as well and I use <code>git stash</code> if I realized my mistake before <code>git commit</code> and use <code>git cherry-pick</code> otherwise, both commands are explained pretty well in other answers</p>

<p>I want to add a clarification for <code>git checkout targetBranch</code>: <strong>this command will only preserve your working directory and staged snapshot if targetBranch has the same history as your current branch</strong></p>

<blockquote>
  <p>If you haven't already committed your changes, just use git checkout
  to move to the <em>new branch</em> and then commit them normally</p>
</blockquote>

<p>@Amber's statement is not false, when you move to a <strong>newBranch</strong>,<code>git checkout -b newBranch</code>, a new pointer is created and it is pointing to the exact same commit as your current branch.<br>
In fact, if you happened to have an another branch that shares history with your current branch (both point at the same commit) you can ""move your changes"" by <code>git checkout targetBranch</code></p>

<p>However, usually different branches means different history, and Git will not allow you to switch between these branches with a dirty working directory or staging area. in which case you can either do <code>git checkout -f targetBranch</code> (clean and throwaway changes) or <code>git stage</code> + <code>git checkout targetBranch</code> (clean and <strong>save</strong> changes), simply running <code>git checkout targetBranch</code> will give an error:</p>

<blockquote>
  <p>error: Your local changes to the following files would be overwritten
  by checkout:
          ...
  Please commit your changes or stash them before you switch branches. Aborting</p>
</blockquote>
","1831108","","","","","2018-01-30 00:41:36","","","","1","","",""
"48595086","2","","4834809","2018-02-03 07:36:24","","24","","<p>Sometimes <code>rails generate migration add_email_to_users email:string</code> produces a migration like this</p>

<pre><code>class AddEmailToUsers &lt; ActiveRecord::Migration[5.0]
  def change
  end
end
</code></pre>

<p>In that case you have to manually an <a href=""https://apidock.com/rails/ActiveRecord/ConnectionAdapters/SchemaStatements/add_column"" rel=""noreferrer""><code>add_column</code></a> to <code>change</code>:</p>

<pre><code>class AddEmailToUsers &lt; ActiveRecord::Migration[5.0]
  def change
    add_column :users, :email, :string
  end
end
</code></pre>

<p>And then run <code>rake db:migrate</code></p>
","6712942","","12484","","2018-12-26 21:30:18","2018-12-26 21:30:18","","","","0","","",""
"49180164","2","","5767325","2018-03-08 18:35:44","","5","","<p>I just created a polyfill on the <code>Array.prototype</code> via <code>Object.defineProperty</code> to remove a desired element in an array without leading to errors when iterating over it later via <code>for .. in ..</code></p>

<pre><code>if (!Array.prototype.remove) {
  // Object.definedProperty is used here to avoid problems when iterating with ""for .. in .."" in Arrays
  // https://stackoverflow.com/questions/948358/adding-custom-functions-into-array-prototype
  Object.defineProperty(Array.prototype, 'remove', {
    value: function () {
      if (this == null) {
        throw new TypeError('Array.prototype.remove called on null or undefined')
      }

      for (var i = 0; i &lt; arguments.length; i++) {
        if (typeof arguments[i] === 'object') {
          if (Object.keys(arguments[i]).length &gt; 1) {
            throw new Error('This method does not support more than one key:value pair per object on the arguments')
          }
          var keyToCompare = Object.keys(arguments[i])[0]

          for (var j = 0; j &lt; this.length; j++) {
            if (this[j][keyToCompare] === arguments[i][keyToCompare]) {
              this.splice(j, 1)
              break
            }
          }
        } else {
          var index = this.indexOf(arguments[i])
          if (index !== -1) {
            this.splice(index, 1)
          }
        }
      }
      return this
    }
  })
} else {
  var errorMessage = 'DANGER ALERT! Array.prototype.remove has already been defined on this browser. '
  errorMessage += 'This may lead to unwanted results when remove() is executed.'
  console.log(errorMessage)
}
</code></pre>

<p><strong>Removing an integer value</strong></p>

<pre><code>var a = [1, 2, 3]
a.remove(2)
a // Output =&gt; [1, 3]
</code></pre>

<p><strong>Removing a string value</strong></p>

<pre><code>var a = ['a', 'ab', 'abc']
a.remove('abc')
a // Output =&gt; ['a', 'ab']
</code></pre>

<p><strong>Removing a boolean value</strong></p>

<pre><code>var a = [true, false, true]
a.remove(false)
a // Output =&gt; [true, true]
</code></pre>

<p>It is also possible to remove an object inside the array via this <code>Array.prototype.remove</code> method. You just need to specify the <code>key =&gt; value</code> of the <code>Object</code> you want to remove.</p>

<p><strong>Removing an object value</strong></p>

<pre><code>var a = [{a: 1, b: 2}, {a: 2, b: 2}, {a: 3, b: 2}]
a.remove({a: 1})
a // Output =&gt; [{a: 2, b: 2}, {a: 3, b: 2}]
</code></pre>
","7644846","","7644846","","2018-03-08 19:28:29","2018-03-08 19:28:29","","","","0","","",""
"49187285","2","","5767325","2018-03-09 05:40:20","","3","","<p>Very naive implementation would be as following:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>Array.prototype.remove = function(data) {
    const dataIdx = this.indexOf(data)
    if(dataIdx &gt;= 0) {
        this.splice(dataIdx ,1);
    }
    return this.length;
}

let a = [1,2,3];
// this will change arr a to [1, 3]
a.remove(2);</code></pre>
</div>
</div>
</p>

<p>I return length of the array from the function to comply with the other methods like <code>Array.prototype.push()</code>.</p>
","4957776","","4957776","","2018-03-09 05:50:02","2018-03-09 05:50:02","","","","0","","",""
"49298453","2","","9461621","2018-03-15 11:37:40","","0","","<pre><code>/*including negative values*/    
function nFormatter(num) {
      let neg = false;
       if(num &lt; 0){
         num = num * -1;
         neg = true;
       }
       if (num &gt;= 1000000000) {
         if(neg){
           return -1 * (num / 1000000000).toFixed(1).replace(/\.0$/, '') + 'G';  
         }
         return (num / 1000000000).toFixed(1).replace(/\.0$/, '') + 'G';
       }
       if (num &gt;= 1000000) {
         if(neg){
           return -1 * (num / 1000000).toFixed(1).replace(/\.0$/, '') + 'M';  
         }
         return (num / 1000000).toFixed(1).replace(/\.0$/, '') + 'M';
       }
       if (num &gt;= 1000) {
         if(neg){
           return -1 * (num / 1000).toFixed(1).replace(/\.0$/, '') + 'K';  
         }
         return (num / 1000).toFixed(1).replace(/\.0$/, '') + 'K';
       }
       return num;
    }
</code></pre>
","9497047","","","","","2018-03-15 11:37:40","","","","1","","",""
"49668348","2","","17073808","2018-04-05 09:06:14","","-3","","<p>In each file in git you will see '+' when you do hover, click on that add your comments for each file.</p>
","9601291","","","","","2018-04-05 09:06:14","","","","0","","",""
"49671010","2","","9461621","2018-04-05 11:14:57","","6","","<p>this is is quite elegant.</p>

<pre><code>function formatToUnits(number, precision) {
  const abbrev = ['', 'k', 'm', 'b', 't'];
  const unrangifiedOrder = Math.floor(Math.log10(Math.abs(number)) / 3)
  const order = Math.max(0, Math.min(unrangifiedOrder, abbrev.length -1 ))
  const suffix = abbrev[order];

  return (number / Math.pow(10, order * 3)).toFixed(precision) + suffix;
}

formatToUnits(12345, 2)
==&gt; ""12.35k""
formatToUnits(0, 3)
==&gt; ""0.000""
</code></pre>
","919348","","919348","","2018-05-30 20:27:24","2018-05-30 20:27:24","","","","2","","",""
"49744347","2","","5340724","2018-04-10 02:24:16","","3","","<p><strong>Merge it with <code>aq</code></strong></p>

<pre><code>git checkout master
git pull
git checkout aq
git merge --no-ff master
git push
</code></pre>
","1116802","","","","","2018-04-10 02:24:16","","","","0","","",""
"49815992","2","","5767325","2018-04-13 11:31:04","","-11","","<pre><code>let array = [5,5,4,4,2,3,4]    
let newArray = array.join(',').replace('5','').split(',')
</code></pre>

<p>This example works if you want to remove one current item.</p>
","8428936","","1461424","","2018-05-16 08:30:17","2018-05-16 08:30:17","","","","0","","",""
"49959806","2","","35181340","2018-04-21 20:08:19","","9","","<p>There is relevant info on a configuration of CSRF with respect to API controllers on <a href=""http://api.rubyonrails.org/classes/ActionController/RequestForgeryProtection.html"" rel=""noreferrer"">api.rubyonrails.org</a>:</p>

<blockquote>
  <p>⋮</p>
  
  <p>It's important to remember that XML or JSON requests are also affected and if you're building an <a href=""http://api.rubyonrails.org/classes/ActionController/API.html"" rel=""noreferrer"">API</a> you should change forgery protection method in <code>ApplicationController</code> (by default: <code>:exception</code>):</p>

<pre><code>class ApplicationController &lt; ActionController::Base
  protect_from_forgery unless: -&gt; { request.format.json? }
end
</code></pre>
  
  <p>We may want to disable CSRF protection for APIs since they are typically designed to be state-less. That is, the request <a href=""http://api.rubyonrails.org/classes/ActionController/API.html"" rel=""noreferrer"">API</a> client will handle the session for you instead of Rails.</p>
  
  <p>⋮</p>
</blockquote>
","2948889","","","","","2018-04-21 20:08:19","","","","4","","",""
"50044765","2","","38713405","2018-04-26 13:50:41","","5","","<p>Menu <em>File</em> → <em>Preferences</em> → <em>User Settings</em>: add this line ""workbench.editor.enablePreviewFromQuickOpen"": false</p>
","8635168","","63550","","2018-12-15 17:54:13","2018-12-15 17:54:13","","","","0","","",""
"50053493","2","","5767325","2018-04-27 00:07:48","","2","","<p>Your question did not indicate if order or distinct values are a requirement.</p>

<p>If you don't care about order, and will not have the same value in the container more than once, use a Set.  It will be way faster, and more succinct.  </p>

<pre><code>var aSet = new Set();

aSet.add(1);
aSet.add(2);
aSet.add(3);

aSet.delete(2);
</code></pre>
","5093961","","","","","2018-04-27 00:07:48","","","","0","","",""
"50167614","2","","5767325","2018-05-04 05:17:29","","20","","<p>Here are a few ways to <strong>remove an item from an array using JavaScript</strong>.</p>

<p>All the method described <strong>do not mutate the original array</strong>, and instead create a new one.</p>

<h2>If you know the index of an item</h2>

<p>Suppose you have an array, and you want to remove an item in position <code>i</code>.</p>

<p>One method is to use <code>slice()</code>:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const items = ['a', 'b', 'c', 'd', 'e', 'f']
const i = 3
const filteredItems = items.slice(0, i-1).concat(items.slice(i, items.length))

console.log(filteredItems)</code></pre>
</div>
</div>
</p>

<p><code>slice()</code> creates a new array with the indexes it receives. We simply create a new array, from start to the index we want to remove, and concatenate another array from the first position following the one we removed to the end of the array.</p>

<h2>If you know the value</h2>

<p>In this case, one good option is to use <code>filter()</code>, which offers a more <em>declarative</em> approach:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const items = ['a', 'b', 'c', 'd', 'e', 'f']
const valueToRemove = 'c'
const filteredItems = items.filter(item =&gt; item !== valueToRemove)

console.log(filteredItems)</code></pre>
</div>
</div>
</p>

<p>This uses the ES6 arrow functions. You can use the traditional functions to support older browsers:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const items = ['a', 'b', 'c', 'd', 'e', 'f']
const valueToRemove = 'c'
const filteredItems = items.filter(function(item) {
  return item !== valueToRemove
})

console.log(filteredItems)</code></pre>
</div>
</div>
</p>

<p>or you can use Babel and transpile the ES6 code back to ES5 to make it more digestible to old browsers, yet write modern JavaScript in your code.</p>

<h2>Removing multiple items</h2>

<p>What if instead of a single item, you want to remove many items?</p>

<p>Let's find the simplest solution.</p>

<h3>By index</h3>

<p>You can just create a function and remove items in series:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const items = ['a', 'b', 'c', 'd', 'e', 'f']

const removeItem = (items, i) =&gt;
  items.slice(0, i-1).concat(items.slice(i, items.length))

let filteredItems = removeItem(items, 3)
filteredItems = removeItem(filteredItems, 5)
//[""a"", ""b"", ""c"", ""d""]

console.log(filteredItems)</code></pre>
</div>
</div>
</p>

<h3>By value</h3>

<p>You can search for inclusion inside the callback function:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>const items = ['a', 'b', 'c', 'd', 'e', 'f']
const valuesToRemove = ['c', 'd']
const filteredItems = items.filter(item =&gt; !valuesToRemove.includes(item))
// [""a"", ""b"", ""e"", ""f""]

console.log(filteredItems)</code></pre>
</div>
</div>
</p>

<h2>Avoid mutating the original array</h2>

<p><code>splice()</code> (not to be confused with <code>slice()</code>) mutates the original array, and should be avoided.</p>

<p>(originally posted at <a href=""https://flaviocopes.com/how-to-remove-item-from-array/"" rel=""noreferrer"">https://flaviocopes.com/how-to-remove-item-from-array/</a>)</p>
","205039","","","","","2018-05-04 05:17:29","","","","0","","",""
"50313851","2","","5767325","2018-05-13 07:41:00","","1","","<p>Define a method named remove() on array objects using prototying feature of JavaScript.</p>

<blockquote>
  <p>Use <strong>splice()</strong> method to fulfill your requirement.</p>
</blockquote>

<p>Please have a look at the below code.</p>

<pre><code>Array.prototype.remove = function(item) {
    // index will have -1 if item does not exist
    // else it will have the index of 1st item found in array
    var index = this.indexOf(item); 

    if (index &gt; -1) {
        // splice() method is used to add/remove items(s) in array
        this.splice(index, 1); 
    }

    return index;
}


var arr = [ 11, 22, 67, 45, 61, 89, 34, 12, 7, 8, 3, -1, -4];

// Printing array
// [ 11, 22, 67, 45, 61, 89, 34, 12, 7, 8, 3, -1, -4];
console.log(arr)

// Removing 67 (getting its index i.e. 2)
console.log(""Removing 67"")
var index = arr.remove(67)

if (index &gt; 0){
    console.log(""Item 67 found at "", index)
} else {
    console.log(""Item 67 does not exist in array"")
}

// Printing updated array
// [ 11, 22, 45, 61, 89, 34, 12, 7, 8, 3, -1, -4];
console.log(arr)

// ............... Output ................................
// [ 11, 22, 67, 45, 61, 89, 34, 12, 7, 8, 3, -1, -4 ]
// Removing 67
// Item 67 found at  2
// [ 11, 22, 45, 61, 89, 34, 12, 7, 8, 3, -1, -4 ]
</code></pre>

<blockquote>
  <p><strong>Note:</strong> Below is the full example code executed on <strong>Node.js REPL</strong> which describes the use of push(), pop(), shift(), unshift() and splice() methods.</p>
</blockquote>

<pre><code>&gt; // Defining an array
undefined
&gt; var arr = [12, 45, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34];
undefined
&gt; // Getting length of array
undefined
&gt; arr.length;
16
&gt; // Adding 1 more item at the end i.e. pushing an item
undefined
&gt; arr.push(55);
17
&gt; arr
[ 12, 45, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34, 55 ]
&gt; // Popping item from array (i.e. from end)
undefined
&gt; arr.pop()
55
&gt; arr
[ 12, 45, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34 ]
&gt; // Remove item from beginning
undefined
&gt; arr.shift()
12
&gt; arr
[ 45, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34 ]
&gt; // Add item(s) at beginning
undefined
&gt; arr.unshift(67); // Add 67 at begining of the array and return number of items in updated/new array
16
&gt; arr
[ 67, 45, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34 ]
&gt; arr.unshift(11, 22); // Adding 2 more items at the beginning of array
18
&gt; arr
[ 11, 22, 67, 45, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34 ]
&gt;
&gt; // Define a method on array (temorarily) to remove an item and return the index of removed item; if it is found else return -1
undefined
&gt; Array.prototype.remove = function(item) {
... var index = this.indexOf(item);
... if (index &gt; -1) {
..... this.splice(index, 1); // splice() method is used to add/remove items in array
..... }
... return index;
... }
[Function]
&gt;
&gt; arr
[ 11, 22, 67, 45, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34 ]
&gt;
&gt; arr.remove(45);   // Remove 45 (You will get the index of removed item)
3
&gt; arr
[ 11, 22, 67, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34 ]
&gt;
&gt; arr.remove(22)    // Remove 22
1
&gt; arr
[ 11, 67, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34 ]
&gt; arr.remove(67)    // Remove 67
1
&gt; arr
[ 11, 67, 89, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34 ]
&gt;
&gt; arr.remove(89)    // Remove 89
2
&gt; arr
[ 11, 67, 34, 12, 7, 8, 3, -1, -4, -11, 0, 56, 12, 34 ]
&gt;
&gt; arr.remove(100);  // 100 doesn't exist, remove() will return -1
-1
&gt;
</code></pre>

<p>Thanks.</p>
","6615163","","6615163","","2018-05-13 08:41:02","2018-05-13 08:41:02","","","","0","","",""
"50409523","2","","38713405","2018-05-18 10:40:57","","13","","<p>For anyone who don't want to disabled <strong>Preview Mode</strong>.</p>

<p>As I read whole of comments and I found what I preferred that is the shortcut key to pin the opened file from <strong>Quick Open/Ctrl+P</strong> or that's mean to keep the opened file to the editor, and <strong>yes</strong> also don't need to switch your hand to the mouse to double-click on files list.</p>

<p>Thanks to @jontem and @MattLBeck.</p>

<p>Call <code>save</code> command with <code>Ctrl+S</code> (<code>cmd+s</code>) is the easiest way to reach what I preferred.</p>

<p>And if you found out you do this to keep opened file to editor quite frequently, yes I preferred you should setting the option <code>""workbench.editor.enablePreview"": false</code> or <code>""workbench.editor.enablePreviewFromQuickOpen"": false</code> as others mentioned before.</p>
","603324","","603324","","2018-11-19 01:31:48","2018-11-19 01:31:48","","","","0","","",""
"50411333","2","","38713405","2018-05-18 12:27:15","","12","","<blockquote>
  <p>⚡ Actually, VSCode shows you the preview of a file. </p>
</blockquote>

<p>You can disable the preview with this:</p>

<pre><code>""workbench.editor.enablePreview"": false,
</code></pre>

<p>⬇️ Basically just add these two settings and you're good to go.</p>

<p><a href=""https://VSCode.pro/tip/10"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xTf2V.png"" alt=""VSCode tip""></a></p>
","950111","","950111","","2018-10-09 20:54:43","2018-10-09 20:54:43","","","","0","","",""
"50702953","2","","5767325","2018-06-05 14:47:00","","15","","<p>I have another good solution for removing from an array:</p>

<pre><code>var words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];

const result = words.filter(word =&gt; word.length &gt; 6);

console.log(result);
// expected output: Array [""exuberant"", ""destruction"", ""present""]
</code></pre>

<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"" rel=""noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter</a></p>
","4553685","","6950859","","2018-06-05 15:51:34","2018-06-05 15:51:34","","","","0","","",""
"50808164","2","","50807929","2018-06-12 01:40:21","","1","","<h1>Link and Route</h1>

<p><code>&lt;Link/&gt;</code> is the element you could use to navigate through routes.</p>

<p><code>&lt;Route/&gt;</code>, its most basic responsibility is to render some UI when a location matches the route’s path.</p>

<p>They are used separately. Link is dependent to Route's locations. But Route can be used without Link.</p>

<p>React Router: <a href=""https://reacttraining.com/react-router/web/guides/philosophy"" rel=""nofollow noreferrer"">https://reacttraining.com/react-router/web/guides/philosophy</a></p>

<p>React JS Tutorial: 
<a href=""https://reactjs.org/docs/hello-world.html"" rel=""nofollow noreferrer"">https://reactjs.org/docs/hello-world.html</a></p>
","1748634","","","","","2018-06-12 01:40:21","","","","1","","",""
"51088822","2","","5767325","2018-06-28 17:48:41","","2","","<p>delete element from last        </p>

<pre><code>arrName.pop();
</code></pre>

<p>delete element from first   </p>

<pre><code>arrName.shift();
</code></pre>

<p>delete from middle</p>

<pre><code>arrName.splice(starting index,number of element you wnt to delete);

Ex: arrName.splice(1,1);
</code></pre>

<p>delete one element from last</p>

<pre><code>arrName.splice(-1);
</code></pre>

<p>Delete by using array index number</p>

<pre><code> delete arrName[1];
</code></pre>
","5852550","","","","","2018-06-28 17:48:41","","","","0","","",""
"51462109","2","","5767325","2018-07-22 04:42:19","","-1","","<pre><code>    Array.prototype.remove = function(start, end) {
        var n = this.slice((end || start) + 1 || this.length);
        return this.length = start &lt; 0 ? this.length + start : start,
        this.push.apply(this, n)
    }
</code></pre>

<p>start and end can be negative, in that case they count from the end of the array.<br>
if only start is specified, only one element is removed.<br>
the function returns the new array length.<br></p>

<pre><code>z=[0,1,2,3,4,5,6,7,8,9];

newlength=z.remove(2,6);
</code></pre>

<p>(8) [0, 1, 7, 8, 9]</p>

<pre><code>z=[0,1,2,3,4,5,6,7,8,9];

newlength=z.remove(-4,-2);
</code></pre>

<p>(7) [0, 1, 2, 3, 4, 5, 9]</p>

<pre><code>z=[0,1,2,3,4,5,6,7,8,9];

newlength=z.remove(3,-2);
</code></pre>

<p>(4) [0, 1, 2, 9]</p>
","236062","","","","","2018-07-22 04:42:19","","","","0","","",""
"51655525","2","","38713405","2018-08-02 13:59:44","","1","","<p>This is so confusing. All developers I asked didn't appreciate this default behavior. </p>

<p>I use <code>cmd + P</code> to open project files.</p>
","4004852","","","","","2018-08-02 13:59:44","","","","0","","",""
"51723546","2","","5767325","2018-08-07 09:37:25","","14","","<p>You have 1 to 9 array and you want remove 5 use below code.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var numberArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];

var newNumberArray = numberArray.filter(m =&gt; {
  return m !== 5;
});

console.log(""new Array, 5 removed"", newNumberArray);</code></pre>
</div>
</div>
</p>

<hr>

<p>If you want to multiple value ex :- 1,7,8</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var numberArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];

var newNumberArray = numberArray.filter(m =&gt; {
  return (m !== 1) &amp;&amp; (m !== 7) &amp;&amp; (m !== 8);
});

console.log(""new Array, 5 removed"", newNumberArray);</code></pre>
</div>
</div>
</p>

<hr>

<p>If you want to remove array value in array ex :- [3,4,5]</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var numberArray = [1, 2, 3, 4, 5, 6, 7, 8, 9];
var removebleArray = [3,4,5];

var newNumberArray = numberArray.filter(m =&gt; {
    return !removebleArray.includes(m);
});

console.log(""new Array, [3,4,5] removed"", newNumberArray);</code></pre>
</div>
</div>
</p>

<p>includes supported browser is <a href=""https://www.w3schools.com/jsref/jsref_includes_array.asp"" rel=""noreferrer"">link</a></p>
","5076266","","5076266","","2018-08-21 04:21:54","2018-08-21 04:21:54","","","","0","","",""
"51894343","2","","37909134","2018-08-17 11:23:11","","0","","<p>You can also use ES6 template literals i.e., </p>

<pre><code>`   &lt;li&gt;&lt;/li&gt;` or `  ${value}`
</code></pre>
","6903497","","","","","2018-08-17 11:23:11","","","","0","","",""
"52157714","2","","9461621","2018-09-04 01:35:44","","0","","<ul>
<li>Support negative number</li>
<li>Checking for <code>!Number.isFinite</code></li>
<li>Change <code>' K M G T P E Z Y'</code> to <code>' K M'</code> if you want the max unit is <code>M</code></li>
</ul>

<hr>

<pre><code>Number.prototype.prefix = function (precision = 2) {

    var units = ' K M G T P E Z Y'.split(' ');

    if (this &lt; 0) {
        return '-' + Math.abs(this).prefix(precision);
    }

    if (this &lt; 1) {
        return this + units[0];
    }

    var power = Math.min(
        Math.floor(Math.log(this) / Math.log(1024)),
        units.length - 1
    );

    return (this / Math.pow(1024, power)).toFixed(precision) + units[power];
}

(10240).prefix() // 10.00K
(1234000).prefix(1) // 1.2M
(-10000).prefix() // -9.77K
</code></pre>
","1877620","","","","","2018-09-04 01:35:44","","","","0","","",""
"52270459","2","","2831059","2018-09-11 07:08:07","","1","","<p>Do like this;</p>

<p><code>rails g migration RemoveColumnNameFromTables column_name:type</code></p>

<p>I.e. <code>rails g migration RemoveTitleFromPosts title:string</code></p>

<p>Anyway, Would be better to consider about downtime as well since the ActiveRecord caches database columns at runtime so if you drop a column, it might cause exceptions until your app reboots.</p>

<p>Ref: <a href=""https://github.com/ankane/strong_migrations#removing-a-column"" rel=""nofollow noreferrer"">Strong migration</a></p>
","5629073","","5629073","","2018-09-11 07:41:15","2018-09-11 07:41:15","","","","0","","",""
"52291636","2","","5767325","2018-09-12 09:16:36","","2","","<p>I had this problem myself (in a situation where replacing the array was acceptable) and solved it with a simple:</p>

<pre><code>var filteredItems = this.items.filter(function (i) {
    return i !== item;
});
</code></pre>

<p>To give the above snippet a bit of context:</p>

<pre><code>self.thingWithItems = {
        items: [],
        removeItem: function (item) {
            var filteredItems = this.items.filter(function (i) {
                return i !== item;
            });

            this.items = filteredItems;
        }
    };
</code></pre>

<p>This solution should work with both reference and value items.  It all depends whether you need to maintain a reference to the original array as to whether this solution is applicable.  </p>
","5048621","","5048621","","2018-10-15 11:44:27","2018-10-15 11:44:27","","","","0","","",""
"52936650","2","","38713405","2018-10-22 19:39:57","","0","","<p>In my case, I also had to set <code>workbench.editor.showTabs</code> property to true (in addition to <code>workbench.editor.enablePreview</code>)</p>

<p>I'm not sure how it got changed to false. Maybe, I've accidentally set it to false using some shortcut.</p>
","1328513","","","","","2018-10-22 19:39:57","","","","0","","",""
"53069926","2","","5767325","2018-10-30 17:37:42","","11","","<p>I wanna answer based on <strong><code>ES6</code></strong>. Assume, you have an array like below:</p>

<pre><code>let arr = [1,2,3,4];
</code></pre>

<p>If you wanna delete special index like <code>2</code>, write below code:</p>

<pre><code>arr.splice(2, 1); //=&gt; arr became [1,2,4]
</code></pre>

<p>But if you wanna delete a special item like <code>3</code> and you don't know its index do like below:</p>

<pre><code>arr = arr.filter(e =&gt; e !== 3); //=&gt; arr became [1,2,4]
</code></pre>

<p><strong>Hint</strong>: please use an arrow function for filter callback unless you will get an empty array.</p>
","6877799","","4298200","","2019-02-24 12:06:30","2019-02-24 12:06:30","","","","4","","",""
"53310834","2","","38713405","2018-11-15 00:35:52","","3","","<p>Open in new Tab Solution:</p>

<ol>
<li>Open the command palette by: <kbd>Cmd</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd></li>
<li>Open settings file by: <em>Preferences: Open Settings (JSON)</em></li>
<li>Under user setting, enable Tabs by: <code>""workbench.editor.showTabs"": true</code></li>
</ol>
","10418649","","2631715","","2019-02-14 01:35:15","2019-02-14 01:35:15","","","","0","","",""
"53421240","2","","45945820","2018-11-21 22:20:16","","6","","<p>If you would rather open the file directly from Quick Open (skipping the preview mode altogether), you can change this in the settings or add this to <code>settings.json</code>:</p>

<pre class=""lang-json prettyprint-override""><code>""workbench.editor.enablePreviewFromQuickOpen"": false
</code></pre>

<p>If you want to disable previews for other means of opening files (like the project explorer), this will do the trick:</p>

<pre class=""lang-json prettyprint-override""><code>""workbench.editor.enablePreview"": false
</code></pre>
","4176104","","2631715","","2019-02-02 11:22:38","2019-02-02 11:22:38","","","","0","","",""
"53616059","2","","35181340","2018-12-04 15:17:46","","2","","<p>In Rails 5 you can also create a new class with <a href=""https://api.rubyonrails.org/classes/ActionController/API.html"" rel=""nofollow noreferrer"">::API</a> instead of ::Base:</p>

<pre><code>class ApiController &lt; ActionController::API
end
</code></pre>
","1296209","","","","","2018-12-04 15:17:46","","","","0","","",""
"53992136","2","","5767325","2018-12-31 23:33:27","","0","","<pre><code>var arr =[1,2,3,4,5];

arr.splice(0,1)

console.log(arr)
</code></pre>

<p>Output     [2, 3, 4, 5];</p>
","9543626","","2370483","","2019-01-01 00:56:00","2019-01-01 00:56:00","","","","0","","",""
"54192077","2","","37909134","2019-01-15 02:48:51","","1","","<p>If this doesn't work for you <code>{' '}</code> then use <code>{'\u00A0'}</code>.</p>

<p><code>{' '}</code> will render a space but there are some cases when you want the line height to also be rendered in a case there you want a space inside an HTML element that has no other text ie: <code>&lt;span style={{ lineHeight: '1em' }}&gt;{' '}&lt;/span&gt;</code>, in that case you'll need to use <code>{'\u00A0'}</code> inside the span or HTML element.</p>
","4946857","","","","","2019-01-15 02:48:51","","","","0","","",""
"54301355","2","","2831059","2019-01-22 04:36:09","","1","","<h2>Clear &amp; Simple Instructions for Rails 5.2</h2>

<p><strong>WARNING: You will lose data if you remove a column from your database</strong>. To proceed, see below:</p>

<hr>

<h1>1. Create a migration</h1>

<ul>
<li><strong>Run</strong> the following command in your terminal: </li>
</ul>

<p><code>rails generate migration remove_fieldname_from_tablename fieldname:string</code></p>

<ul>
<li>Note: the table name should be in plural form as per rails convention.</li>
</ul>

<p><strong>Example:</strong></p>

<ul>
<li>In my case I want to remove the <code>accepted</code> column (a boolean value) from the <code>quotes</code> table: </li>
</ul>

<p><code>rails g migration RemoveAcceptedFromQuotes accepted:boolean</code></p>

<ul>
<li><a href=""https://api.rubyonrails.org/classes/ActiveRecord/Migration.html"" rel=""nofollow noreferrer"">See the documentation</a> re: a convention when adding/removing fields to a table: </li>
</ul>

<blockquote>
  <p>There is a special syntactic shortcut to generate migrations that add
  fields to a table.</p>
  
  <p>rails generate migration add_fieldname_to_tablename fieldname:string</p>
</blockquote>

<h2>2. Check the migration</h2>

<pre><code># db/migrate/20190122035000_remove_accepted_from_quotes.rb
class RemoveAcceptedFromQuotes &lt; ActiveRecord::Migration[5.2]
  # with rails 5.2 you don't need to add a separate ""up"" and ""down"" method.
  def change
    remove_column :quotes, :accepted, :boolean
  end
end
</code></pre>

<h2>3. Run the migration</h2>

<p><code>rake db:migrate</code></p>

<p>....And then you're off to the races!</p>
","4880924","","4880924","","2019-03-07 10:59:58","2019-03-07 10:59:58","","","","0","","",""
"54390552","2","","5767325","2019-01-27 16:55:52","","1","","<p>To remove particular element or subsequent elements, <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"" rel=""nofollow noreferrer"">Array.splice()</a> method works well.
The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements and it returns the removed item(s).</p>

<p><strong>Syntax:</strong> <em>array.splice(index, deleteCount, item1, ....., itemX)</em></p>

<p>Here <code>index</code> is mandatory and rest arguments are optional.</p>

<p>For example:</p>

<pre><code>let arr = [1, 2, 3, 4, 5, 6];
arr.splice(2,1);
console.log(arr);
// [1, 2, 4, 5, 6]
</code></pre>

<p><strong>Note:</strong> <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"" rel=""nofollow noreferrer"">Array.splice()</a> method can be used if you know the index of the element which you want to delete. But we may have a few more cases as mentioned below-</p>

<ol>
<li><p>In case you want to delete just last element, you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop"" rel=""nofollow noreferrer"">Array.pop()</a></p></li>
<li><p>In case you want to delete just first element, you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift"" rel=""nofollow noreferrer"">Array.shift()</a></p></li>
<li><p>If you know the element alone but not the position(or index) of the element, and want to delete all matching elements using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"" rel=""nofollow noreferrer"">Array.filter()</a> method:</p>

<pre><code>let arr = [1, 2, 1, 3, 4, 1, 5, 1];

let newArr = arr.filter(function(val){
    return val !== 1;
 });
 //newArr =&gt; [2, 3, 4, 5]
</code></pre></li>
</ol>

<p>OR by using splice() method as-</p>

<pre><code>let arr = [1, 11, 2, 11, 3, 4, 5, 11, 6, 11];
    for( let i = 0; i &lt; arr.length-1; i++){
       if ( arr[i] === 11) {
         arr.splice(i, 1); 
       }
    }
    console.log(arr);
    // [1, 2, 3, 4, 5, 6]
</code></pre>

<p>OR
suppose we want to delete <code>del</code> from the Array arr:</p>

<pre><code>let arr = [1, 2, 3, 4, 5, 6];
let del = 4;
if(arr.indexOf(4) &gt;= 0) {
arr.splice(arr.indexOf(4), 1)
}
</code></pre>

<p>OR</p>

<pre><code>let del = 4;
for(var i = arr.length - 1; i &gt;= 0; i--) {
    if(arr[i] === del) {
       arr.splice(i, 1);
    }
}
</code></pre>

<ol start=""4"">
<li><p>If you know the element alone but not the position(or index) of the element, and want to delete just very first matching element using splice() method:</p>

<pre><code>let arr = [1, 11, 2, 11, 3, 4, 5, 11, 6, 11];

for( let i = 0; i &lt; arr.length-1; i++){
  if ( arr[i] === 11) {
    arr.splice(i, 1);
    break;
  }
}
console.log(arr);
// [1, 11, 2, 11, 3, 4, 5, 11, 6, 11]
</code></pre></li>
</ol>
","8958729","","2664350","","2019-02-05 10:20:09","2019-02-05 10:20:09","","","","1","","",""
"54400256","2","","5767325","2019-01-28 10:47:18","","0","","<p>The <strong>splice()</strong> method changes the contents of an array by removing or replacing existing elements and/or adding new elements.</p>

<p><strong>array.splice(start[, deleteCount[, item1[, item2[, ...]]]])</strong></p>

<p><strong>start</strong></p>

<p>Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.</p>

<p><strong>deleteCount Optional</strong></p>

<p>An integer indicating the number of old array elements to remove.
If deleteCount is omitted, or if its value is larger than array.length - start (that is, if it is greater than the number of elements left in the array, starting at start), then all of the elements from start through the end of the array will be deleted.
If deleteCount is 0 or negative, no elements are removed. In this case, you should specify at least one new element (see below).</p>

<p><strong>item1, item2, ... Optional</strong></p>

<p>The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.</p>

<p><strong>For more referene kindly go through :</strong></p>

<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice</a></p>
","10943108","","","","","2019-01-28 10:47:18","","","","0","","",""
"54408474","2","","20824558","2019-01-28 18:52:10","","1","","<p>Parenthesis are used for two purposes in a return statement.</p>

<ul>
<li>To support multi-line expression as mentioned in @Andru Answer.</li>
<li>To allow returning object in arrow function like the below:</li>
</ul>

<p><code>() =&gt; ({ name: 'Amanda' })  // Shorthand to return an object</code></p>

<p>This is equivalent to</p>

<pre><code>() =&gt; {
 return { name : 'Amanda' }
}
</code></pre>

<p>For more information, please check this article.
<a href=""https://medium.com/@leannezhang/curly-braces-versus-parenthesis-in-reactjs-4d3ffd33128f"" rel=""nofollow noreferrer"">https://medium.com/@leannezhang/curly-braces-versus-parenthesis-in-reactjs-4d3ffd33128f</a></p>
","1003154","","1003154","","2019-01-29 06:50:16","2019-01-29 06:50:16","","","","1","","",""
"54485712","2","","37909134","2019-02-01 19:04:00","","1","","<p><code>{'\u00A0'}</code> works but is hard to read, so I wrapped it in a <a href=""https://reactjs.org/docs/components-and-props.html"" rel=""nofollow noreferrer"">function component</a>:</p>

<p>components/nbsp.js:</p>

<pre><code>export default () =&gt; '\u00A0';
</code></pre>

<p>usage:</p>

<pre><code>Hello&lt;Nbsp /&gt;world

</code></pre>
","1033615","","","","","2019-02-01 19:04:00","","","","0","","",""
"54494086","2","","5767325","2019-02-02 14:41:59","","0","","<p>Taking profit of reduce method as following:</p>

<p>case a) if u need to remove element by index:</p>

<pre><code>function remove(arr, index) {
  return arr.reduce((prev, x, i) =&gt; prev.concat(i !== index ? [x] : []), []);
}
</code></pre>

<p>case b) if u need to remove element by the value of the element (int):</p>

<pre><code>function remove(arr, value) {
  return arr.reduce((prev, x, i) =&gt; prev.concat(x !== value ? [x] : []), []);
}
</code></pre>

<p>So at this way we can return a new array (will be a cool functional way - more much better than use push or splice) with the element removed.</p>
","10686697","","","","","2019-02-02 14:41:59","","","","0","","",""
"54528216","2","","5767325","2019-02-05 05:34:45","","1","","<p><strong>Splice, filter and delete to remove element from array</strong></p>

<p>Every array have their index and it helps to delete particular element with their index.</p>

<p><strong><em>The splice() method</em></strong> </p>

<p>array.splice(index, <strong>1</strong>);
1st parameter is index and second is the number of element you</p>

<p>want to delete from that index.</p>

<p>So for single element we use 1. </p>

<p><strong><em>The delete method</em></strong></p>

<p>delete array[index]</p>

<p><strong><em>The filter() method</em></strong></p>

<p>If you want to delete element which is repeated in array then filter the array.</p>

<p>removeAll =array.filter( e=> e != elem );</p>

<p>where elem is the element you want to remove from array and array is your array name</p>
","10943108","","10943108","","2019-02-05 05:41:20","2019-02-05 05:41:20","","","","0","","",""
"54033894","2","","2831059","2019-01-04 06:16:01","","0","","<p>Simply, You can remove column</p>

<pre><code>remove_column :table_name, :column_name
</code></pre>

<p>For Example,</p>

<pre><code>remove_column :posts, :comment
</code></pre>
","10814922","","","","","2019-01-04 06:16:01","","","","0","","",""
"53940338","2","","38713405","2018-12-27 05:52:29","","2","","<p>You can do it via GUI</p>

<p><a href=""https://i.stack.imgur.com/eT0HJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eT0HJ.png"" alt=""enter image description here""></a></p>

<p>Search for <strong>preview</strong></p>

<p><a href=""https://i.stack.imgur.com/kJzIX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/kJzIX.png"" alt=""enter image description here""></a></p>

<p>uncheck the options <code>Enable Preview</code> and <code>Enable Preview from Quick Open</code></p>
","3437900","","","","","2018-12-27 05:52:29","","","","0","","",""
"53757257","2","","35181340","2018-12-13 07:52:40","","0","","<p>If you want to exclude the sample controller's sample action</p>

<pre><code>class TestController &lt; ApplicationController
  protect_from_forgery :except =&gt; [:sample]

  def sample
　　　　　render json: @hogehoge
  end
end
</code></pre>

<p>You can to process requests from outside without any problems.</p>
","8305467","","","","","2018-12-13 07:52:40","","","","0","","",""
"52764156","2","","16191820","2018-10-11 15:47:01","","0","","<p>If a permission problem raises (like it happened to me), maybe you could try dropping all database tables like I did with rubymine (just open database tool window, select all tables and right-click -> drop), it should be similar with other IDEs. Some tables like sqlite_master and sqlite_sequence were conveniently ignored in the drop.</p>

<p>This allowed me to do </p>

<pre><code>rails db:migrate
</code></pre>

<p>and everything worked fine. Of course you loose all data!</p>
","5750078","","","","","2018-10-11 15:47:01","","","","0","","",""
"52197997","2","","11757537","2018-09-06 06:44:59","","2","","<p>I think it's quite late for this answer. Anyway hope this will help somebody in the future. 
I faced the problem positioning the cards in angular. There are cards displayed for array of events. If image width of the event is big for card, the image should be shown by cropping from two sides and height of 100 %. If image height is long, images' bottom part is cropped and width is 100 %. Here is my pure css solution for this:</p>

<p><a href=""https://i.stack.imgur.com/cNPxd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cNPxd.png"" alt=""enter image description here""></a></p>

<p><strong>HTML:</strong></p>

<pre><code> &lt;span class=""block clear img-card b-b b-light text-center"" [ngStyle]=""{'background-image' : 'url('+event.image+')'}""&gt;&lt;/span&gt;
</code></pre>

<p><strong>CSS</strong></p>

<pre><code>.img-card {
background-repeat: no-repeat;
background-size: cover;
background-position: 50% 50%;
width: 100%;
overflow: hidden;
}
</code></pre>
","5899688","","5899688","","2018-09-06 10:31:43","2018-09-06 10:31:43","","","","2","","",""
"48802631","2","","5767325","2018-02-15 08:14:46","","2","","<pre><code>var array = [2, 5, 9];
array.splice(array.findIndex(x =&gt; x==5), 1);
</code></pre>

<p>Using Array.findindex, we can reduce the number of lines of code.</p>

<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex"" rel=""nofollow noreferrer"">developer.mozilla.org</a></p>
","4870441","","1402846","","2018-02-15 08:39:39","2018-02-15 08:39:39","","","","1","","",""
"46406733","2","","2373074","2017-09-25 13:43:14","","0","","<p>I'm newbie here but I use single quote mark only when I use double quote mark inside the first one. If I'm not clear I show You example:</p>

<pre><code>&lt;p align=""center"" title='One quote mark at the beginning so now I can
""cite"".'&gt; ... &lt;/p&gt;
</code></pre>

<p>I hope I helped.</p>
","8670283","","","","","2017-09-25 13:43:14","","","","0","","",""
"46056858","2","","17073808","2017-09-05 13:58:26","","0","","<p>You can just go to the folder after some change do:</p>

<pre><code>git add .
git commit -m 'mssg' 
</code></pre>

<p>and go back and push it:</p>

<pre><code>git push origin master
</code></pre>
","7257848","","7311767","","2017-09-05 14:18:38","2017-09-05 14:18:38","","","","1","","",""
"46040808","2","","46040733","2017-09-04 16:08:59","","11","","<p>You can, but you should propagate the prop to the inner component. If not, it doesn't know about it.</p>

<pre><code>class SimpleComponent extends React.Component
{
    render() { return &lt;p className={this.props.className}&gt;Some text&lt;/p&gt; }
}
</code></pre>

<p>To make the CSS query you want to accomplish, then you should create the <code>div</code> inside your component.</p>

<pre><code>class SimpleComponent extends React.Component
{
    render() { return &lt;div className={this.props.className}&gt;&lt;p&gt;Some text&lt;/p&gt;&lt;/div&gt; }
}
</code></pre>
","6254934","","6254934","","2017-09-04 16:24:16","2017-09-04 16:24:16","","","","2","","",""
"45793291","2","","2003505","2017-08-21 09:10:50","","10","","<p>I use the following in my Bash settings:</p>

<pre><code>alias git-shoot=""git push origin --delete""
</code></pre>

<p>Then you can call:</p>

<pre><code>git-shoot branchname
</code></pre>
","5542668","","7132340","","2017-09-08 14:27:15","2017-09-08 14:27:15","","","","0","","",""
"45431612","2","","38713405","2017-08-01 07:33:14","","79","","<p>I came up with the same problem, and open <em>setting.json</em> file, add the following:</p>

<pre><code>""workbench.editor.enablePreview"": false
</code></pre>
","8392555","","4423968","","2017-08-01 11:53:30","2017-08-01 11:53:30","","","","3","","",""
"44781228","2","","2003505","2017-06-27 13:13:15","","1139","","<h3>Steps for deleting a branch:</h3>

<p>for deleting the <strong>remote branch:</strong></p>

<pre><code>git push origin --delete &lt;your_branch&gt; 
</code></pre>

<p>for deleting the <strong>local branch</strong>, you have <strong>three ways</strong>:</p>

<pre><code>1: git branch -D &lt;branch_name&gt; 

2: git branch --delete --force &lt;branch_name&gt;  //same as -D

3: git branch --delete  &lt;branch_name&gt;         //error on unmerge
</code></pre>

<p><strong>Explain:</strong> OK, just explain what's going on here!</p>

<p>Simply do <code>git push origin --delete</code> to <strong>delete your remote branch ONLY</strong>, add the name of the branch at the end and this will delete and push it to remote at the same time...</p>

<p>Also, <code>git branch -D</code>, which simply delete the local branch <strong>ONLY</strong>!...</p>

<p><code>-D</code> stands for <code>--delete --force</code> which will delete the branch even it's not merged(force delete), but you can also use <code>-d</code> which stands for <code>--delete</code> which throw an error respective of the branch merge status...</p>

<p>I also create the image below to show the steps:</p>

<p><a href=""https://i.stack.imgur.com/AKWYx.jpg"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/AKWYx.jpg"" alt=""delete a remote and local branch in git""></a></p>
","5423108","","5423108","","2018-12-13 18:17:55","2018-12-13 18:17:55","","","","2","","",""
"44211041","2","","27722872","2017-05-26 22:41:45","","4","","<p>Pretty late and not sure if this was available when the question was asked, set <code>width: auto;</code></p>

<p>Seems to do the trick</p>
","7246291","","7351543","","2017-05-27 02:06:50","2017-05-27 02:06:50","","","","0","","",""
"43353349","2","","4834809","2017-04-11 18:12:43","","1","","<p>You can also force to table columns in table using <code>force: true</code>, if you table is already exist.</p>

<p><strong>example</strong>:</p>

<pre><code>ActiveRecord::Schema.define(version: 20080906171750) do
  create_table ""authors"", force: true do |t|
    t.string   ""name""
    t.datetime ""created_at""
    t.datetime ""updated_at""
  end
end
</code></pre>
","3058254","","","","","2017-04-11 18:12:43","","","","0","","",""
"41984610","2","","9461621","2017-02-01 16:19:55","","9","","<h1>Give Credit to Waylon Flinn if you like this</h1>

<p>This was improved from his more elegant approach to handle negative numbers and "".0"" case.</p>

<p>The fewer loops and ""if"" cases you have, the better IMO.</p>

<pre><code>function abbreviateNumber(number) {
    var SI_POSTFIXES = ["""", ""k"", ""M"", ""G"", ""T"", ""P"", ""E""];
    var tier = Math.log10(Math.abs(number)) / 3 | 0;
    if(tier == 0) return number;
    var postfix = SI_POSTFIXES[tier];
    var scale = Math.pow(10, tier * 3);
    var scaled = number / scale;
    var formatted = scaled.toFixed(1) + '';
    if (/\.0$/.test(formatted))
      formatted = formatted.substr(0, formatted.length - 2);
    return formatted + postfix;
}
</code></pre>

<p>jsFiddle with test cases -> <a href=""https://jsfiddle.net/xyug4nvz/7/"" rel=""noreferrer"">https://jsfiddle.net/xyug4nvz/7/</a></p>
","775516","","775516","","2017-02-01 16:26:24","2017-02-01 16:26:24","","","","3","","",""
"40645071","2","","2003505","2016-11-17 01:03:56","","91","","<p><strong>One liner</strong> command delete <em>both local, and remote</em>:</p>

<p><code>D=branch-name; git branch -D $D; git push origin :$D</code></p>

<p>or add the alias below to your <em>~/.gitconfig</em>; usage: <code>git kill branch-name</code></p>

<pre><code>[alias]
    kill = ""!f(){ git branch -D \""$1\"";  git push origin --delete \""$1\""; };f""
</code></pre>
","1580610","","1580610","","2017-01-15 08:30:43","2017-01-15 08:30:43","","","","1","","",""
"38864125","2","","20824558","2016-08-10 04:16:40","","4","","<pre><code>// Create a component named MessageComponent
var MessageComponent = React.createClass({
  render: function() {
    return (
      &lt;div&gt;{this.props.message}&lt;/div&gt;
    );
  }
});
</code></pre>

<blockquote>
  <p>NOTE Why do we need the parentheses around the return statement (line
  3)? This is because of JavaScript's automatic semicolon insertion.
  Without the parentheses, JavaScript would ignore the following lines
  and return without a value. If the JSX starts on the same line as the
  return, then parentheses are not needed.</p>
</blockquote>

<p>Taken from <a href=""http://buildwithreact.com/tutorial/components"" rel=""nofollow"">here</a>.</p>
","1561922","","","","","2016-08-10 04:16:40","","","","0","","",""
"38235136","2","","4834809","2016-07-06 22:57:43","","18","","<p>To add a column I just had to follow these steps :  </p>

<ol>
<li><p><code>rails generate migration add_fieldname_to_tablename fieldname:string</code></p>

<p><strong>Alternative</strong></p>

<p><code>rails generate migration addFieldnameToTablename</code></p>

<p>Once the migration is generated, then edit the migration and define all the attributes you want that column added to have.</p>

<p><strong>Note</strong>: Table names in Rails are always plural (to match DB conventions). <strong><em>Example using one of the steps mentioned previously-</em></strong> </p>

<p><code>rails generate migration addEmailToUsers</code></p></li>
<li><p><code>rake db:migrate</code></p></li>
</ol>

<p>Or </p>

<ol>
<li>You can change the schema in from <code>db/schema.rb</code>, Add the columns you want in the SQL query.  </li>
<li><p>Run this command: <code>rake db:schema:load</code></p>

<p><strong>Warning/Note</strong></p>

<p>Bear in mind that, running <code>rake db:schema:load</code> automatically wipes all data in your tables.</p></li>
</ol>
","4731827","","5614748","","2016-08-09 22:33:43","2016-08-09 22:33:43","","","","3","","",""
"38223725","2","","5340724","2016-07-06 12:12:22","","5","","<p>For me, I had changes already in place and I wanted the latest from the base branch.  I was unable to do <code>rebase</code>, and <code>cherry-pick</code> would have taken forever, so I did the following:</p>

<pre><code>git fetch origin &lt;base branch name&gt;  
git merge FETCH_HEAD
</code></pre>

<p>so in this case:</p>

<pre><code>git fetch origin master  
git merge FETCH_HEAD
</code></pre>
","1958461","","","","","2016-07-06 12:12:22","","","","0","","",""
"37909656","2","","37909134","2016-06-19 16:57:18","","12","","<p>Write your <code>jsx</code> code wrapped in <code>{</code> <code>}</code> as shown below.</p>

<pre><code>&lt;h1&gt;Code {' '}&lt;/h1&gt;
</code></pre>

<p>You can put space or any special character here.</p>

<p>e.g in your case</p>

<pre><code>Select Takeout Scenario:&amp;nbsp;
</code></pre>

<p>should be like this</p>

<pre><code>Select Takeout Scenario:{' '}
</code></pre>

<p>It will work.</p>

<p>As Advice you should not use <code>&amp;nbsp</code> to add extra space, you can use <strong>css</strong> to achieve same.</p>
","1745409","","1745409","","2016-06-19 17:04:02","2016-06-19 17:04:02","","","","4","","",""
"37909363","2","","37909134","2016-06-19 16:24:15","","87","","<p>See: <a href=""https://facebook.github.io/react/docs/jsx-gotchas.html"" rel=""noreferrer"">https://facebook.github.io/react/docs/jsx-gotchas.html</a></p>

<p>Try: 
<code>Select Scenario:{'\u00A0'}</code></p>

<p>Or:
<code>&lt;div dangerouslySetInnerHTML={{__html: 'Select Scenario: &amp;nbsp;'}} /&gt;</code></p>

<p>Or:
<code>&lt;div&gt;&amp;nbsp;&lt;/div&gt;</code></p>

<p><a href=""https://jsfiddle.net/omerts/b4st33nw/"" rel=""noreferrer"">https://jsfiddle.net/omerts/b4st33nw/</a></p>

<h2>Update</h2>

<p>After seeing some of the comments, and trying it out. It has come to my attention that using html entites inside JSX works fine (unlike what is stated in the above jsx-gotchas reference [maybe it's outdated]).</p>

<p>So using something like: <code>R&amp;amp;D</code>, would output: 'R&amp;D'. 
There is a weird behavior with <code>&amp;nbsp;</code>, which causes it to render differently, thus causing me to think it doesn't work:</p>

<pre><code>&lt;div&gt;This works simply:-&amp;nbsp;-&lt;/div&gt;
&lt;div&gt;This works simply:- {'\u00A0'}-&lt;/div&gt;
</code></pre>

<p>Produces:</p>

<pre><code>This works simply:- -
This works simply:-  -
</code></pre>
","1415921","","147562","","2017-11-02 18:01:51","2017-11-02 18:01:51","","","","12","","",""
"37415183","2","","3047056","2016-05-24 13:31:48","","9","","<p>In addition to the above answer I also want to highlight a case of striked out property which really surprised me.</p>

<p>If you are adding a background image to a div :</p>

<pre><code>&lt;div class = ""myBackground""&gt;

&lt;/div&gt;
</code></pre>

<p>You want to scale the image to fit in the dimensions of the div so this would be your normal class definition.</p>

<pre><code>.myBackground {

 height:100px;
 width:100px;
 background: url(""/img/bck/myImage.jpg"") no-repeat; 
 background-size: contain;

}
</code></pre>

<p>but if you interchange the order as :-</p>

<pre><code>.myBackground {
 height:100px;
 width:100px;
 background-size: contain;  //before the background
 background: url(""/img/bck/myImage.jpg"") no-repeat; 
}
</code></pre>

<p>then in chrome you ll see <strong>background-size</strong> as striked out.
I am not sure why this is , but yeah you dont want to mess with it.</p>
","2427266","","","","","2016-05-24 13:31:48","","","","0","","",""
"37093205","2","","5767325","2016-05-07 20:10:59","","9","","<p>I think many of the JavaScript instructions are not well thought out for functional programming. Splice returns the deleted element where most of the time you need the reduced array. This is bad.</p>

<p>Imagine you are doing a recursive call and have to pass an array with one less item, probably without the current indexed item. Or imagine you are doing another recursive call and has to pass an array with an element pushed.</p>

<p>In neither of these cases you can do <code>myRecursiveFunction(myArr.push(c))</code> or <code>myRecursiveFunction(myArr.splice(i,1))</code>. The first idiot will in fact pass the length of the array and the second idiot will pass the deleted element as a parameter.</p>

<p>So what I do in fact... For deleting an array element and passing the resulting to a function as a parameter at the same time I do as follows</p>

<pre><code>myRecursiveFunction(myArr.slice(0,i).concat(a.slice(i+1)))
</code></pre>

<p>When it comes to push that's more silly... I do like,</p>

<pre><code>myRecursiveFunction((myArr.push(c),myArr))
</code></pre>

<p>I believe in a proper functional language a method mutating the object it's called upon must return a reference to the very object as a result.</p>
","4543207","","63550","","2016-06-25 12:59:03","2016-06-25 12:59:03","","","","0","","",""
"36837818","2","","5767325","2016-04-25 10:21:25","","18","","<p>A more modern, <a href=""https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015"">ECMAScript 2015</a> (formerly known as Harmony or ES&nbsp;6) approach. Given:</p>

<pre><code>const items = [1, 2, 3, 4];
const index = 2;
</code></pre>

<p>Then:</p>

<pre><code>items.filter((x, i) =&gt; i !== index);
</code></pre>

<p>Yielding: </p>

<pre><code>[1, 2, 4]
</code></pre>

<p>You can use <a href=""https://babeljs.io/"">Babel</a> and a <a href=""http://cdn.polyfill.io/v2/docs/"">polyfill service</a> to ensure this is well supported across browsers.</p>
","722180","","63550","","2016-06-25 13:01:46","2016-06-25 13:01:46","","","","5","","",""
"36775924","2","","2003505","2016-04-21 16:49:36","","44","","<pre><code>git push origin :bugfix  # Deletes remote branch
git branch -d bugfix     # Must delete local branch manually
</code></pre>

<p>If you are sure you want to delete it, run </p>

<pre><code>git branch -D bugfix
</code></pre>

<p>Now to clean up deleted remote branches run</p>

<pre><code>git remote prune origin
</code></pre>
","1850723","","","","","2016-04-21 16:49:36","","","","0","","",""
"36683787","2","","2831059","2016-04-18 00:37:29","","4","","<p><code>remove_column</code> in <code>change</code> method will help you to delete the column from the table.</p>

<pre><code>class RemoveColumn &lt; ActiveRecord::Migration
  def change
    remove_column :table_name, :column_name, :data_type
  end
end
</code></pre>

<p>Go on this link for complete reference : <a href=""http://guides.rubyonrails.org/active_record_migrations.html"" rel=""nofollow"">http://guides.rubyonrails.org/active_record_migrations.html</a></p>
","5282616","","","","","2016-04-18 00:37:29","","","","0","","",""
"35184796","2","","35181340","2016-02-03 18:26:16","","68","","<p>Cross site reference forgery is when a malicious web page tricks users into performing a request that is not intended for example by using bookmarklets, iframes or just by creating a page which is visually similar enough to fool users.</p>

<p>The <a href=""http://guides.rubyonrails.org/security.html#cross-site-request-forgery-csrf"" rel=""noreferrer"">Rails CSRF protection</a> is made for  ""classical"" web apps - it simply gives a degree of assurance that the request originated from your own web app. A CSRF token works like a secret that only your server knows - Rails generates a random token and stores it in the session. Your forms send the token via a hidden input and Rails verifies that any non GET request includes a token that matches what is stored in the session.</p>

<p>However an API is usually by definition cross site and meant to be used in more than your web app, which means that the whole concept of CSRF does not quite apply.</p>

<p>Instead you should use a token based strategy of authenticating API requests with an API key and secret since you are verifying that the request comes from an approved API client - not from your own app.</p>

<p>You can deactivate CSRF as pointed out by @dcestari:</p>

<pre><code>class ApiController &lt; ActionController::Base
  protect_from_forgery with: :null_session
end
</code></pre>

<p><strong>Updated.</strong> In Rails 5 you can generate API only applications by using the <code>--api</code> option: </p>

<pre><code>rails new appname --api
</code></pre>

<p>They do not include the CSRF middleware and many other components that are superflouus. </p>

<ul>
<li><a href=""http://guides.rubyonrails.org/security.html#cross-site-request-forgery-csrf"" rel=""noreferrer"">http://guides.rubyonrails.org/security.html#cross-site-request-forgery-csrf</a></li>
<li><a href=""https://labs.kollegorna.se/blog/2015/04/build-an-api-now/"" rel=""noreferrer"">https://labs.kollegorna.se/blog/2015/04/build-an-api-now/</a></li>
<li><a href=""https://stackoverflow.com/questions/7203304/warning-cant-verify-csrf-token-authenticity-rails"">WARNING: Can&#39;t verify CSRF token authenticity rails</a></li>
</ul>
","544825","","544825","","2018-02-01 15:24:36","2018-02-01 15:24:36","","","","3","","",""
"35125518","2","","9529300","2016-02-01 07:59:35","","5","","<p>I came across an amazing resource on css-tricks: <a href=""https://css-tricks.com/using-svg/"" rel=""noreferrer"">https://css-tricks.com/using-svg/</a></p>

<p>There are a handful of solutions explained there. </p>

<p>I preferred the one that required minimal edits to the source svg, and also didn't require it to be embedded into the html document. This option utilizes the <code>&lt;object&gt;</code> tag.</p>

<hr>

<p>Add the svg file into your html using <code>&lt;object&gt;</code>; I also declared html attributes <code>width</code> and <code>height</code>. Using these width and heights the svg document does not get scaled, I worked around that using a css <code>transform: scale(...)</code> statement for the <code>svg</code> tag in my associated svg css file.</p>

<pre><code>&lt;object type=""image/svg+xml"" data=""myfile.svg"" width=""64"" height=""64""&gt;&lt;/object&gt;
</code></pre>

<p>Create a css file to attach to your svn document. My source svg path was scaled to 16px, I upscaled it to 64 with a factor of four. It only had one path so I did not need to select it more specifically, however the path had a fill attribute so I had to use <code>!IMPORTANT</code> to force the css to take precedent.</p>

<pre><code>#svg2 {
    width: 64px; height: 64px;
    transform: scale(4);
}
path {
    fill: #333 !IMPORTANT;
}
</code></pre>

<p>Edit your target svg file, before the opening <code>&lt;svg</code> tag, to include a stylesheet; Note that the href is relative to the svg file url. </p>

<pre><code>&lt;?xml-stylesheet type=""text/css"" href=""myfile.css"" ?&gt;
</code></pre>
","1695680","","","","","2016-02-01 07:59:35","","","","0","","",""
"30114712","2","","2373074","2015-05-08 02:12:53","","4","","<p>I know <strong>LOTS</strong> of people wouldn't agree, but this is what I do and I really enjoy such a coding style: I actually don't use any quote in HTML unless it is absolutely necessary.</p>

<p>Example:</p>

<pre><code>&lt;form method=post action=#&gt;
&lt;fieldset&gt;
&lt;legend&gt;Register here: &lt;/legend&gt;
  &lt;label for=account&gt;Account: &lt;/label&gt;
  &lt;input id=account type=text name=account required&gt;&lt;br&gt;
  &lt;label for=password&gt;Password: &lt;/label&gt;
  &lt;input id=password type=password name=password required&gt;&lt;br&gt;
...
</code></pre>

<p>Double quotes are used only when there are spaces in the attribute values or whatever:</p>

<pre><code>&lt;form class=""val1 val2 val3"" method=post action=#&gt;
  ...
&lt;/form&gt;
</code></pre>
","1802305","","1802305","","2015-05-10 06:40:02","2015-05-10 06:40:02","","","","12","","",""
"30001477","2","","2003505","2015-05-02 10:59:40","","77","","<pre><code>git push origin --delete &lt;branch Name&gt;
</code></pre>

<p>is easier to remember than</p>

<pre><code>git push origin :branchName
</code></pre>
","4845054","","4248328","","2018-12-13 04:44:45","2018-12-13 04:44:45","","","","0","","",""
"28608086","2","","9461621","2015-02-19 13:50:08","","17","","<pre><code>/**
 * Shorten number to thousands, millions, billions, etc.
 * http://en.wikipedia.org/wiki/Metric_prefix
 *
 * @param {number} num Number to shorten.
 * @param {number} [digits=0] The number of digits to appear after the decimal point.
 * @returns {string|number}
 *
 * @example
 * // returns '12.5k'
 * shortenLargeNumber(12543, 1)
 *
 * @example
 * // returns '-13k'
 * shortenLargeNumber(-12567)
 *
 * @example
 * // returns '51M'
 * shortenLargeNumber(51000000)
 *
 * @example
 * // returns 651
 * shortenLargeNumber(651)
 *
 * @example
 * // returns 0.12345
 * shortenLargeNumber(0.12345)
 */
function shortenLargeNumber(num, digits) {
    var units = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'],
        decimal;

    for(var i=units.length-1; i&gt;=0; i--) {
        decimal = Math.pow(1000, i+1);

        if(num &lt;= -decimal || num &gt;= decimal) {
            return +(num / decimal).toFixed(digits) + units[i];
        }
    }

    return num;
}
</code></pre>

<p>Thx @Cos for comment, I removed Math.round10 dependency.</p>
","3147680","","3147680","","2015-03-22 11:57:53","2015-03-22 11:57:53","","","","2","","",""
"27722954","2","","27722872","2014-12-31 15:18:07","","0","","<p>Try to add <code>display:inline;</code> to the CSS property of a button.</p>
","4392249","","","","","2014-12-31 15:18:07","","","","0","","",""
"27722921","2","","27722872","2014-12-31 15:16:09","","22","","<p>Remove the width and <code>display: block</code> and then add <code>display: inline-block</code> to the button. To have it remain centered you can either add <code>text-align: center;</code> on the <code>body</code> or do the same on a newly created container. </p>

<p>The advantage of this approach (as opossed to centering with auto margins) is that the button will remain centered regardless of how much text it has.</p>

<p>Example: <a href=""http://cssdeck.com/labs/2u4kf6dv"" rel=""noreferrer"">http://cssdeck.com/labs/2u4kf6dv</a></p>
","3016063","","","","","2014-12-31 15:16:09","","","","2","","",""
"27289644","2","","2373074","2014-12-04 08:47:24","","2","","<p>I have had an issue using Bootstrap where using double quotes did matter vs using single quote (which didn't work). class='row-fluid' gave me issues causing the last span to fall below the other spans rather than sitting nicely beside on the far right, whereas class=""row-fluid"" worked.</p>
","1495747","","","","","2014-12-04 08:47:24","","","","0","","",""
"27194474","2","","20824558","2014-11-28 18:48:23","","0","","<p>This may be old but the <code>return ()</code> can be used in this way:</p>

<pre><code>function parseQueryString(req, res, next) {
            var id = req.param('id');
            return (id ? ""Foo"" : ""Bar"");
}
</code></pre>

<p>Less code, easy to read :)</p>
","2898754","","","","","2014-11-28 18:48:23","","","","2","","",""
"27157553","2","","5767325","2014-11-26 19:39:24","","1","","<p>If you must support older versions of Internet&nbsp;Explorer, I recommend using the following polyfill (note: this is <strong>not</strong> a framework). It's a 100% backwards-compatible replacement of all modern array methods (JavaScript 1.8.5 / ECMAScript 5 Array Extras) that works for Internet Explorer 6+, Firefox 1.5+, Chrome, Safari, &amp; Opera.</p>

<p><a href=""https://github.com/plusdude/array-generics"" rel=""nofollow"">https://github.com/plusdude/array-generics</a></p>
","313969","","63550","","2015-07-11 09:50:20","2015-07-11 09:50:20","","","","2","","",""
"27154917","2","","2373074","2014-11-26 17:05:15","","22","","<h1>Quoting Conventions for Web Developers</h1>

<h2>The Short Answer</h2>

<p>In HTML the use of single quotes (') and double quotes ("") are interchangeable, there is no difference.</p>

<p>But consistency is recommended, therefore we must pick a syntax convention and use it regularly.</p>

<h2>The Long Answer</h2>

<p><strong>Web Development</strong> often consists of many programming languages. HTML, JS, CSS, PHP, ASP, RoR, Python, ect. Because of this we have many syntax conventions for different programing languages. Often habbits from one language will follow us to other languages, even if it is not considered ""proper"" i.e. commenting conventions. Quoting conventions also falls into this category for me.</p>

<p>But I tend to use HTML tightly in conjunction with PHP. And in PHP there is a <strong>major</strong> difference between single quotes and double quotes. In PHP with double quotes ""you can insert variables directly within the text of the string"". (scriptingok.com) And when using single quotes ""the text appears as it is"". (scriptingok.com)</p>

<blockquote>
  <p><strong>PHP takes longer to process double quoted strings</strong>. Since the PHP parser has to read the whole string in advance to detect any variable inside—and concatenate it—it takes longer to process than a single quoted string. (scriptingok.com)</p>
</blockquote>

<p>&nbsp;</p>

<blockquote>
  <p><strong>Single quotes are easier on the server</strong>. Since PHP does not need to read the whole string in advance, the server can work faster and happier. (scriptingok.com)</p>
</blockquote>

<p>Other things to consider</p>

<ol>
<li>Frequency of double quotes within string. I find that I need to use double quotes ("") within my strings more often than I need to use single quotes (') within strings. To reduce the number of character escapes needed I favor single quote delimiters.</li>
<li>It's easier to make a single quote. This is fairly self explanatory but to clarify, why press the SHIFT key more times then you have to.</li>
</ol>

<h2>My Convention</h2>

<p>With this understanding of PHP I have set the convention (for myself and the rest of my company) that strings are to be represented as single quotes by default for server optimization. Double quotes are used within the string if a quotes are required such as JavaScript within an attribute, for example:</p>

<p><code>&lt;button onClick='func(""param"");'&gt;Press Me&lt;/button&gt;</code></p>

<p>Of course if we are in PHP and want the parser to handle PHP variables within the string we should intentionally use double quotes. <code>$a='Awesome'; $b = ""Not $a"";</code></p>

<h2>Sources</h2>

<p>Single quotes vs Double quotes in PHP. (n.d.). Retrieved November 26, 2014, from <a href=""http://www.scriptingok.com/tutorial/Single-quotes-vs-double-quotes-in-PHP"">http://www.scriptingok.com/tutorial/Single-quotes-vs-double-quotes-in-PHP</a></p>
","2082141","","","","","2014-11-26 17:05:15","","","","4","","",""
"27038831","2","","7217894","2014-11-20 11:46:37","","31","","<p><strong>If you want to move the changes to a new branch</strong>, this can be done with only two commands:</p>

<pre><code>git stash
git stash branch new-branch
</code></pre>

<p>According to the <a href=""http://git-scm.com/docs/git-stash"">git stash documentation</a>:</p>

<blockquote>
  <p><strong>branch <code>&lt;branchname&gt; [&lt;stash&gt;]</code></strong></p>
  
  <p>Creates and checks out a new branch named <code>&lt;branchname&gt;</code> starting from
  the commit at which the <code>&lt;stash&gt;</code> was originally created, applies the
  changes recorded in  to the new working tree and index.</p>
</blockquote>
","2083587","","2083587","","2014-11-20 14:25:18","2014-11-20 14:25:18","","","","0","","",""
"26086639","2","","5209814","2014-09-28 15:48:48","","1","","<p>With multiple divs I managed to get a fixed-y and absolute-x divs.
In my case I needed a div on left and right sides, aligned to a centered 1180px width div.</p>

<pre><code>    &lt;div class=""parentdiv"" style=""
        background: transparent;
        margin: auto;
        width: 100%;
        max-width: 1220px;
        height: 10px;
        text-align: center;""&gt;
        &lt;div style=""
            position: fixed;
            width: 100%;
            max-width: 1220px;""&gt;
            &lt;div style=""
                position: absolute;
                background: black;
                height: 20px;
                width: 20px;
                left: 0;""&gt;
            &lt;/div&gt;
            &lt;div style=""
                width: 20px;
                height: 20px;
                background: blue;
                position: absolute;                                           
                right: 0;""&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre>
","4088609","","","","","2014-09-28 15:48:48","","","","0","","",""
"24420461","2","","5767325","2014-06-25 23:57:30","","2","","<pre><code>var index,
    input = [1,2,3],
    indexToRemove = 1;
    integers = [];

for (index in input) {
    if (input.hasOwnProperty(index)) {
        if (index !== indexToRemove) {
            integers.push(result); 
        }
    }
}
input = integers;
</code></pre>

<p>This solution will take an array of input and will search through the input for the value to remove.  This will loop through the entire input array and the result will be a second array integers that has had the specific index removed. The integers array is then copied back into the input array.  </p>
","3486572","","","","","2014-06-25 23:57:30","","","","1","","",""
"21141393","2","","5508119","2014-01-15 15:24:51","","4","","<pre><code>// array of $ids that you need to select
$ids = array('1', '2', '3', '4', '5', '6', '7', '8');

// create sql part for IN condition by imploding comma after each id
$in = '(' . implode(',', $ids) .')';

// create sql
$SQL = 'SELECT * FROM products WHERE catid IN ' . $in;

// see what you get
var_dump($sql);
</code></pre>
","2624626","","2624626","","2017-06-21 14:15:59","2017-06-21 14:15:59","","","","0","","",""
"19419704","2","","4834809","2013-10-17 06:29:10","","22","","<p>You can also do</p>

<pre><code>rake db:rollback
</code></pre>

<p>if you have not added any data to the tables.Then edit the migration file by adding the email column to it and then call </p>

<pre><code>rake db:migrate
</code></pre>

<p>This will work if you have rails 3.1 onwards installed in your system. </p>

<p>Much simpler way of doing it is change let the change in migration file be as it is.
use </p>

<pre><code>$rake db:migrate:redo
</code></pre>

<p>This will roll back the last migration and migrate it again.</p>
","2281583","","46914","","2018-11-05 16:53:38","2018-11-05 16:53:38","","","","0","","",""
"19244824","2","","5767325","2013-10-08 10:09:53","","10","","<p>I also ran in the situation where I had to remove an element from <code>Array</code>. <code>.indexOf</code> was not working in <code>IE*</code> so sharing my working <code>jQuery.inArray()</code> solution.</p>

<pre><code>var index = jQuery.inArray(val,arr);
if (index &gt; -1) {
    arr.splice(index, 1);
    //console.log(arr);
}
</code></pre>
","2825534","","","","","2013-10-08 10:09:53","","","","1","","",""
"19017234","2","","5767325","2013-09-26 00:12:44","","13","","<pre><code>  Array.prototype.removeItem = function(a) {
            for (i = 0; i &lt; this.length; i++) {
                if (this[i] == a) {
                    for (i2 = i; i2 &lt; this.length - 1; i2++) {
                        this[i2] = this[i2 + 1];
                    }
                    this.length = this.length - 1
                    return;
                }
            }
        }

    var recentMovies = ['Iron Man', 'Batman', 'Superman', 'Spiderman'];
    recentMovies.removeItem('Superman');
</code></pre>
","1473364","","","","","2013-09-26 00:12:44","","","","0","","",""
"18935076","2","","11556493","2013-09-21 16:43:10","","19","","<p>I second Dipaks' answer, but often just the text-indent is enough as you may/maynot be positioning the ul for better layout control.</p>

<pre><code>ul li{
text-indent: -1em;
}
</code></pre>
","2421667","","","","","2013-09-21 16:43:10","","","","0","","",""
"18885102","2","","5767325","2013-09-19 01:53:40","","88","","<p>There is no need to use <code>indexOf</code> or <code>splice</code>. However, it performs better if you only want to remove one occurrence of an element. </p>

<p><strong>Find and move (move):</strong></p>

<pre><code>function move(arr, val) {
  var j = 0;
  for (var i = 0, l = arr.length; i &lt; l; i++) {
    if (arr[i] !== val) {
      arr[j++] = arr[i];
    }
  }
  arr.length = j;
}
</code></pre>

<p><strong>Use <code>indexOf</code> and <code>splice</code> (indexof):</strong></p>

<pre><code>function indexof(arr, val) {
  var i;
  while ((i = arr.indexOf(val)) != -1) {
    arr.splice(i, 1);
  }
}
</code></pre>

<p><strong>Use only <code>splice</code> (splice):</strong></p>

<pre><code>function splice(arr, val) {
  for (var i = arr.length; i--;) {
    if (arr[i] === val) {
      arr.splice(i, 1);
    }
  }
}
</code></pre>

<p><strong>Run-times on nodejs for array with 1000 elements (average over 10000 runs):</strong></p>

<p><em>indexof</em> is approximately 10x slower than <em>move</em>. Even if improved by removing the call to <code>indexOf</code> in <em>splice</em> it performs much worse than <em>move</em>. </p>

<pre><code>Remove all occurrences:
    move 0.0048 ms
    indexof 0.0463 ms
    splice 0.0359 ms

Remove first occurrence:
    move_one 0.0041 ms
    indexof_one 0.0021 ms
</code></pre>
","49960","","49960","","2015-09-11 12:47:59","2015-09-11 12:47:59","","","","1","","",""
"18550696","2","","15482354","2013-08-31 17:09:45","","52","","<p>Rails adds the handy method <code>blank?</code> which checks for false, nil and empty strings as described <a href=""http://api.rubyonrails.org/classes/Object.html#method-i-blank-3F"" rel=""noreferrer"">here</a>.<br>
Rails also adds the handy validator <code>allow_blank: false</code>.  </p>

<p>So in your case it should be:</p>

<p><code>validates :body, presence: true, allow_blank: false</code></p>

<hr>

<p>Edit (original answer above):</p>

<p>As stated in the answer below, <code>allow_blank: false</code> is not needed as that's the default behaviour of <code>presence: true</code>.</p>
","56517","","56517","","2017-06-13 13:43:49","2017-06-13 13:43:49","","","","1","","",""
"18539905","2","","5767325","2013-08-30 19:07:00","","56","","<p>John Resig <a href=""http://ejohn.org/blog/javascript-array-remove/"" rel=""noreferrer"">posted a good implementation</a>:</p>

<pre><code>// Array Remove - By John Resig (MIT Licensed)
Array.prototype.remove = function(from, to) {
  var rest = this.slice((to || from) + 1 || this.length);
  this.length = from &lt; 0 ? this.length + from : from;
  return this.push.apply(this, rest);
};
</code></pre>

<p>If you don’t want to extend a global object, you can do something like the following, instead:</p>

<pre><code>// Array Remove - By John Resig (MIT Licensed)
Array.remove = function(array, from, to) {
    var rest = array.slice((to || from) + 1 || array.length);
    array.length = from &lt; 0 ? array.length + from : from;
    return array.push.apply(array, rest);
};
</code></pre>

<p>But the main reason I am posting this is to warn users against the alternative implementation suggested in the comments on that page (Dec 14, 2007):</p>

<pre><code>Array.prototype.remove = function(from, to){
  this.splice(from, (to=[0,from||1,++to-from][arguments.length])&lt;0?this.length+to:to);
  return this.length;
};
</code></pre>

<p>It seems to work well at first, but through a painful process I discovered it fails when trying to remove the second to last element in an array. For example, if you have a 10-element array and you try to remove the 9th element with this:</p>

<pre><code>myArray.remove(8);
</code></pre>

<p>You end up with an 8-element array. Don't know why but I confirmed John's original implementation doesn't have this problem.</p>
","591281","","896981","","2015-02-16 12:51:30","2015-02-16 12:51:30","","","","1","","",""
"18193533","2","","5767325","2013-08-12 17:56:39","","15","","<p>You can do a backward loop to make sure not to screw up the indexes, if there are multiple instances of the element.</p>

<pre><code>var myElement = ""chocolate"";
var myArray = ['chocolate', 'poptart', 'poptart', 'poptart', 'chocolate', 'poptart', 'poptart', 'chocolate'];

/* Important code */
for (var i = myArray.length - 1; i &gt;= 0; i--) {
    if (myArray[i] == myElement) myArray.splice(i, 1);
}
</code></pre>

<h2><a href=""http://jsfiddle.net/lun471k/7m6G9/"" rel=""noreferrer"">Live Demo</a></h2>
","1451422","","","","","2013-08-12 17:56:39","","","","0","","",""
"18165553","2","","5767325","2013-08-10 19:21:23","","251","","<p>A friend was having issues in <a href=""http://en.wikipedia.org/wiki/Internet_Explorer_8"" rel=""noreferrer"">Internet&nbsp;Explorer&nbsp;8</a>, and showed me what he did. I told him it was wrong, and he told me he got the answer here. The current top answer will not work in all browsers (Internet&nbsp;Explorer&nbsp;8 for example), and it will only remove the first occurrence of the item.</p>

<h2>Remove ALL instances from an array</h2>

<pre><code>function remove(arr, item) {
    for (var i = arr.length; i--;) {
        if (arr[i] === item) {
            arr.splice(i, 1);
        }
    }
}
</code></pre>

<p>It loops through the array backwards (since indices and length will change as items are removed) and removes the item if it's found. It works in all browsers.</p>
","135786","","4944490","","2018-06-08 08:26:59","2018-06-08 08:26:59","","","","8","","",""
"18104035","2","","5767325","2013-08-07 12:57:55","","11","","<p><strong>Create new array:</strong></p>

<pre><code>var my_array = new Array();
</code></pre>

<p><strong>Add elements to this array:</strong></p>

<pre><code>my_array.push(""element1"");
</code></pre>

<p><strong>The function indexOf (Returns index or -1 when not found) :</strong></p>

<pre><code>var indexOf = function(needle) 
{
    if(typeof Array.prototype.indexOf === 'function') // newer browsers
    {
        indexOf = Array.prototype.indexOf;
    } 
    else // older browsers
    {
        indexOf = function(needle) 
        {
            var index = -1;

            for(var i = 0; i &lt; this.length; i++) 
            {
                if(this[i] === needle) 
                {
                    index = i;
                    break;
                }
            }
            return index;
        };
    }

    return indexOf.call(this, needle);
};
</code></pre>

<p><strong>Check index of this element (tested with firefox and IE8+):</strong></p>

<pre><code>var index = indexOf.call(my_array, ""element1"");
</code></pre>

<p><strong>Remove 1 element located at index from the array</strong></p>

<pre><code>my_array.splice(index, 1);
</code></pre>
","1251989","","","","","2013-08-07 12:57:55","","","","0","","",""
"17792447","2","","2831059","2013-07-22 16:12:57","","109","","<p>Rails 4 has been updated, so the change method can be used in the migration to drop a column and the migration will successfully rollback.  Please read the following warning for Rails 3 applications:</p>

<p><strong>Rails 3 Warning</strong></p>

<p>Please note that when you use this command:</p>

<pre><code>rails generate migration RemoveFieldNameFromTableName field_name:datatype
</code></pre>

<p>The generated migration will look something like this:</p>

<pre><code>  def up
    remove_column :table_name, :field_name
  end

  def down
    add_column :table_name, :field_name, :datatype
  end
</code></pre>

<p>Make sure to not use the change method when removing columns from a database table (example of what you don't want in the migration file in Rails 3 apps):</p>

<pre><code>  def change
    remove_column :table_name, :field_name
  end
</code></pre>

<p>The change method in Rails 3 is not smart when it comes to remove_column, so you will not be able to rollback this migration. </p>
","1125159","","72321","","2014-03-10 20:17:07","2014-03-10 20:17:07","","","","5","","",""
"13322172","2","","5209814","2012-11-10 12:44:47","","61","","<p>first, set <code>position: fixed</code> and  <code>left: 50%</code>, and second — now your start is a center and you can set new position with margin.</p>
","766307","","1827600","","2014-04-01 10:39:33","2014-04-01 10:39:33","","","","3","","",""
"11556597","2","","11556493","2012-07-19 08:13:33","","130","","<p>The <code>li</code> tag has a property called <code>list-style-position</code>. This makes your bullets inside or outside the list. On default, it’s set to <code>inside</code>. That makes your text wrap around it. If you set it to <code>outside</code>, the text of your <code>li</code> tags will be aligned.</p>

<p>The downside of that is that your bullets won't be aligned with the text outside the <code>ul</code>. If you want to align it with the other text you can use a margin.</p>

<pre><code>ul li {
    /*
     * We want the bullets outside of the list,
     * so the text is aligned. Now the actual bullet
     * is outside of the list’s container
     */
    list-style-position: outside;

    /*
     * Because the bullet is outside of the list’s
     * container, indent the list entirely
     */
    margin-left: 1em;
}
</code></pre>

<hr>

<p><strong>Edit 15th of March, 2014</strong>
Seeing people are still coming in from Google, I felt like the original answer could use some improvement</p>

<ul>
<li>Changed the code block to provide <strong>just</strong> the solution</li>
<li>Changed the indentation unit to <code>em</code>’s</li>
<li>Each property is applied to the <code>ul</code> element</li>
<li>Good comments :)</li>
</ul>
","612734","","612734","","2014-06-30 08:03:06","2014-06-30 08:03:06","","","","6","","",""
"11556534","2","","11556493","2012-07-19 08:10:09","","29","","<p>Here is a good <a href=""http://dipaksblogonline.blogspot.in/2012/01/indenting-second-line-of-li-list-items.html"">example</a> - </p>

<pre><code>ul li{
    list-style-type: disc;
    list-style-position: inside;
    padding: 10px 0 10px 20px;
    text-indent: -1em;
}
</code></pre>

<p>Working Demo: <a href=""http://jsfiddle.net/d9VNk/"">http://jsfiddle.net/d9VNk/</a></p>
","795961","","795961","","2012-07-19 08:22:08","2012-07-19 08:22:08","","","","1","","",""
"11490436","2","","11490322","2012-07-15 08:11:49","","-3","","<p>you can also do - </p>

<pre><code>(1..3).each {|n| eval ""MyClass#{n}.methods""}
</code></pre>
","1485305","","","","","2012-07-15 08:11:49","","","","4","","",""
"11490338","2","","11490322","2012-07-15 07:46:27","","15","","<p><code>constantize</code> fits the bill. You can read more about it <a href=""http://api.rubyonrails.org/classes/ActiveSupport/Inflector.html#method-i-constantize"">here</a>. In your case it would be something like:</p>

<pre><code>(1..3).each do |n|
  ""MyClass#{n}"".constantize.methods
end
</code></pre>
","285614","","","","","2012-07-15 07:46:27","","","","1","","",""
"9529444","2","","9529300","2012-03-02 07:17:45","","167","","<p>Yes, you can apply CSS to SVG, but you need to match the element, just as when styling HTML.  If you just want to apply it to all SVG paths, you could use, for example:</p>

<pre><code>​path {
    fill: blue;
}​
</code></pre>

<p>External CSS appears to override the path's <code>fill</code> attribute, at least in WebKit and Gecko-based browsers I tested.  Of course, if you write, say, <code>&lt;path style=""fill: green""&gt;</code> then that will override external CSS as well.</p>
","6372","","","","","2012-03-02 07:17:45","","","","9","","",""
"3742902","2","","2831059","2010-09-18 18:22:03","","349","","<p>For older versions of Rails </p>

<pre><code>ruby script/generate migration RemoveFieldNameFromTableName field_name:datatype
</code></pre>

<p>For Rails 3 and up</p>

<pre><code>rails generate migration RemoveFieldNameFromTableName field_name:datatype
</code></pre>
","361142","","337085","","2017-11-11 01:54:51","2017-11-11 01:54:51","","","","6","","",""
"3047117","2","","3047056","2010-06-15 16:31:12","","270","","<p>When a CSS property shows as struck-through, it means that the crossed-out style was applied, but then overridden by a more specific selector, a more local rule, or by a later property within the same rule. </p>

<p>(Special cases: a style will also be shown as struck-through if a style exists in an matching rule but is commented out, or if you've manually disabled it by unchecking it within the Chrome developer tools. It will also show as crossed out, but with an error icon, if the style has a syntax error.)</p>

<p>For example, if a background color was applied to all <code>div</code>s, but a different background color was applied to <code>div</code>s with a certain id, the first color will show up but will be crossed out, as the second color has replaced it (in the property list for the <code>div</code> with that id).</p>
","1237","","1237","","2015-09-09 20:07:00","2015-09-09 20:07:00","","","","7","","",""
"3028670","2","","3028653","2010-06-12 12:33:45","","382","","<p>A member route will require an ID, because it acts on a <em>member</em>. A collection route doesn't because it acts on a collection of objects. Preview is an example of a member route, because it acts on (and displays) a single object. Search is an example of a collection route, because it acts on (and displays) a collection of objects.</p>
","1109","","","","","2010-06-12 12:33:45","","","","8","","",""
"2878408","2","","2878248","2010-05-20 22:47:48","","182","","<p>Regarding tables names, case, etc, the prevalent convention is:</p>

<ul>
<li>SQL keywords: <code>UPPER CASE</code></li>
<li>names (identifiers): <code>lower_case_with_underscores</code></li>
</ul>

<p><a href=""https://www.postgresql.org/docs/current/static/sql-syntax-lexical.html"" rel=""noreferrer"">For example</a>:</p>

<pre><code>UPDATE my_table SET name = 5;
</code></pre>

<p>This is not written in stone, but the bit about <strong>identifiers in lower case</strong> is highly recommended, IMO. Postgresql treats identifiers case insensitively when not quoted (it actually folds them to lowercase internally), and case sensitively when quoted; many people are not aware of this idiosyncrasy. Using always lowercase you are safe. Anyway, it's acceptable to use <code>camelCase</code> or <code>PascalCase</code> (or <code>UPPER_CASE</code>), as long as you are consistent: either quote identifiers always or never (and this includes the schema creation!).</p>

<p>I am not aware of many more conventions or style guides. Surrogate keys are normally made from a sequence (usually with the <a href=""http://www.postgresql.org/docs/current/static/datatype-numeric.html#datatype-serial"" rel=""noreferrer""><code>serial</code></a> macro), it would be convenient to stick to that naming for those sequences if you create them by hand (<code>tablename_colname_seq</code>).</p>

<p>See also some discussion <a href=""http://www.postgresonline.com/journal/index.php?/archives/94-SQL-Coding-Standards-To-Each-His-Own.html"" rel=""noreferrer"">here</a>, <a href=""http://www.postgresonline.com/journal/index.php?/archives/97-SQL-Coding-Standards-To-Each-His-Own-Part-II.html"" rel=""noreferrer"">here</a> and (for general SQL) <a href=""https://stackoverflow.com/questions/522356/what-sql-coding-standard-do-you-follow"">here</a>, all with several related links.</p>
","277304","","277304","","2017-10-27 11:52:19","2017-10-27 11:52:19","","","","9","","",""
"55037191","2","","38713405","2019-03-07 06:16:10","","0","","<p>Essentially, there are three settings that one has to update (Preference >> settings):</p>

<ul>
<li><p><strong>workbench.editor.enablePreview:</strong> set this to globally enable or
disable preview editors </p></li>
<li><p><strong>workbench.editor.enablePreviewFromQuickOpen:</strong> set this to enable or
disable preview editors when opened from Quick Open</p></li>
<li><p><strong>workbench.editor.showTabs:</strong> finally one will need to set this<br>
otherwise, there will be no tabs displayed and you will just be<br>
wondering why setting/unsetting the above two did not work</p></li>
</ul>
","2875250","","","","","2019-03-07 06:16:10","","","","0","","",""
"54094030","2","","5767325","2019-01-08 14:34:36","","4","","<p>Removing a particular element/string from an array can be done in a one liner:
I still think this is the most elegant one liner you can get for this type of problem : </p>

<pre><code>theArray.splice(theArray.indexOf(""stringToRemoveFromArray""), 1);
</code></pre>

<p>where 'theArray' is the array you want to remove something particular from.</p>
","6327086","","6327086","","2019-01-28 20:12:37","2019-01-28 20:12:37","","","","0","","",""
"54038137","2","","38713405","2019-01-04 11:31:27","","2","","<p>As hktang above indicates:</p>

<p>one <strong>Click</strong> opens the file in preview mode (header text in italics)</p>

<p><strong>Double click</strong> the same file, it goes out of preview-mode (header text changes from italic to normal font)</p>

<p>I think this is a ""comprimise"" feature allowing users,  to ""navigate"" both worlds; preview and none-preview.  </p>

<ul>
<li>All you do is click the file to open it in the right panel.   </li>
<li>Then immediately double click it to keep it there.</li>
<li>Or - just treble click. File opens in none preview mode.</li>
</ul>

<p>HTH
Paul S.</p>
","10504318","","10504318","","2019-01-04 12:07:23","2019-01-04 12:07:23","","","","0","","",""
"50808647","2","","50807929","2018-06-12 03:00:00","","0","","<p>The <code>Route</code> and <code>Link</code> components are meant to be used together to accomplish different tasks in the application. Firstly, the React Router library is intended to achieve two things: 1. Ensures that state transitions are captured in the URL bar. 2. Ensures that the application starts from a proper state when the visited through a stateful URL address. </p>

<p><strong>Role of Link Component</strong>
The Link component is a way to transition route state in the application. So if you click a link component, a route state will be activated. For example:</p>

<pre><code>&lt;Link to=""/example"" /&gt;
</code></pre>

<p>will register that the application is in the '/example' state. At this point, it is up to the  component to render the appropriate content as such.</p>

<pre><code>&lt;Route path=""/example"" render={Profile] /&gt; 
</code></pre>

<p>So in a nutshell, the Link component is responsible for the transition from state to state (page to page), while the Route component is responsible to act as a switch to display certain components based on route state. </p>

<p>The best example of the library usage can be found at <a href=""https://reacttraining.com/react-router/"" rel=""nofollow noreferrer"">https://reacttraining.com/react-router/</a></p>
","2613577","","","","","2018-06-12 03:00:00","","","","0","","",""
"48130849","2","","48107353","2018-01-06 19:06:27","","8","","<p>For <code>overflow: auto</code> to work (i.e., for scrollbars to render) browsers need a trigger. This trigger is usually a height / width limitation that forces an overflow condition, which launches the scrollbars.</p>

<p>Trigger conditions vary among browsers. They also vary among CSS technologies, such as flex, grid and block layouts.</p>

<p>In this particular case, there are several logical places to establish an overflow condition, but none of them work.</p>

<ol>
<li><p>You could target the grid item, as you have tried:</p>

<pre><code>.content {
   height: 1000px
   overflow: auto;
}
</code></pre>

<p>But it doesn't work. No scrollbar appears on the fluid item.</p></li>
</ol>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>body {
  margin: 0;
  /* overflow: hidden; */
}

.page {
  display: grid;
  grid-template-rows: 55px auto;
  grid-template-columns: 20vh auto;
  grid-template-areas: ""nav header"" 
                       ""nav content"";
}

.nav {
  grid-area: nav;
  background-color: aqua;
}

.header {
  grid-area: header;
  background-color: lightgrey;
}

.content {
  grid-area: content;
  height: 1000px;
  overflow: auto;
  background-color: red;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""page""&gt;
  &lt;div class=""nav""&gt;Side nav&lt;/div&gt;
  &lt;div class=""header""&gt;Header&lt;/div&gt;
  &lt;div class=""content""&gt;
    &lt;h1&gt;title&lt;/h1&gt;
  &lt;/div&gt;
  &lt;div&gt;</code></pre>
</div>
</div>
</p>

<ol start=""2"">
<li><p>You could target the row itself, as I tested:</p>

<pre><code>.page {
   display: grid;
   grid-template-rows: 55px 1000px;
}

.content {
   overflow: auto;
}
</code></pre>

<p>But that doesn't work either. Still no scrollbar on the fluid item.</p></li>
</ol>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>body {
  margin: 0;
  /* overflow: hidden; */
}

.page {
  display: grid;
  grid-template-rows: 55px 1000px;
  grid-template-columns: 20vh auto;
  grid-template-areas:
    ""nav header""
    ""nav content"";
}

.nav {
  grid-area: nav;
  background-color: aqua;
}

.header {
  grid-area: header;
  background-color: lightgrey;
}

.content {
  overflow: auto;
  grid-area: content;
  background-color: red;
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""page""&gt;
  &lt;div class=""nav""&gt;Side nav&lt;/div&gt;
  &lt;div class=""header""&gt;Header&lt;/div&gt;
  &lt;div class=""content""&gt;
    &lt;h1&gt;title&lt;/h1&gt;
  &lt;/div&gt;
  &lt;div&gt;</code></pre>
</div>
</div>
</p>

<ol start=""3"">
<li><p>So I targeted a <em>child</em> of the grid item. DING DING DING! That worked.</p>

<p>No need for fixed positioning. No need for sticky positioning. This works across all browsers that support Grid Layout.</p></li>
</ol>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>body {
  margin: 0;
}

.page {
  display: grid;
  grid-template-rows: 55px calc(100vh - 55px);  /* height limitation on second row */
  grid-template-columns: 20vh auto;
  grid-template-areas: ""nav header"" 
                       ""nav content"";
}

.nav {
  grid-area: nav;
  background-color: aqua;
}

.header {
  grid-area: header;
  background-color: lightgrey;
}

.content {
  grid-area: content;
  background-color: red;
  overflow: auto;                          /* overflow condition on parent */
}

article {
  height: 1000px;                          /* height set on child; triggers scroll */
}</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""page""&gt;
  &lt;div class=""nav""&gt;Side nav&lt;/div&gt;
  &lt;div class=""header""&gt;Header&lt;/div&gt;
  &lt;div class=""content""&gt;
    &lt;article&gt;&lt;!-- new section for content --&gt;
      &lt;h1&gt;title&lt;/h1&gt;
    &lt;/article&gt;
  &lt;/div&gt;
  &lt;div&gt;</code></pre>
</div>
</div>
</p>

<h2><a href=""https://jsfiddle.net/hh5vxa0e/2/"" rel=""noreferrer"">jsFiddle demo</a></h2>
","3597276","","3597276","","2018-01-06 19:33:19","2018-01-06 19:33:19","","","","2","","",""
"47478967","2","","5767325","2017-11-24 19:17:36","","2","","<p>What a shame you have an array of integers, not an object where the keys are string equivalents of these integers.</p>

<p>I've looked through a lot of these answers and they all seem to use ""brute force"" as far as I can see. I haven't examined every single one, apologies if this is not so. For a smallish array this is fine, but what if you have 000s of integers in it?</p>

<p>Correct me if I'm wrong, but can't we assume that in a <code>key =&gt; value</code> map, of the kind which a JS object is, that the key retrieval mechanism can be assumed to be highly engineered and optimised?  (NB if some super-expert tells me that this is not the case, I can suggest using ES6's <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"" rel=""nofollow noreferrer"">Map class</a> instead, which certainly will be).</p>

<p>I'm just suggesting that, in certain circumstances, the best solution might be to convert your array to an object... the problem being, of course, that you might have repeating integer values.  I suggest putting those in buckets as the ""value"" part of the <code>key =&gt; value</code> entries. (NB if you are sure you don't have any repeating array elements this can be much simpler: values ""same as"" keys, and just go <code>Object.values(...)</code> to get back your modified array).</p>

<p>So you could do:</p>

<pre><code>const arr = [ 1, 2, 55, 3, 2, 4, 55 ];
const f =   function( acc, val, currIndex ){ 
    // not seen this val before: make bucket... NB although val's typeof is 'number'
    // there is seamless equivalence between the object key (always string)
    // and this variable val 
    ! ( val in acc ) ? acc[ val ] = []: 0;
    // drop another array index in the bucket
    acc[ val ].push( currIndex );
    return acc; 
}
const myIntsMapObj = arr.reduce( f, {});

console.log( myIntsMapObj );
</code></pre>

<p>output:</p>

<blockquote>
  <p>Object [ &lt;1 empty slot>, Array<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"" rel=""nofollow noreferrer"">1</a>, Array[2], Array<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"" rel=""nofollow noreferrer"">1</a>, Array<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"" rel=""nofollow noreferrer"">1</a>, &lt;5
  empty slots>, 46 more… ]</p>
</blockquote>

<p>it is then easy to delete all the numbers 55</p>

<pre><code>delete myIntsMapObj[ 55 ]; // again, although keys are strings this works
</code></pre>

<p>You don't have to delete them all: index values are pushed into their buckets in order of appearance, so (for example):</p>

<pre><code>myIntsMapObj[ 55 ].shift(); // and
myIntsMapObj[ 55 ].pop(); 
</code></pre>

<p>will delete the first and last occurrence respectively.  You can count frequency of occurrence easily, replace all 55s with 3s by transferring the contents of one bucket to another, etc.</p>

<p>... getting back your modified int array is slightly involved: but each bucket contains the index (in the original array) of the value represented by the (string) key. Each of these bucket values is also unique: so you turn them into keys in a new object, with the (real) integer from the ""integer string key"" as value... then sort the keys and go <code>Object.values( ... )</code>.</p>

<p>This sounds very involved and time-consuming... but obviously everything depends on the circumstances and desired usage. My understanding is that all versions and contexts of JS operate only in one thread, and the thread doesn't ""let go"", so there could be some horrible congestion with a ""brute force"" method: caused not so much by the <code>indexOf</code> ops, but multiple repeated <code>slice</code>/<code>splice</code> ops.</p>

<p><strong>Addendum</strong><br>
If you're <strong>sure</strong> this is too much engineering for your use case surely the simplest ""brute force"" approach is</p>

<pre><code>const arr = [ 1, 2, 3, 66, 8, 2, 3, 2 ];
const newArray = arr.filter( number =&gt; number !== 3 );
console.log( newArray )
</code></pre>

<p>(yes, other answers have spotted <code>Array.prototype.filter</code>...)</p>
","595305","","595305","","2017-12-12 21:52:18","2017-12-12 21:52:18","","","","0","","",""
"53887037","2","","5767325","2018-12-21 15:10:47","","4","","<p>Yet another answer, to me the simpler is the better, and as we are in 2018 (near 2019) i give you this (near) one liner to answer the original question :</p>

<pre><code>Array.prototype.remove = function (value) { 
    return this.filter(f =&gt; f != value) 
}
</code></pre>

<p>The useful thing is that you can use it in a curry expression such as :</p>

<p><code>[1,2,3].remove(2).sort()</code></p>
","1667822","","1667822","","2018-12-21 15:16:28","2018-12-21 15:16:28","","","","0","","",""
"50835322","2","","2373074","2018-06-13 10:49:39","","1","","<p>It makes no difference to the html but if you are generating html dynamically with another programming language then one way may be easier than another.</p>

<p>For example in <em>Java</em> the double quote is used to indicate the start and end of a String, so if you want to include a doublequote within the String you have to escape it with a backslash.</p>

<pre><code>String s = ""&lt;a href=\""link\""&gt;a Link&lt;/a&gt;""
</code></pre>

<p>You don't have such a problem with the single quote, therefore use of the single quote makes for more readable code in Java. </p>

<pre><code>String s = ""&lt;a href='link'&gt;a Link&lt;/a&gt;""
</code></pre>

<p>Especially if you have to write html elements with many attributes.(Note I usually use a library such as jhtml to write html in Java, but not always practical to do so) </p>
","1480018","","","","","2018-06-13 10:49:39","","","","1","","",""